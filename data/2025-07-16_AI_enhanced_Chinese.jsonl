{"id": "2507.10583", "categories": ["cs.SE", "cs.AI", "cs.CY"], "pdf": "https://arxiv.org/pdf/2507.10583", "abs": "https://arxiv.org/abs/2507.10583", "authors": ["Daniil Orel", "Indraneil Paul", "Iryna Gurevych", "Preslav Nakov"], "title": "$\\texttt{Droid}$: A Resource Suite for AI-Generated Code Detection", "comment": null, "summary": "In this work, we compile $\\textbf{$\\texttt{DroidCollection}$}$, the most\nextensive open data suite for training and evaluating machine-generated code\ndetectors, comprising over a million code samples, seven programming languages,\noutputs from 43 coding models, and over three real-world coding domains.\nAlongside fully AI-generated samples, our collection includes human-AI\nco-authored code, as well as adversarial samples explicitly crafted to evade\ndetection. Subsequently, we develop $\\textbf{$\\texttt{DroidDetect}$}$, a suite\nof encoder-only detectors trained using a multi-task objective over\n$\\texttt{DroidCollection}$. Our experiments show that existing detectors'\nperformance fails to generalise to diverse coding domains and programming\nlanguages outside of their narrow training data. Additionally, we demonstrate\nthat while most detectors are easily compromised by humanising the output\ndistributions using superficial prompting and alignment approaches, this\nproblem can be easily amended by training on a small amount of adversarial\ndata. Finally, we demonstrate the effectiveness of metric learning and\nuncertainty-based resampling as means to enhance detector training on possibly\nnoisy distributions.", "AI": {"tldr": "\u8bba\u6587\u4ecb\u7ecd\u4e86$\texttt{DroidCollection}$\uff0c\u4e00\u4e2a\u5305\u542b\u767e\u4e07\u4ee3\u7801\u6837\u672c\u3001\u4e03\u79cd\u7f16\u7a0b\u8bed\u8a00\u548c43\u79cd\u7f16\u7801\u6a21\u578b\u8f93\u51fa\u7684\u5f00\u653e\u6570\u636e\u96c6\uff0c\u7528\u4e8e\u8bad\u7ec3\u548c\u8bc4\u4f30\u673a\u5668\u751f\u6210\u4ee3\u7801\u68c0\u6d4b\u5668\u3002\u540c\u65f6\u63d0\u51fa\u4e86$\texttt{DroidDetect}$\u68c0\u6d4b\u5668\u5957\u4ef6\uff0c\u901a\u8fc7\u591a\u4efb\u52a1\u76ee\u6807\u8bad\u7ec3\uff0c\u89e3\u51b3\u4e86\u73b0\u6709\u68c0\u6d4b\u5668\u5728\u591a\u6837\u5316\u573a\u666f\u4e2d\u7684\u6cdb\u5316\u95ee\u9898\u3002", "motivation": "\u73b0\u6709\u673a\u5668\u751f\u6210\u4ee3\u7801\u68c0\u6d4b\u5668\u5728\u591a\u6837\u5316\u7f16\u7a0b\u8bed\u8a00\u548c\u9886\u57df\u4e2d\u7684\u6cdb\u5316\u80fd\u529b\u4e0d\u8db3\uff0c\u4e14\u6613\u53d7\u5bf9\u6297\u6027\u6837\u672c\u653b\u51fb\u3002", "method": "\u6784\u5efa$\texttt{DroidCollection}$\u6570\u636e\u96c6\uff0c\u5e76\u5f00\u53d1$\texttt{DroidDetect}$\u68c0\u6d4b\u5668\u5957\u4ef6\uff0c\u91c7\u7528\u591a\u4efb\u52a1\u76ee\u6807\u548c\u5bf9\u6297\u6027\u6570\u636e\u8bad\u7ec3\u3002", "result": "\u5b9e\u9a8c\u8868\u660e$\texttt{DroidDetect}$\u5728\u591a\u6837\u5316\u573a\u666f\u4e2d\u8868\u73b0\u4f18\u4e8e\u73b0\u6709\u68c0\u6d4b\u5668\uff0c\u4e14\u5bf9\u6297\u6027\u8bad\u7ec3\u80fd\u6709\u6548\u63d0\u5347\u9c81\u68d2\u6027\u3002", "conclusion": "$\texttt{DroidCollection}$\u548c$\texttt{DroidDetect}$\u4e3a\u673a\u5668\u751f\u6210\u4ee3\u7801\u68c0\u6d4b\u63d0\u4f9b\u4e86\u66f4\u5168\u9762\u7684\u6570\u636e\u96c6\u548c\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2507.10584", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.10584", "abs": "https://arxiv.org/abs/2507.10584", "authors": ["Francesco Romeo", "Luigi Arena", "Francesco Blefari", "Francesco Aurelio Pironti", "Matteo Lupinacci", "Angelo Furfaro"], "title": "ARPaCCino: An Agentic-RAG for Policy as Code Compliance", "comment": null, "summary": "Policy as Code (PaC) is a paradigm that encodes security and compliance\npolicies into machine-readable formats, enabling automated enforcement in\nInfrastructure as Code (IaC) environments. However, its adoption is hindered by\nthe complexity of policy languages and the risk of misconfigurations. In this\nwork, we present ARPaCCino, an agentic system that combines Large Language\nModels (LLMs), Retrieval-Augmented-Generation (RAG), and tool-based validation\nto automate the generation and verification of PaC rules. Given natural\nlanguage descriptions of the desired policies, ARPaCCino generates formal Rego\nrules, assesses IaC compliance, and iteratively refines the IaC configurations\nto ensure conformance. Thanks to its modular agentic architecture and\nintegration with external tools and knowledge bases, ARPaCCino supports policy\nvalidation across a wide range of technologies, including niche or emerging IaC\nframeworks. Experimental evaluation involving a Terraform-based case study\ndemonstrates ARPaCCino's effectiveness in generating syntactically and\nsemantically correct policies, identifying non-compliant infrastructures, and\napplying corrective modifications, even when using smaller, open-weight LLMs.\nOur results highlight the potential of agentic RAG architectures to enhance the\nautomation, reliability, and accessibility of PaC workflows.", "AI": {"tldr": "ARPaCCino\u662f\u4e00\u4e2a\u7ed3\u5408LLMs\u3001RAG\u548c\u5de5\u5177\u9a8c\u8bc1\u7684\u7cfb\u7edf\uff0c\u7528\u4e8e\u81ea\u52a8\u5316\u751f\u6210\u548c\u9a8c\u8bc1Policy as Code\u89c4\u5219\uff0c\u63d0\u5347IaC\u73af\u5883\u4e2d\u7684\u5408\u89c4\u6027\u3002", "motivation": "Policy as Code\u7684\u91c7\u7528\u53d7\u9650\u4e8e\u590d\u6742\u7684\u7b56\u7565\u8bed\u8a00\u548c\u914d\u7f6e\u9519\u8bef\u98ce\u9669\uff0cARPaCCino\u65e8\u5728\u89e3\u51b3\u8fd9\u4e9b\u95ee\u9898\u3002", "method": "\u5229\u7528LLMs\u3001RAG\u548c\u5de5\u5177\u9a8c\u8bc1\uff0c\u4ece\u81ea\u7136\u8bed\u8a00\u63cf\u8ff0\u751f\u6210Rego\u89c4\u5219\uff0c\u5e76\u9a8c\u8bc1\u548c\u4f18\u5316IaC\u914d\u7f6e\u3002", "result": "\u5b9e\u9a8c\u8bc1\u660eARPaCCino\u80fd\u751f\u6210\u6b63\u786e\u7b56\u7565\uff0c\u8bc6\u522b\u4e0d\u5408\u89c4\u57fa\u7840\u8bbe\u65bd\uff0c\u5e76\u8fdb\u884c\u4fee\u6b63\uff0c\u5373\u4f7f\u4f7f\u7528\u5c0f\u578bLLMs\u3002", "conclusion": "ARPaCCino\u5c55\u793a\u4e86\u57fa\u4e8eRAG\u7684\u667a\u80fd\u67b6\u6784\u5728\u63d0\u5347PaC\u81ea\u52a8\u5316\u3001\u53ef\u9760\u6027\u548c\u53ef\u8bbf\u95ee\u6027\u65b9\u9762\u7684\u6f5c\u529b\u3002"}}
{"id": "2507.10590", "categories": ["cs.SE", "cs.AI", "cs.IR"], "pdf": "https://arxiv.org/pdf/2507.10590", "abs": "https://arxiv.org/abs/2507.10590", "authors": ["Mojtaba Eshghie"], "title": "Repairing Language Model Pipelines by Meta Self-Refining Competing Constraints at Runtime", "comment": null, "summary": "Language Model (LM) pipelines can dynamically refine their outputs against\nprogrammatic constraints. However, their effectiveness collapses when faced\nwith competing soft constraints, leading to inefficient backtracking loops\nwhere satisfying one constraint violates another. We introduce Meta\nSelf-Refining, a framework that equips LM pipelines with a meta-corrective\nlayer to repair these competitions at runtime/inference-time. Our approach\nmonitors the pipeline's execution history to detect oscillatory failures. Upon\ndetection, it invokes a meta-repairer LM that analyzes the holistic state of\nthe backtracking attempts and synthesizes a strategic instruction to balance\nthe competing requirements. This self-repair instruction guides the original LM\nout of a failing refining loop towards a successful output. Our results show\nMeta Self-Refining can successfully repair these loops, leading to more\nefficient LM programs.", "AI": {"tldr": "Meta Self-Refining\u6846\u67b6\u901a\u8fc7\u5143\u4fee\u6b63\u5c42\u4fee\u590d\u8bed\u8a00\u6a21\u578b\u7ba1\u9053\u4e2d\u7684\u7ade\u4e89\u7ea6\u675f\u95ee\u9898\uff0c\u63d0\u9ad8\u6548\u7387\u3002", "motivation": "\u8bed\u8a00\u6a21\u578b\u7ba1\u9053\u5728\u7ade\u4e89\u8f6f\u7ea6\u675f\u4e0b\u6548\u7387\u4f4e\u4e0b\uff0c\u9700\u52a8\u6001\u4fee\u590d\u3002", "method": "\u5f15\u5165\u5143\u4fee\u6b63\u5c42\uff0c\u76d1\u6d4b\u6267\u884c\u5386\u53f2\u5e76\u8c03\u7528\u5143\u4fee\u590d\u5668LM\u5408\u6210\u7b56\u7565\u6307\u4ee4\u3002", "result": "\u6210\u529f\u4fee\u590d\u5faa\u73af\uff0c\u63d0\u5347\u8bed\u8a00\u6a21\u578b\u7a0b\u5e8f\u6548\u7387\u3002", "conclusion": "Meta Self-Refining\u6709\u6548\u89e3\u51b3\u7ade\u4e89\u7ea6\u675f\u95ee\u9898\uff0c\u4f18\u5316\u8bed\u8a00\u6a21\u578b\u8f93\u51fa\u3002"}}
{"id": "2507.10593", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.10593", "abs": "https://arxiv.org/abs/2507.10593", "authors": ["Peng Ding"], "title": "ToolRegistry: A Protocol-Agnostic Tool Management Library for Function-Calling LLMs", "comment": null, "summary": "Large Language Model (LLM) applications are increasingly relying on external\ntools to extend their capabilities beyond text generation. However, current\ntool integration approaches suffer from fragmentation, protocol limitations,\nand implementation complexity, leading to substantial development overhead.\nThis paper presents Toolregistry, a protocol-agnostic tool management library\nthat simplifies tool registration, representation, execution, and lifecycle\nmanagement via a unified interface. Our evaluation demonstrates that\n\\toolregistry achieves 60-80% reduction in tool integration code, up to 3.1x\nperformance improvements through concurrent execution, and 100% compatibility\nwith OpenAI function calling standards. Real-world case studies show\nsignificant improvements in development efficiency and code maintainability\nacross diverse integration scenarios. \\toolregistry is open-source and\navailable at https://github.com/Oaklight/ToolRegistry, with comprehensive\ndocumentation at https://toolregistry.readthedocs.io/.", "AI": {"tldr": "Toolregistry\u662f\u4e00\u4e2a\u534f\u8bae\u65e0\u5173\u7684\u5de5\u5177\u7ba1\u7406\u5e93\uff0c\u901a\u8fc7\u7edf\u4e00\u63a5\u53e3\u7b80\u5316\u5de5\u5177\u6ce8\u518c\u3001\u8868\u793a\u3001\u6267\u884c\u548c\u751f\u547d\u5468\u671f\u7ba1\u7406\uff0c\u663e\u8457\u51cf\u5c11\u96c6\u6210\u4ee3\u7801\u5e76\u63d0\u5347\u6027\u80fd\u3002", "motivation": "\u5f53\u524d\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u5e94\u7528\u7684\u5de5\u5177\u96c6\u6210\u65b9\u6cd5\u5b58\u5728\u788e\u7247\u5316\u3001\u534f\u8bae\u9650\u5236\u548c\u5b9e\u73b0\u590d\u6742\u6027\u95ee\u9898\uff0c\u5bfc\u81f4\u5f00\u53d1\u6210\u672c\u9ad8\u3002", "method": "\u63d0\u51faToolregistry\uff0c\u4e00\u4e2a\u534f\u8bae\u65e0\u5173\u7684\u5de5\u5177\u7ba1\u7406\u5e93\uff0c\u63d0\u4f9b\u7edf\u4e00\u63a5\u53e3\u7ba1\u7406\u5de5\u5177\u3002", "result": "Toolregistry\u51cf\u5c1160-80%\u7684\u96c6\u6210\u4ee3\u7801\uff0c\u6027\u80fd\u63d0\u53473.1\u500d\uff0c100%\u517c\u5bb9OpenAI\u51fd\u6570\u8c03\u7528\u6807\u51c6\u3002", "conclusion": "Toolregistry\u663e\u8457\u63d0\u5347\u5f00\u53d1\u6548\u7387\u548c\u4ee3\u7801\u53ef\u7ef4\u62a4\u6027\uff0c\u5df2\u5728\u771f\u5b9e\u573a\u666f\u4e2d\u9a8c\u8bc1\u6548\u679c\u3002"}}
{"id": "2507.10640", "categories": ["cs.SE", "cs.LG", "cs.SI", "D.2.2"], "pdf": "https://arxiv.org/pdf/2507.10640", "abs": "https://arxiv.org/abs/2507.10640", "authors": ["Labiba Farah", "Mohammad Ridwan Kabir", "Shohel Ahmed", "MD Mohaymen Ul Anam", "Md. Sakibul Islam"], "title": "SENSOR: An ML-Enhanced Online Annotation Tool to Uncover Privacy Concerns from User Reviews in Social-Media Applications", "comment": "26 pages, 9 figures, 5 tables", "summary": "The widespread use of social media applications has raised significant\nprivacy concerns, often highlighted in user reviews. These reviews also provide\ndevelopers with valuable insights into improving apps by addressing issues and\nintroducing better features. However, the sheer volume and nuanced nature of\nreviews make manual identification and prioritization of privacy-related\nconcerns challenging for developers. Previous studies have developed software\nutilities to automatically classify user reviews as privacy-relevant,\nprivacy-irrelevant, bug reports, feature requests, etc., using machine\nlearning. Notably, there is a lack of focus on classifying reviews specifically\nas privacy-related feature requests, privacy-related bug reports, or\nprivacy-irrelevant. This paper introduces SENtinel SORt (SENSOR), an automated\nonline annotation tool designed to help developers annotate and classify user\nreviews into these categories. For automating the annotation of such reviews,\nthis paper introduces the annotation model, GRACE (GRU-based Attention with\nCBOW Embedding), using Gated Recurrent Units (GRU) with Continuous Bag of Words\n(CBOW) and Attention mechanism. Approximately 16000 user reviews from seven\npopular social media apps on Google Play Store, including Instagram, Facebook,\nWhatsApp, Snapchat, X (formerly Twitter), Facebook Lite, and Line were\nanalyzed. Two annotators manually labelled the reviews, achieving a Cohen's\nKappa value of 0.87, ensuring a labeled dataset with high inter-rater agreement\nfor training machine learning models. Among the models tested, GRACE\ndemonstrated the best performance (macro F1-score: 0.9434, macro ROC-AUC:\n0.9934, and accuracy: 95.10%) despite class imbalance. SENSOR demonstrates\nsignificant potential to assist developers with extracting and addressing\nprivacy-related feature requests or bug reports from user reviews, enhancing\nuser privacy and trust.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51faSENSOR\u5de5\u5177\u548cGRACE\u6a21\u578b\uff0c\u7528\u4e8e\u81ea\u52a8\u5206\u7c7b\u7528\u6237\u8bc4\u8bba\u4e2d\u7684\u9690\u79c1\u76f8\u5173\u8bf7\u6c42\u548c\u95ee\u9898\uff0c\u63d0\u5347\u5f00\u53d1\u8005\u5904\u7406\u9690\u79c1\u95ee\u9898\u7684\u6548\u7387\u3002", "motivation": "\u793e\u4ea4\u5a92\u4f53\u7684\u9690\u79c1\u95ee\u9898\u65e5\u76ca\u7a81\u51fa\uff0c\u7528\u6237\u8bc4\u8bba\u4e2d\u5927\u91cf\u9690\u79c1\u76f8\u5173\u53cd\u9988\u96be\u4ee5\u624b\u52a8\u5904\u7406\uff0c\u73b0\u6709\u5de5\u5177\u7f3a\u4e4f\u5bf9\u9690\u79c1\u76f8\u5173\u8bf7\u6c42\u548c\u95ee\u9898\u7684\u4e13\u95e8\u5206\u7c7b\u3002", "method": "\u63d0\u51faGRACE\u6a21\u578b\uff08\u57fa\u4e8eGRU\u3001CBOW\u548c\u6ce8\u610f\u529b\u673a\u5236\uff09\u548cSENSOR\u5de5\u5177\uff0c\u5206\u679016000\u6761\u7528\u6237\u8bc4\u8bba\uff0c\u901a\u8fc7\u9ad8\u4e00\u81f4\u6027\u6807\u6ce8\u8bad\u7ec3\u6a21\u578b\u3002", "result": "GRACE\u6a21\u578b\u8868\u73b0\u6700\u4f73\uff08F1\u5206\u65700.9434\uff0cROC-AUC 0.9934\uff0c\u51c6\u786e\u738795.10%\uff09\uff0c\u80fd\u6709\u6548\u5206\u7c7b\u9690\u79c1\u76f8\u5173\u8bc4\u8bba\u3002", "conclusion": "SENSOR\u5de5\u5177\u548cGRACE\u6a21\u578b\u80fd\u663e\u8457\u5e2e\u52a9\u5f00\u53d1\u8005\u63d0\u53d6\u548c\u5904\u7406\u9690\u79c1\u76f8\u5173\u53cd\u9988\uff0c\u63d0\u5347\u7528\u6237\u9690\u79c1\u4fdd\u62a4\u3002"}}
{"id": "2507.10641", "categories": ["cs.SE", "cs.AI", "cs.CL"], "pdf": "https://arxiv.org/pdf/2507.10641", "abs": "https://arxiv.org/abs/2507.10641", "authors": ["Jayant Havare", "Saurav Chaudhary", "Ganesh Ramakrishnan", "Kaushik Maharajan", "Srikanth Tamilselvam"], "title": "A Code Comprehension Benchmark for Large Language Models for Code", "comment": "10 Pages, 5 Figures", "summary": "Large Language Models have shown impressive capabilities in coding tasks like\ncode generation and code completion, as they have been trained on a large\namount of code data. Also, since one of the core pretraining objectives is Next\nToken Prediction, these models tends to learn surface-level syntactic patterns\nin code. However, this does not guarantee code comprehension ability i.e. the\nability to capture the semantics of the code. In our opinion, this is the\nreason why these models often underperform on tasks that require deeper\nsemantic understanding, such as code debugging and code optimization. To\naddress this, we propose fine-tuning these models specifically for code\ncomprehension tasks using large-scale datasets, enabling them to develop a more\nrobust understanding of code semantics. We evaluate three code models of\nvarying sizes on a suite of code comprehension tasks designed to assess\nsemantic understanding beyond surface-level syntactic pattern matching. In\nparticular, we analyze performance on the Subjectivity Grading Task and observe\nthat model performance improves after fine-tuning on relevant downstream tasks.\nThe most significant improvement is seen in the QWQ-32B model, where accuracy\nincreases from 70% to 83.47%. A similar or explainable trend is observed across\nother models, clearly indicating an enhancement in code comprehension ability.\nAmong the models studied, the DPO-fine-tuned Codestral-22B achieves the highest\nmicro-accuracy of 87.66% on the Subjectivity Grading Task.", "AI": {"tldr": "\u8bba\u6587\u63a2\u8ba8\u4e86\u5927\u8bed\u8a00\u6a21\u578b\u5728\u4ee3\u7801\u4efb\u52a1\u4e2d\u7684\u8868\u73b0\uff0c\u63d0\u51fa\u901a\u8fc7\u5fae\u8c03\u63d0\u5347\u4ee3\u7801\u7406\u89e3\u80fd\u529b\uff0c\u5e76\u5728\u5b9e\u9a8c\u4e2d\u9a8c\u8bc1\u4e86\u5176\u6709\u6548\u6027\u3002", "motivation": "\u5927\u8bed\u8a00\u6a21\u578b\u5728\u4ee3\u7801\u751f\u6210\u7b49\u4efb\u52a1\u4e2d\u8868\u73b0\u4f18\u5f02\uff0c\u4f46\u7f3a\u4e4f\u6df1\u5c42\u6b21\u8bed\u4e49\u7406\u89e3\u80fd\u529b\uff0c\u5bfc\u81f4\u5728\u8c03\u8bd5\u548c\u4f18\u5316\u7b49\u4efb\u52a1\u4e2d\u8868\u73b0\u4e0d\u4f73\u3002", "method": "\u901a\u8fc7\u5728\u5927\u89c4\u6a21\u6570\u636e\u96c6\u4e0a\u5fae\u8c03\u6a21\u578b\uff0c\u4e13\u95e8\u9488\u5bf9\u4ee3\u7801\u7406\u89e3\u4efb\u52a1\u8fdb\u884c\u4f18\u5316\u3002", "result": "\u5b9e\u9a8c\u663e\u793a\u5fae\u8c03\u540e\u6a21\u578b\u6027\u80fd\u663e\u8457\u63d0\u5347\uff0c\u5c24\u5176\u662fQWQ-32B\u6a21\u578b\u51c6\u786e\u7387\u4ece70%\u63d0\u9ad8\u523083.47%\uff0cCodestral-22B\u6a21\u578b\u5728\u4e3b\u89c2\u8bc4\u5206\u4efb\u52a1\u4e2d\u8fbe\u523087.66%\u7684\u51c6\u786e\u7387\u3002", "conclusion": "\u5fae\u8c03\u80fd\u6709\u6548\u63d0\u5347\u5927\u8bed\u8a00\u6a21\u578b\u7684\u4ee3\u7801\u7406\u89e3\u80fd\u529b\uff0c\u5c24\u5176\u5728\u9700\u8981\u8bed\u4e49\u7406\u89e3\u7684\u4efb\u52a1\u4e2d\u8868\u73b0\u66f4\u4f18\u3002"}}
{"id": "2507.10646", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.10646", "abs": "https://arxiv.org/abs/2507.10646", "authors": ["Myeongsoo Kim", "Shweta Garg", "Baishakhi Ray", "Varun Kumar", "Anoop Deoras"], "title": "CodeAssistBench (CAB): Dataset & Benchmarking for Multi-turn Chat-Based Code Assistance", "comment": null, "summary": "Programming assistants powered by large language models have transformed\nsoftware development, yet most benchmarks focus narrowly on code generation\ntasks. Recent efforts like InfiBench and StackEval attempt to address this gap\nusing Stack Overflow data but remain limited to single-turn interactions in\nisolated contexts, require significant manual curation, and fail to represent\ncomplete project environments. We introduce CodeAssistBench (CAB), the first\nbenchmark framework for evaluating multi-turn programming assistance in\nrealistic settings that address real-world questions about actual codebases.\nUnlike existing programming Q&A benchmarks, CAB automatically generates\nscalable datasets from question-related GitHub issues using configurable\nparameters (e.g., repository creation date, star count, programming languages),\nand includes automatic containerization of codebases for evaluation. It then\nevaluates models through simulated users in these containerized environments\nwith full codebase access. Using this framework, we constructed a test set of\n3,286 real-world programming questions across 231 repositories, spanning seven\nprogramming languages and diverse problem domains. Our evaluation of leading\nLLMs reveals a substantial capability gap: while models perform well on Stack\nOverflow questions with success rates of 70-83%, they resolve only up to 16.49%\nof CAB's recent issues. This discrepancy highlights the challenges of providing\nassistance in complex, project-specific contexts versus answering standalone\nquestions.", "AI": {"tldr": "CodeAssistBench (CAB) \u662f\u4e00\u4e2a\u8bc4\u4f30\u591a\u8f6e\u7f16\u7a0b\u8f85\u52a9\u7684\u57fa\u51c6\u6846\u67b6\uff0c\u9488\u5bf9\u771f\u5b9e\u4ee3\u7801\u5e93\u4e2d\u7684\u95ee\u9898\uff0c\u63ed\u793a\u4e86\u73b0\u6709\u5927\u8bed\u8a00\u6a21\u578b\u5728\u590d\u6742\u9879\u76ee\u73af\u5883\u4e2d\u7684\u80fd\u529b\u5dee\u8ddd\u3002", "motivation": "\u73b0\u6709\u7684\u7f16\u7a0b\u52a9\u624b\u57fa\u51c6\u4e3b\u8981\u5173\u6ce8\u4ee3\u7801\u751f\u6210\u4efb\u52a1\uff0c\u7f3a\u4e4f\u5bf9\u591a\u8f6e\u4ea4\u4e92\u548c\u771f\u5b9e\u9879\u76ee\u73af\u5883\u7684\u8bc4\u4f30\u3002CAB \u65e8\u5728\u586b\u8865\u8fd9\u4e00\u7a7a\u767d\u3002", "method": "CAB \u901a\u8fc7\u4ece GitHub \u95ee\u9898\u81ea\u52a8\u751f\u6210\u53ef\u6269\u5c55\u7684\u6570\u636e\u96c6\uff0c\u5e76\u5229\u7528\u5bb9\u5668\u5316\u4ee3\u7801\u5e93\u548c\u6a21\u62df\u7528\u6237\u8fdb\u884c\u8bc4\u4f30\u3002", "result": "\u6d4b\u8bd5\u96c6\u5305\u542b 3,286 \u4e2a\u771f\u5b9e\u7f16\u7a0b\u95ee\u9898\uff0c\u8bc4\u4f30\u663e\u793a\u6a21\u578b\u5728 Stack Overflow \u4e0a\u8868\u73b0\u826f\u597d\uff0870-83%\uff09\uff0c\u4f46\u5728 CAB \u7684\u590d\u6742\u95ee\u9898\u4e0a\u6210\u529f\u7387\u4ec5 16.49%\u3002", "conclusion": "CAB \u63ed\u793a\u4e86\u73b0\u6709\u6a21\u578b\u5728\u590d\u6742\u9879\u76ee\u73af\u5883\u4e2d\u7684\u5c40\u9650\u6027\uff0c\u5f3a\u8c03\u4e86\u771f\u5b9e\u573a\u666f\u8bc4\u4f30\u7684\u91cd\u8981\u6027\u3002"}}
{"id": "2507.10729", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.10729", "abs": "https://arxiv.org/abs/2507.10729", "authors": ["Duong Nguyen", "Thanh Le-Cong", "Triet Huynh Minh Le", "M. Ali Babar", "Quyet-Thang Huynh"], "title": "Toward Realistic Evaluations of Just-In-Time Vulnerability Prediction", "comment": null, "summary": "Modern software systems are increasingly complex, presenting significant\nchallenges in quality assurance. Just-in-time vulnerability prediction (JIT-VP)\nis a proactive approach to identifying vulnerable commits and providing early\nwarnings about potential security risks. However, we observe that current\nJIT-VP evaluations rely on an idealized setting, where the evaluation datasets\nare artificially balanced, consisting exclusively of vulnerability-introducing\nand vulnerability-fixing commits.\n  To address this limitation, this study assesses the effectiveness of JIT-VP\ntechniques under a more realistic setting that includes both\nvulnerability-related and vulnerability-neutral commits. To enable a reliable\nevaluation, we introduce a large-scale public dataset comprising over one\nmillion commits from FFmpeg and the Linux kernel. Our empirical analysis of\neight state-of-the-art JIT-VP techniques reveals a significant decline in\npredictive performance when applied to real-world conditions; for example, the\naverage PR-AUC on Linux drops 98\\% from 0.805 to 0.016. This discrepancy is\nmainly attributed to the severe class imbalance in real-world datasets, where\nvulnerability-introducing commits constitute only a small fraction of all\ncommits.\n  To mitigate this issue, we explore the effectiveness of widely adopted\ntechniques for handling dataset imbalance, including customized loss functions,\noversampling, and undersampling. Surprisingly, our experimental results\nindicate that these techniques are ineffective in addressing the imbalance\nproblem in JIT-VP. These findings underscore the importance of realistic\nevaluations of JIT-VP and the need for domain-specific techniques to address\ndata imbalance in such scenarios.", "AI": {"tldr": "\u8be5\u7814\u7a76\u8bc4\u4f30\u4e86\u5373\u65f6\u6f0f\u6d1e\u9884\u6d4b\uff08JIT-VP\uff09\u5728\u771f\u5b9e\u573a\u666f\u4e0b\u7684\u6709\u6548\u6027\uff0c\u53d1\u73b0\u5176\u5728\u73b0\u5b9e\u6570\u636e\u96c6\u4e0a\u6027\u80fd\u663e\u8457\u4e0b\u964d\uff0c\u5e76\u63d0\u51fa\u73b0\u6709\u6570\u636e\u4e0d\u5e73\u8861\u5904\u7406\u6280\u672f\u6548\u679c\u6709\u9650\u3002", "motivation": "\u5f53\u524dJIT-VP\u8bc4\u4f30\u4f9d\u8d56\u7406\u60f3\u5316\u6570\u636e\u96c6\uff0c\u7f3a\u4e4f\u5bf9\u73b0\u5b9e\u573a\u666f\u4e2d\u6f0f\u6d1e\u76f8\u5173\u548c\u65e0\u5173\u63d0\u4ea4\u7684\u8003\u8651\uff0c\u7814\u7a76\u65e8\u5728\u586b\u8865\u8fd9\u4e00\u7a7a\u767d\u3002", "method": "\u5f15\u5165\u5305\u542bFFmpeg\u548cLinux\u5185\u6838\u7684\u767e\u4e07\u7ea7\u63d0\u4ea4\u6570\u636e\u96c6\uff0c\u8bc4\u4f30\u516b\u79cd\u5148\u8fdbJIT-VP\u6280\u672f\uff0c\u5e76\u63a2\u7d22\u6570\u636e\u4e0d\u5e73\u8861\u5904\u7406\u6280\u672f\u3002", "result": "\u73b0\u5b9e\u6761\u4ef6\u4e0bJIT-VP\u6027\u80fd\u5927\u5e45\u4e0b\u964d\uff08\u5982Linux\u7684PR-AUC\u4ece0.805\u964d\u81f30.016\uff09\uff0c\u73b0\u6709\u4e0d\u5e73\u8861\u5904\u7406\u6280\u672f\u6548\u679c\u4e0d\u4f73\u3002", "conclusion": "\u5f3a\u8c03JIT-VP\u9700\u57fa\u4e8e\u771f\u5b9e\u573a\u666f\u8bc4\u4f30\uff0c\u5e76\u9700\u5f00\u53d1\u9886\u57df\u7279\u5b9a\u6280\u672f\u4ee5\u89e3\u51b3\u6570\u636e\u4e0d\u5e73\u8861\u95ee\u9898\u3002"}}
{"id": "2507.10753", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.10753", "abs": "https://arxiv.org/abs/2507.10753", "authors": ["Kasper Lien Oftebro", "Anh Nguyen-Duc", "Kai-Kristian Kemell"], "title": "GenAI-Enabled Backlog Grooming in Agile Software Projects: An Empirical Study", "comment": null, "summary": "Effective backlog management is critical for ensuring that development teams\nremain aligned with evolving requirements and stakeholder expectations.\nHowever, as product backlogs consistently grow in scale and complexity, they\ntend to become cluttered with redundant, outdated, or poorly defined tasks,\ncomplicating prioritization and decision making processes. This study\ninvestigates whether a generative-AI (GenAI) assistant can automate backlog\ngrooming in Agile software projects without sacrificing accuracy or\ntransparency. Through Design Science cycles, we developed a Jira plug-in that\nembeds backlog issues with the vector database, detects duplicates via cosine\nsimilarity, and leverage the GPT-4o model to propose merges, deletions, or new\nissues. We found that AI-assisted backlog grooming achieved 100 percent\nprecision while reducing the time-to-completion by 45 percent. The findings\ndemonstrated the tool's potential to streamline backlog refinement processes\nwhile improving user experiences.", "AI": {"tldr": "\u7814\u7a76\u63a2\u8ba8\u4e86\u4f7f\u7528\u751f\u6210\u5f0fAI\u52a9\u624b\u81ea\u52a8\u7ba1\u7406\u654f\u6377\u9879\u76ee\u4e2d\u7684\u5f85\u529e\u4e8b\u9879\u6e05\u5355\uff0c\u901a\u8fc7Jira\u63d2\u4ef6\u5b9e\u73b0\u9ad8\u7cbe\u5ea6\u548c\u9ad8\u6548\u7684\u65f6\u95f4\u8282\u7701\u3002", "motivation": "\u968f\u7740\u5f85\u529e\u4e8b\u9879\u6e05\u5355\u89c4\u6a21\u548c\u590d\u6742\u6027\u7684\u589e\u52a0\uff0c\u5197\u4f59\u548c\u6a21\u7cca\u4efb\u52a1\u5bfc\u81f4\u4f18\u5148\u7ea7\u548c\u51b3\u7b56\u56f0\u96be\uff0c\u9700\u63a2\u7d22AI\u81ea\u52a8\u5316\u89e3\u51b3\u65b9\u6848\u3002", "method": "\u901a\u8fc7\u8bbe\u8ba1\u79d1\u5b66\u5468\u671f\u5f00\u53d1Jira\u63d2\u4ef6\uff0c\u5229\u7528\u5411\u91cf\u6570\u636e\u5e93\u548cGPT-4o\u6a21\u578b\u68c0\u6d4b\u91cd\u590d\u4efb\u52a1\u5e76\u63d0\u51fa\u4f18\u5316\u5efa\u8bae\u3002", "result": "AI\u8f85\u52a9\u7684\u5f85\u529e\u4e8b\u9879\u7ba1\u7406\u5b9e\u73b0\u4e86100%\u7684\u7cbe\u786e\u5ea6\uff0c\u5e76\u5c06\u5b8c\u6210\u65f6\u95f4\u51cf\u5c11\u4e8645%\u3002", "conclusion": "\u8be5\u5de5\u5177\u80fd\u6709\u6548\u4f18\u5316\u5f85\u529e\u4e8b\u9879\u7ba1\u7406\u6d41\u7a0b\u5e76\u63d0\u5347\u7528\u6237\u4f53\u9a8c\u3002"}}
{"id": "2507.10785", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.10785", "abs": "https://arxiv.org/abs/2507.10785", "authors": ["Michael Neumann", "Eva-Maria Sch\u00f6n", "Mali Senapathi", "Maria Rauschenberger", "Tiago Silva da Silva"], "title": "Towards a Closer Collaboration Between Practice and Research in Agile Software Development Workshop: A Summary and Research Agenda", "comment": null, "summary": "Agile software development principles and values have been widely adopted\nacross various industries, influencing products and services globally. Despite\nits increasing popularity, a significant gap remains between research and\npractical implementation. This paper presents the findings of the first\ninternational workshop designed to foster collaboration between research and\npractice in agile software development. We discuss the main themes and factors\nidentified by the workshop participants that contribute to this gap, strategies\nto bridge it, and the challenges that require further research attention.", "AI": {"tldr": "\u672c\u6587\u603b\u7ed3\u4e86\u9996\u6b21\u56fd\u9645\u7814\u8ba8\u4f1a\u7684\u7814\u7a76\u6210\u679c\uff0c\u63a2\u8ba8\u4e86\u654f\u6377\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7814\u7a76\u4e0e\u5b9e\u9645\u5e94\u7528\u4e4b\u95f4\u7684\u5dee\u8ddd\u53ca\u5176\u89e3\u51b3\u7b56\u7565\u3002", "motivation": "\u654f\u6377\u8f6f\u4ef6\u5f00\u53d1\u867d\u5e7f\u6cdb\u5e94\u7528\uff0c\u4f46\u7814\u7a76\u4e0e\u5b9e\u9645\u5b9e\u65bd\u4e4b\u95f4\u5b58\u5728\u663e\u8457\u5dee\u8ddd\uff0c\u9700\u4fc3\u8fdb\u4e24\u8005\u7684\u534f\u4f5c\u3002", "method": "\u901a\u8fc7\u9996\u6b21\u56fd\u9645\u7814\u8ba8\u4f1a\uff0c\u6536\u96c6\u53c2\u4e0e\u8005\u5bf9\u5dee\u8ddd\u4e3b\u9898\u3001\u5f71\u54cd\u56e0\u7d20\u53ca\u89e3\u51b3\u7b56\u7565\u7684\u8ba8\u8bba\u3002", "result": "\u8bc6\u522b\u4e86\u5bfc\u81f4\u5dee\u8ddd\u7684\u4e3b\u8981\u56e0\u7d20\u548c\u6311\u6218\uff0c\u5e76\u63d0\u51fa\u4e86\u53ef\u80fd\u7684\u89e3\u51b3\u7b56\u7565\u3002", "conclusion": "\u9700\u8fdb\u4e00\u6b65\u7814\u7a76\u4ee5\u89e3\u51b3\u654f\u6377\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7814\u7a76\u4e0e\u5b9e\u9645\u5e94\u7528\u4e4b\u95f4\u7684\u5dee\u8ddd\u3002"}}
{"id": "2507.10818", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.10818", "abs": "https://arxiv.org/abs/2507.10818", "authors": ["Jasmine Latendresse", "SayedHassan Khatoonabadi", "Emad Shihab"], "title": "How Robust are LLM-Generated Library Imports? An Empirical Study using Stack Overflow", "comment": null, "summary": "Software libraries are central to the functionality, security, and\nmaintainability of modern code. As developers increasingly turn to Large\nLanguage Models (LLMs) to assist with programming tasks, understanding how\nthese models recommend libraries is essential. In this paper, we conduct an\nempirical study of six state-of-the-art LLMs, both proprietary and open-source,\nby prompting them to solve real-world Python problems sourced from Stack\nOverflow. We analyze the types of libraries they import, the characteristics of\nthose libraries, and the extent to which the recommendations are usable out of\nthe box. Our results show that LLMs predominantly favour third-party libraries\nover standard ones, and often recommend mature, popular, and permissively\nlicensed dependencies. However, we also identify gaps in usability: 4.6% of the\nlibraries could not be resolved automatically due to structural mismatches\nbetween import names and installable packages, and only two models (out of six)\nprovided installation guidance. While the generated code is technically valid,\nthe lack of contextual support places the burden of manually resolving\ndependencies on the user. Our findings offer actionable insights for both\ndevelopers and researchers, and highlight opportunities to improve the\nreliability and usability of LLM-generated code in the context of software\ndependencies.", "AI": {"tldr": "LLMs\u503e\u5411\u4e8e\u63a8\u8350\u6210\u719f\u3001\u6d41\u884c\u7684\u7b2c\u4e09\u65b9\u5e93\uff0c\u4f46\u5b58\u5728\u53ef\u7528\u6027\u5dee\u8ddd\uff0c\u5982\u4f9d\u8d56\u89e3\u6790\u95ee\u9898\u548c\u5b89\u88c5\u6307\u5bfc\u4e0d\u8db3\u3002", "motivation": "\u4e86\u89e3LLMs\u5982\u4f55\u63a8\u8350\u5e93\u5bf9\u4ee3\u7801\u529f\u80fd\u3001\u5b89\u5168\u548c\u7ef4\u62a4\u81f3\u5173\u91cd\u8981\u3002", "method": "\u901a\u8fc7\u4eceStack Overflow\u83b7\u53d6\u7684Python\u95ee\u9898\uff0c\u5bf9\u516d\u79cdLLMs\u8fdb\u884c\u5b9e\u8bc1\u7814\u7a76\uff0c\u5206\u6790\u5176\u63a8\u8350\u7684\u5e93\u7c7b\u578b\u548c\u7279\u6027\u3002", "result": "LLMs\u4e3b\u8981\u63a8\u8350\u7b2c\u4e09\u65b9\u5e93\uff0c\u4f464.6%\u7684\u5e93\u56e0\u5bfc\u5165\u540d\u79f0\u4e0e\u53ef\u5b89\u88c5\u5305\u4e0d\u5339\u914d\u800c\u65e0\u6cd5\u81ea\u52a8\u89e3\u6790\uff0c\u4ec5\u4e24\u79cd\u6a21\u578b\u63d0\u4f9b\u5b89\u88c5\u6307\u5bfc\u3002", "conclusion": "\u7814\u7a76\u4e3a\u5f00\u53d1\u8005\u548c\u7814\u7a76\u4eba\u5458\u63d0\u4f9b\u4e86\u6539\u8fdbLLM\u751f\u6210\u4ee3\u7801\u53ef\u9760\u6027\u548c\u53ef\u7528\u6027\u7684\u673a\u4f1a\u3002"}}
{"id": "2507.10822", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.10822", "abs": "https://arxiv.org/abs/2507.10822", "authors": ["Omar Elsisi", "Glaucia Melo"], "title": "Past, Present and Future: Exploring Adaptive AI in Software Development Bots", "comment": null, "summary": "Conversational agents, such as chatbots and virtual assistants, have become\nessential in software development, boosting productivity, collaboration, and\nautomating various tasks. This paper examines the role of adaptive AI-powered\nconversational agents in software development, highlighting their ability to\noffer dynamic, context-aware assistance to developers. Unlike traditional\nrule-based systems, adaptive AI agents use machine learning and natural\nlanguage processing to learn from interactions and improve over time, providing\nmore personalized and responsive help. We look at how these tools have evolved\nfrom simple query-based systems to advanced AI-driven solutions like GitHub\nCopilot and Microsoft Teams bots. We also explore the challenges of integrating\nadaptive AI into software development processes. The study aims to assess the\nbenefits and limitations of these systems, address concerns like data privacy\nand ethical issues, and offer insights into their future use in the field.\nUltimately, adaptive AI chatbots have great potential to revolutionize software\ndevelopment by delivering real-time, customized support and enhancing the\nefficiency of development cycles.", "AI": {"tldr": "\u672c\u6587\u63a2\u8ba8\u4e86\u81ea\u9002\u5e94AI\u9a71\u52a8\u7684\u5bf9\u8bdd\u4ee3\u7406\u5728\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7684\u4f5c\u7528\uff0c\u5f3a\u8c03\u5176\u52a8\u6001\u3001\u4e0a\u4e0b\u6587\u611f\u77e5\u7684\u8f85\u52a9\u80fd\u529b\uff0c\u5e76\u5206\u6790\u4e86\u5176\u4f18\u52bf\u3001\u6311\u6218\u53ca\u672a\u6765\u6f5c\u529b\u3002", "motivation": "\u7814\u7a76\u81ea\u9002\u5e94AI\u5bf9\u8bdd\u4ee3\u7406\u5982\u4f55\u901a\u8fc7\u673a\u5668\u5b66\u4e60\u548c\u81ea\u7136\u8bed\u8a00\u5904\u7406\u63d0\u5347\u5f00\u53d1\u6548\u7387\uff0c\u89e3\u51b3\u4f20\u7edf\u89c4\u5219\u7cfb\u7edf\u7684\u5c40\u9650\u6027\u3002", "method": "\u901a\u8fc7\u5206\u6790\u81ea\u9002\u5e94AI\u4ee3\u7406\uff08\u5982GitHub Copilot\u548cMicrosoft Teams\u673a\u5668\u4eba\uff09\u7684\u6f14\u53d8\uff0c\u8bc4\u4f30\u5176\u5728\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7684\u5e94\u7528\u548c\u96c6\u6210\u6311\u6218\u3002", "result": "\u81ea\u9002\u5e94AI\u4ee3\u7406\u80fd\u63d0\u4f9b\u4e2a\u6027\u5316\u3001\u5b9e\u65f6\u7684\u5f00\u53d1\u652f\u6301\uff0c\u663e\u8457\u63d0\u5347\u5f00\u53d1\u6548\u7387\uff0c\u4f46\u4e5f\u9762\u4e34\u6570\u636e\u9690\u79c1\u548c\u4f26\u7406\u95ee\u9898\u3002", "conclusion": "\u81ea\u9002\u5e94AI\u5bf9\u8bdd\u4ee3\u7406\u6709\u671b\u901a\u8fc7\u5b9a\u5236\u5316\u652f\u6301\u548c\u9ad8\u6548\u5f00\u53d1\u5468\u671f\u9769\u65b0\u8f6f\u4ef6\u5f00\u53d1\u9886\u57df\u3002"}}
{"id": "2507.10906", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.10906", "abs": "https://arxiv.org/abs/2507.10906", "authors": ["Qunhong Zeng", "Yuxia Zhang", "Zexiong Ma", "Bo Jiang", "Ningyuan Sun", "Klaas-Jan Stol", "Xingyu Mou", "Hui Liu"], "title": "Evaluating Generated Commit Messages with Large Language Models", "comment": null, "summary": "Commit messages are essential in software development as they serve to\ndocument and explain code changes. Yet, their quality often falls short in\npractice, with studies showing significant proportions of empty or inadequate\nmessages. While automated commit message generation has advanced significantly,\nparticularly with Large Language Models (LLMs), the evaluation of generated\nmessages remains challenging. Traditional reference-based automatic metrics\nlike BLEU, ROUGE-L, and METEOR have notable limitations in assessing commit\nmessage quality, as they assume a one-to-one mapping between code changes and\ncommit messages, leading researchers to rely on resource-intensive human\nevaluation. This study investigates the potential of LLMs as automated\nevaluators for commit message quality. Through systematic experimentation with\nvarious prompt strategies and state-of-the-art LLMs, we demonstrate that LLMs\ncombining Chain-of-Thought reasoning with few-shot demonstrations achieve near\nhuman-level evaluation proficiency. Our LLM-based evaluator significantly\noutperforms traditional metrics while maintaining acceptable reproducibility,\nrobustness, and fairness levels despite some inherent variability. This work\nconducts a comprehensive preliminary study on using LLMs for commit message\nevaluation, offering a scalable alternative to human assessment while\nmaintaining high-quality evaluation.", "AI": {"tldr": "\u8be5\u7814\u7a76\u63a2\u8ba8\u4e86\u5229\u7528\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u4f5c\u4e3a\u81ea\u52a8\u8bc4\u4f30\u63d0\u4ea4\u6d88\u606f\u8d28\u91cf\u7684\u5de5\u5177\uff0c\u53d1\u73b0\u5176\u7ed3\u5408\u94fe\u5f0f\u601d\u7ef4\u63a8\u7406\u548c\u5c11\u91cf\u793a\u4f8b\u540e\uff0c\u8bc4\u4f30\u80fd\u529b\u63a5\u8fd1\u4eba\u7c7b\u6c34\u5e73\uff0c\u663e\u8457\u4f18\u4e8e\u4f20\u7edf\u6307\u6807\u3002", "motivation": "\u63d0\u4ea4\u6d88\u606f\u5728\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u81f3\u5173\u91cd\u8981\uff0c\u4f46\u8d28\u91cf\u53c2\u5dee\u4e0d\u9f50\uff0c\u4f20\u7edf\u81ea\u52a8\u8bc4\u4f30\u6307\u6807\uff08\u5982BLEU\u3001ROUGE-L\uff09\u5b58\u5728\u5c40\u9650\u6027\uff0c\u4f9d\u8d56\u4eba\u5de5\u8bc4\u4f30\u6210\u672c\u9ad8\u3002", "method": "\u901a\u8fc7\u7cfb\u7edf\u5b9e\u9a8c\uff0c\u7814\u7a76\u7ed3\u5408\u94fe\u5f0f\u601d\u7ef4\u63a8\u7406\u548c\u5c11\u91cf\u793a\u4f8b\u7684LLMs\uff0c\u8bc4\u4f30\u5176\u5728\u63d0\u4ea4\u6d88\u606f\u8d28\u91cf\u8bc4\u4f30\u4e2d\u7684\u8868\u73b0\u3002", "result": "LLMs\u8bc4\u4f30\u5668\u5728\u4fdd\u6301\u53ef\u63a5\u53d7\u7684\u91cd\u73b0\u6027\u3001\u9c81\u68d2\u6027\u548c\u516c\u5e73\u6027\u7684\u540c\u65f6\uff0c\u663e\u8457\u4f18\u4e8e\u4f20\u7edf\u6307\u6807\uff0c\u63a5\u8fd1\u4eba\u7c7b\u6c34\u5e73\u3002", "conclusion": "LLMs\u4e3a\u63d0\u4ea4\u6d88\u606f\u8d28\u91cf\u8bc4\u4f30\u63d0\u4f9b\u4e86\u53ef\u6269\u5c55\u7684\u9ad8\u8d28\u91cf\u66ff\u4ee3\u65b9\u6848\uff0c\u51cf\u5c11\u4e86\u4eba\u5de5\u8bc4\u4f30\u7684\u4f9d\u8d56\u3002"}}
{"id": "2507.11059", "categories": ["cs.SE", "cs.AI", "cs.CL"], "pdf": "https://arxiv.org/pdf/2507.11059", "abs": "https://arxiv.org/abs/2507.11059", "authors": ["Pavel Adamenko", "Mikhail Ivanov", "Aidar Valeev", "Rodion Levichev", "Pavel Zadorozhny", "Ivan Lopatin", "Dmitry Babayev", "Alena Fenogenova", "Valentin Malykh"], "title": "SWE-MERA: A Dynamic Benchmark for Agenticly Evaluating Large Language Models on Software Engineering Tasks", "comment": null, "summary": "The rapid advancement of Large Language Models (LLMs) in software engineering\nhas revealed critical limitations in existing benchmarks, particularly the\nwidely used SWE-bench dataset. Recent studies have uncovered severe data\ncontamination issues, e.g. SWE-bench reports 32.67% of successful patches\ninvolve direct solution leakage and 31.08\\% pass due to inadequate test cases.\nWe introduce SWE-MERA, a dynamic, continuously updated benchmark designed to\naddress these fundamental challenges through an automated collection of\nreal-world GitHub issues and rigorous quality validation. Our approach\nimplements a reliable pipeline that ensures quality while minimizing\ncontamination risks, resulting in approximately 10,000 potential tasks with 300\nsamples currently available. Evaluation using the Aider coding agent\ndemonstrates strong discriminative power in state-of-the-art models. We report\nperformance across a dozen recent LLMs evaluated on tasks collected between\nSeptember 2024 and June 2025.", "AI": {"tldr": "\u8bba\u6587\u4ecb\u7ecd\u4e86SWE-MERA\uff0c\u4e00\u4e2a\u52a8\u6001\u66f4\u65b0\u7684\u57fa\u51c6\u6d4b\u8bd5\uff0c\u65e8\u5728\u89e3\u51b3SWE-bench\u4e2d\u7684\u6570\u636e\u6c61\u67d3\u95ee\u9898\uff0c\u5e76\u901a\u8fc7\u81ea\u52a8\u5316\u6536\u96c6GitHub\u95ee\u9898\u548c\u4e25\u683c\u9a8c\u8bc1\u63d0\u5347\u8d28\u91cf\u3002", "motivation": "\u73b0\u6709\u57fa\u51c6\u6d4b\u8bd5\uff08\u5982SWE-bench\uff09\u5b58\u5728\u6570\u636e\u6c61\u67d3\u548c\u6d4b\u8bd5\u4e0d\u8db3\u7684\u95ee\u9898\uff0c\u9650\u5236\u4e86\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u5728\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\u7684\u8bc4\u4f30\u6548\u679c\u3002", "method": "\u901a\u8fc7\u81ea\u52a8\u5316\u6536\u96c6\u771f\u5b9eGitHub\u95ee\u9898\u5e76\u5b9e\u65bd\u4e25\u683c\u8d28\u91cf\u9a8c\u8bc1\uff0c\u6784\u5efa\u52a8\u6001\u66f4\u65b0\u7684SWE-MERA\u57fa\u51c6\u6d4b\u8bd5\u3002", "result": "\u751f\u6210\u4e86\u7ea610,000\u4e2a\u6f5c\u5728\u4efb\u52a1\uff08\u5f53\u524d300\u4e2a\u6837\u672c\u53ef\u7528\uff09\uff0c\u5e76\u5728Aider\u7f16\u7801\u4ee3\u7406\u4e0a\u9a8c\u8bc1\u4e86\u5176\u533a\u5206\u80fd\u529b\u3002\u8bc4\u4f30\u4e8612\u4e2a\u6700\u65b0LLM\u7684\u6027\u80fd\u3002", "conclusion": "SWE-MERA\u901a\u8fc7\u52a8\u6001\u66f4\u65b0\u548c\u4e25\u683c\u9a8c\u8bc1\uff0c\u6709\u6548\u89e3\u51b3\u4e86\u6570\u636e\u6c61\u67d3\u95ee\u9898\uff0c\u4e3aLLM\u8bc4\u4f30\u63d0\u4f9b\u4e86\u66f4\u53ef\u9760\u7684\u57fa\u51c6\u3002"}}
{"id": "2507.11092", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.11092", "abs": "https://arxiv.org/abs/2507.11092", "authors": ["Gong Chen", "Wenjie Liu", "Xiaoyuan Xie", "Xunzhu Tang", "Tegawend\u00e9 F. Bissyand\u00e9", "Songqiang Chen"], "title": "MT4DP: Data Poisoning Attack Detection for DL-based Code Search Models via Metamorphic Testing", "comment": "27 pages", "summary": "Recently, several studies have indicated that data poisoning attacks pose a\nsevere security threat to deep learning-based (DL-based) code search models.\nAttackers inject carefully crafted malicious patterns into the training data,\nmisleading the code search model to learn these patterns during training.\nDuring the usage of the poisoned code search model for inference, once the\nmalicious pattern is triggered, the model tends to rank the vulnerability code\nhigher. However, existing detection methods for data poisoning attacks on\nDL-based code search models remain insufficiently effective. To address this\ncritical security issue, we propose MT4DP, a Data Poisoning Attack Detection\nFramework for DL-based Code Search Models via Metamorphic Testing. MT4DP\nintroduces a novel Semantically Equivalent Metamorphic Relation (SE-MR)\ndesigned to detect data poisoning attacks on DL-based code search models.\nSpecifically, MT4DP first identifies the high-frequency words from search\nqueries as potential poisoning targets and takes their corresponding queries as\nthe source queries. For each source query, MT4DP generates two semantically\nequivalent follow-up queries and retrieves its source ranking list. Then, each\nsource ranking list is re-ranked based on the semantic similarities between its\ncode snippets and the follow-up queries. Finally, variances between the source\nand re-ranked lists are calculated to reveal violations of the SE-MR and warn\nthe data poisoning attack. Experimental results demonstrate that MT4DP\nsignificantly enhances the detection of data poisoning attacks on DL-based code\nsearch models, outperforming the best baseline by 191% on average F1 score and\n265% on average precision. Our work aims to promote further research into\neffective techniques for mitigating data poisoning threats on DL-based code\nsearch models.", "AI": {"tldr": "MT4DP\u662f\u4e00\u79cd\u57fa\u4e8e\u8715\u53d8\u6d4b\u8bd5\u7684\u6570\u636e\u6295\u6bd2\u653b\u51fb\u68c0\u6d4b\u6846\u67b6\uff0c\u7528\u4e8e\u6df1\u5ea6\u5b66\u4e60\u4ee3\u7801\u641c\u7d22\u6a21\u578b\uff0c\u901a\u8fc7\u8bed\u4e49\u7b49\u6548\u8715\u53d8\u5173\u7cfb\u663e\u8457\u63d0\u5347\u68c0\u6d4b\u6548\u679c\u3002", "motivation": "\u6570\u636e\u6295\u6bd2\u653b\u51fb\u5bf9\u6df1\u5ea6\u5b66\u4e60\u4ee3\u7801\u641c\u7d22\u6a21\u578b\u6784\u6210\u4e25\u91cd\u5b89\u5168\u5a01\u80c1\uff0c\u73b0\u6709\u68c0\u6d4b\u65b9\u6cd5\u6548\u679c\u4e0d\u8db3\u3002", "method": "MT4DP\u5229\u7528\u9ad8\u9891\u8bcd\u8bc6\u522b\u6f5c\u5728\u6295\u6bd2\u76ee\u6807\uff0c\u751f\u6210\u8bed\u4e49\u7b49\u6548\u67e5\u8be2\u5e76\u91cd\u65b0\u6392\u5e8f\uff0c\u901a\u8fc7\u8ba1\u7b97\u6392\u540d\u5dee\u5f02\u68c0\u6d4b\u653b\u51fb\u3002", "result": "\u5b9e\u9a8c\u663e\u793aMT4DP\u5728F1\u5206\u6570\u548c\u7cbe\u786e\u7387\u4e0a\u5206\u522b\u6bd4\u57fa\u7ebf\u65b9\u6cd5\u63d0\u5347191%\u548c265%\u3002", "conclusion": "MT4DP\u6709\u6548\u63d0\u5347\u6570\u636e\u6295\u6bd2\u653b\u51fb\u68c0\u6d4b\u80fd\u529b\uff0c\u63a8\u52a8\u76f8\u5173\u5b89\u5168\u7814\u7a76\u3002"}}
{"id": "2507.11146", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.11146", "abs": "https://arxiv.org/abs/2507.11146", "authors": ["Tom Yaacov", "Gera Weiss", "Gal Amram", "Avi Hayoun"], "title": "Automata Models for Effective Bug Description", "comment": "Accepted to the ACM/IEEE 28th International Conference on Model\n  Driven Engineering Languages and Systems (MODELS 2025)", "summary": "Debugging complex systems is a crucial yet time-consuming task. This paper\npresents the use of automata learning and testing techniques to obtain concise\nand informative bug descriptions. We introduce the concepts of Failure\nExplanations (FE), Eventual Failure Explanations (EFE), and Early Detection\n(ED) to provide meaningful summaries of failing behavior patterns. By factoring\nout irrelevant information and focusing on essential test patterns, our\napproach aims to enhance bug detection and understanding. We evaluate our\nmethods using various test patterns and real-world benchmarks, demonstrating\ntheir effectiveness in producing compact and informative bug descriptions.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u81ea\u52a8\u673a\u5b66\u4e60\u548c\u6d4b\u8bd5\u6280\u672f\u7684\u8c03\u8bd5\u65b9\u6cd5\uff0c\u901a\u8fc7\u63d0\u53d6\u5173\u952e\u5931\u8d25\u6a21\u5f0f\u751f\u6210\u7b80\u6d01\u7684bug\u63cf\u8ff0\u3002", "motivation": "\u8c03\u8bd5\u590d\u6742\u7cfb\u7edf\u8017\u65f6\u4e14\u56f0\u96be\uff0c\u9700\u8981\u66f4\u9ad8\u6548\u7684bug\u63cf\u8ff0\u65b9\u6cd5\u3002", "method": "\u5f15\u5165\u5931\u8d25\u89e3\u91ca\uff08FE\uff09\u3001\u6700\u7ec8\u5931\u8d25\u89e3\u91ca\uff08EFE\uff09\u548c\u65e9\u671f\u68c0\u6d4b\uff08ED\uff09\u6982\u5ff5\uff0c\u63d0\u53d6\u5173\u952e\u6d4b\u8bd5\u6a21\u5f0f\u3002", "result": "\u5728\u591a\u79cd\u6d4b\u8bd5\u6a21\u5f0f\u548c\u5b9e\u9645\u57fa\u51c6\u4e2d\u9a8c\u8bc1\u4e86\u65b9\u6cd5\u7684\u6709\u6548\u6027\u3002", "conclusion": "\u8be5\u65b9\u6cd5\u80fd\u751f\u6210\u7d27\u51d1\u4e14\u4fe1\u606f\u4e30\u5bcc\u7684bug\u63cf\u8ff0\uff0c\u63d0\u5347\u8c03\u8bd5\u6548\u7387\u3002"}}
{"id": "2507.11199", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.11199", "abs": "https://arxiv.org/abs/2507.11199", "authors": ["Jinhan Kim", "Nargiz Humbatova", "Gunel Jahangirova", "Shin Yoo", "Paolo Tonella"], "title": "New Formulation of DNN Statistical Mutation Killing for Ensuring Monotonicity: A Technical Report", "comment": null, "summary": "Mutation testing has emerged as a powerful technique for evaluating the\neffectiveness of test suites for Deep Neural Networks. Among existing\napproaches, the statistical mutant killing criterion of DeepCrime has leveraged\nstatistical testing to determine whether a mutant significantly differs from\nthe original model. However, it suffers from a critical limitation: it violates\nthe monotonicity property, meaning that expanding a test set may result in\npreviously killed mutants no longer being classified as killed. In this\ntechnical report, we propose a new formulation of statistical mutant killing\nbased on Fisher exact test that preserves the statistical rigour of it while\nensuring monotonicity.", "AI": {"tldr": "\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8eFisher\u7cbe\u786e\u68c0\u9a8c\u7684\u7edf\u8ba1\u7a81\u53d8\u6740\u6b7b\u51c6\u5219\uff0c\u89e3\u51b3\u4e86DeepCrime\u4e2d\u8fdd\u53cd\u5355\u8c03\u6027\u7684\u95ee\u9898\u3002", "motivation": "DeepCrime\u7684\u7edf\u8ba1\u7a81\u53d8\u6740\u6b7b\u51c6\u5219\u5b58\u5728\u8fdd\u53cd\u5355\u8c03\u6027\u7684\u95ee\u9898\uff0c\u5373\u6269\u5927\u6d4b\u8bd5\u96c6\u53ef\u80fd\u5bfc\u81f4\u5df2\u6740\u6b7b\u7684\u7a81\u53d8\u4e0d\u518d\u88ab\u5206\u7c7b\u4e3a\u6740\u6b7b\u3002", "method": "\u91c7\u7528Fisher\u7cbe\u786e\u68c0\u9a8c\u91cd\u65b0\u5b9a\u4e49\u7edf\u8ba1\u7a81\u53d8\u6740\u6b7b\u51c6\u5219\uff0c\u4fdd\u6301\u7edf\u8ba1\u4e25\u8c28\u6027\u7684\u540c\u65f6\u786e\u4fdd\u5355\u8c03\u6027\u3002", "result": "\u65b0\u65b9\u6cd5\u5728\u4fdd\u6301\u7edf\u8ba1\u4e25\u8c28\u6027\u7684\u540c\u65f6\u89e3\u51b3\u4e86\u5355\u8c03\u6027\u95ee\u9898\u3002", "conclusion": "\u63d0\u51fa\u7684Fisher\u7cbe\u786e\u68c0\u9a8c\u65b9\u6cd5\u6709\u6548\u89e3\u51b3\u4e86DeepCrime\u7684\u5355\u8c03\u6027\u95ee\u9898\uff0c\u540c\u65f6\u4fdd\u6301\u4e86\u7edf\u8ba1\u4e25\u8c28\u6027\u3002"}}
{"id": "2507.11272", "categories": ["cs.SE", "cs.IR"], "pdf": "https://arxiv.org/pdf/2507.11272", "abs": "https://arxiv.org/abs/2507.11272", "authors": ["Anh Nguyen-Duc", "Chien Vu Manh", "Bao Anh Tran", "Viet Phuong Ngo", "Luan Le Chi", "Anh Quang Nguyen"], "title": "An Empirical Study of Multi-Agent RAG for Real-World University Admissions Counseling", "comment": null, "summary": "This paper presents MARAUS (Multi-Agent and Retrieval-Augmented University\nAdmission System), a real-world deployment of a conversational AI platform for\nhigher education admissions counseling in Vietnam. While large language models\n(LLMs) offer potential for automating advisory tasks, most existing solutions\nremain limited to prototypes or synthetic benchmarks. MARAUS addresses this gap\nby combining hybrid retrieval, multi-agent orchestration, and LLM-based\ngeneration into a system tailored for real-world university admissions. In\ncollaboration with the University of Transport Technology (UTT) in Hanoi, we\nconducted a two-phase study involving technical development and real-world\nevaluation. MARAUS processed over 6,000 actual user interactions, spanning six\ncategories of queries. Results show substantial improvements over LLM-only\nbaselines: on average 92 percent accuracy, hallucination rates reduced from 15\nprecent to 1.45 percent, and average response times below 4 seconds. The system\noperated cost-effectively, with a two-week deployment cost of 11.58 USD using\nGPT-4o mini. This work provides actionable insights for the deployment of\nagentic RAG systems in low-resource educational settings.", "AI": {"tldr": "MARAUS\u662f\u4e00\u4e2a\u7ed3\u5408\u591a\u667a\u80fd\u4f53\u3001\u68c0\u7d22\u589e\u5f3a\u548cLLM\u7684\u5927\u5b66\u62db\u751f\u54a8\u8be2\u7cfb\u7edf\uff0c\u5728\u8d8a\u5357\u5b9e\u9645\u90e8\u7f72\u4e2d\u8868\u73b0\u51fa\u8272\uff0c\u663e\u8457\u63d0\u5347\u4e86\u51c6\u786e\u6027\u548c\u6548\u7387\u3002", "motivation": "\u73b0\u6709\u57fa\u4e8eLLM\u7684\u62db\u751f\u54a8\u8be2\u7cfb\u7edf\u591a\u4e3a\u539f\u578b\u6216\u5408\u6210\u57fa\u51c6\uff0cMARAUS\u65e8\u5728\u586b\u8865\u8fd9\u4e00\u7a7a\u767d\uff0c\u4e3a\u5b9e\u9645\u5e94\u7528\u63d0\u4f9b\u9ad8\u6548\u3001\u4f4e\u6210\u672c\u7684\u89e3\u51b3\u65b9\u6848\u3002", "method": "\u7ed3\u5408\u6df7\u5408\u68c0\u7d22\u3001\u591a\u667a\u80fd\u4f53\u534f\u540c\u548cLLM\u751f\u6210\u6280\u672f\uff0c\u4e0e\u8d8a\u5357\u6cb3\u5185\u8fd0\u8f93\u6280\u672f\u5927\u5b66\u5408\u4f5c\u8fdb\u884c\u6280\u672f\u5f00\u53d1\u548c\u5b9e\u9645\u8bc4\u4f30\u3002", "result": "\u5904\u74066000\u591a\u6b21\u771f\u5b9e\u7528\u6237\u4ea4\u4e92\uff0c\u5e73\u5747\u51c6\u786e\u738792%\uff0c\u5e7b\u89c9\u7387\u4ece15%\u964d\u81f31.45%\uff0c\u54cd\u5e94\u65f6\u95f4\u4f4e\u4e8e4\u79d2\uff0c\u6210\u672c\u4ec511.58\u7f8e\u5143\u3002", "conclusion": "MARAUS\u4e3a\u4f4e\u8d44\u6e90\u6559\u80b2\u73af\u5883\u4e2d\u90e8\u7f72\u667a\u80fd\u68c0\u7d22\u589e\u5f3a\u7cfb\u7edf\u63d0\u4f9b\u4e86\u53ef\u884c\u65b9\u6848\u3002"}}
{"id": "2507.11346", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.11346", "abs": "https://arxiv.org/abs/2507.11346", "authors": ["Pedro Sim\u00f5es", "Rohit Gheyi", "Rian Melo", "Jonhnanthan Oliveira", "M\u00e1rcio Ribeiro", "Wesley K. G. Assun\u00e7\u00e3o"], "title": "RefModel: Detecting Refactorings using Foundation Models", "comment": "Accepted at Brazilian Symposium on Software Engineering (SBES 2025)", "summary": "Refactoring is a common software engineering practice that improves code\nquality without altering program behavior. Although tools like ReExtractor+,\nRefactoringMiner, and RefDiff have been developed to detect refactorings\nautomatically, they rely on complex rule definitions and static analysis,\nmaking them difficult to extend and generalize to other programming languages.\nIn this paper, we investigate the viability of using foundation models for\nrefactoring detection, implemented in a tool named RefModel. We evaluate\nPhi4-14B, and Claude 3.5 Sonnet on a dataset of 858 single-operation\ntransformations applied to artificially generated Java programs, covering\nwidely-used refactoring types. We also extend our evaluation by including\nGemini 2.5 Pro and o4-mini-high, assessing their performance on 44 real-world\nrefactorings extracted from four open-source projects. These models are\ncompared against RefactoringMiner, RefDiff, and ReExtractor+. RefModel is\ncompetitive with, and in some cases outperform, traditional tools. In\nreal-world settings, Claude 3.5 Sonnet and Gemini 2.5 Pro jointly identified\n97% of all refactorings, surpassing the best-performing static-analysis-based\ntools. The models showed encouraging generalization to Python and Golang. They\nprovide natural language explanations and require only a single sentence to\ndefine each refactoring type.", "AI": {"tldr": "\u7814\u7a76\u63a2\u8ba8\u4e86\u4f7f\u7528\u57fa\u7840\u6a21\u578b\uff08\u5982Phi4-14B\u3001Claude 3.5 Sonnet\u7b49\uff09\u68c0\u6d4b\u4ee3\u7801\u91cd\u6784\u7684\u53ef\u884c\u6027\uff0c\u5de5\u5177RefModel\u5728\u6027\u80fd\u4e0a\u4e0e\u4f20\u7edf\u5de5\u5177\u76f8\u5f53\u751a\u81f3\u66f4\u4f18\u3002", "motivation": "\u73b0\u6709\u5de5\u5177\u4f9d\u8d56\u590d\u6742\u89c4\u5219\u548c\u9759\u6001\u5206\u6790\uff0c\u96be\u4ee5\u6269\u5c55\u548c\u6cdb\u5316\u5230\u5176\u4ed6\u7f16\u7a0b\u8bed\u8a00\uff0c\u56e0\u6b64\u63a2\u7d22\u66f4\u7075\u6d3b\u7684\u57fa\u7840\u6a21\u578b\u65b9\u6cd5\u3002", "method": "\u8bc4\u4f30\u591a\u4e2a\u57fa\u7840\u6a21\u578b\u5728\u4eba\u5de5\u751f\u6210\u7684Java\u7a0b\u5e8f\u6570\u636e\u96c6\u548c\u771f\u5b9e\u5f00\u6e90\u9879\u76ee\u4e2d\u7684\u91cd\u6784\u68c0\u6d4b\u6027\u80fd\uff0c\u5e76\u4e0e\u4f20\u7edf\u5de5\u5177\u5bf9\u6bd4\u3002", "result": "Claude 3.5 Sonnet\u548cGemini 2.5 Pro\u5728\u771f\u5b9e\u573a\u666f\u4e2d\u8054\u5408\u8bc6\u522b\u4e8697%\u7684\u91cd\u6784\uff0c\u4f18\u4e8e\u4f20\u7edf\u5de5\u5177\uff0c\u5e76\u5c55\u793a\u4e86\u5728Python\u548cGolang\u4e2d\u7684\u6cdb\u5316\u80fd\u529b\u3002", "conclusion": "\u57fa\u7840\u6a21\u578b\u5728\u91cd\u6784\u68c0\u6d4b\u4e2d\u5177\u6709\u7ade\u4e89\u529b\uff0c\u63d0\u4f9b\u81ea\u7136\u8bed\u8a00\u89e3\u91ca\u4e14\u5b9a\u4e49\u7b80\u5355\uff0c\u4e3a\u672a\u6765\u5de5\u5177\u5f00\u53d1\u63d0\u4f9b\u4e86\u65b0\u65b9\u5411\u3002"}}
{"id": "2507.11362", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.11362", "abs": "https://arxiv.org/abs/2507.11362", "authors": ["Chaima Boufaied", "Taher Ghaleb", "Zainab Masood"], "title": "Security Debt in Practice: Nuanced Insights from Practitioners", "comment": null, "summary": "With the increasing reliance on software and automation nowadays, tight\ndeadlines, limited resources, and prioritization of functionality over security\ncan lead to insecure coding practices. When not handled properly, these\nconstraints cause unaddressed security vulnerabilities to accumulate over time,\nforming Security Debts (SDs). Despite their critical importance, there is\nlimited empirical evidence on how software practitioners perceive, manage, and\ncommunicate SDs in real-world settings. In this paper, we present a qualitative\nempirical study based on semi-structured interviews with 22 software\npractitioners across various roles, organizations, and countries. We address\nfour research questions: i) we assess software practitioners' knowledge of SDs\nand awareness of associated security risks, ii) we investigate their behavior\ntowards SDs, iii) we explore common tools and strategies used to mitigate SDs,\nand iv) we analyze how security risks are communicated within teams and to\ndecision makers. We observe variations in how practitioners perceive and manage\nSDs, with some prioritizing delivery speed over security, while others\nconsistently maintain security as a priority. Our findings emphasize the need\nfor stronger integration of security practices across the Software Development\nLife Cycle (SDLC), more consistent use of mitigation strategies, better\nbalancing of deadlines, resources, and security-related tasks, with attention\nto the Confidentiality, Integrity, and Availability (CIA) triad.", "AI": {"tldr": "\u8bba\u6587\u901a\u8fc7\u5b9a\u6027\u5b9e\u8bc1\u7814\u7a76\u63a2\u8ba8\u4e86\u8f6f\u4ef6\u4ece\u4e1a\u8005\u5bf9\u5b89\u5168\u503a\u52a1\uff08SDs\uff09\u7684\u8ba4\u77e5\u3001\u7ba1\u7406\u548c\u6c9f\u901a\u65b9\u5f0f\uff0c\u53d1\u73b0\u5b9e\u8df5\u4e2d\u5b58\u5728\u5bf9\u5b89\u5168\u7684\u4e0d\u540c\u4f18\u5148\u7ea7\u548c\u5904\u7406\u7b56\u7565\uff0c\u5f3a\u8c03\u4e86\u5728\u8f6f\u4ef6\u5f00\u53d1\u751f\u547d\u5468\u671f\u4e2d\u66f4\u7d27\u5bc6\u96c6\u6210\u5b89\u5168\u5b9e\u8df5\u7684\u5fc5\u8981\u6027\u3002", "motivation": "\u968f\u7740\u8f6f\u4ef6\u548c\u81ea\u52a8\u5316\u7684\u666e\u53ca\uff0c\u65f6\u95f4\u3001\u8d44\u6e90\u9650\u5236\u53ca\u529f\u80fd\u4f18\u5148\u4e8e\u5b89\u5168\u7684\u505a\u6cd5\u5bfc\u81f4\u5b89\u5168\u503a\u52a1\u79ef\u7d2f\uff0c\u4f46\u7f3a\u4e4f\u5b9e\u8bc1\u7814\u7a76\u63a2\u8ba8\u4ece\u4e1a\u8005\u5982\u4f55\u5b9e\u9645\u5904\u7406\u8fd9\u4e00\u95ee\u9898\u3002", "method": "\u901a\u8fc7\u534a\u7ed3\u6784\u5316\u8bbf\u8c0822\u540d\u6765\u81ea\u4e0d\u540c\u89d2\u8272\u3001\u7ec4\u7ec7\u548c\u56fd\u5bb6\u7684\u8f6f\u4ef6\u4ece\u4e1a\u8005\uff0c\u7814\u7a76\u5176\u5bf9\u5b89\u5168\u503a\u52a1\u7684\u8ba4\u77e5\u3001\u884c\u4e3a\u3001\u5de5\u5177\u4f7f\u7528\u53ca\u98ce\u9669\u6c9f\u901a\u65b9\u5f0f\u3002", "result": "\u7814\u7a76\u53d1\u73b0\u4ece\u4e1a\u8005\u5bf9\u5b89\u5168\u503a\u52a1\u7684\u8ba4\u77e5\u548c\u7ba1\u7406\u5b58\u5728\u5dee\u5f02\uff0c\u90e8\u5206\u4eba\u4f18\u5148\u8003\u8651\u4ea4\u4ed8\u901f\u5ea6\u800c\u975e\u5b89\u5168\uff0c\u5f3a\u8c03\u4e86\u5b89\u5168\u5b9e\u8df5\u5728SDLC\u4e2d\u7684\u6574\u5408\u9700\u6c42\u3002", "conclusion": "\u7814\u7a76\u547c\u5401\u66f4\u4e00\u81f4\u7684\u5b89\u5168\u7f13\u89e3\u7b56\u7565\u3001\u5e73\u8861\u8d44\u6e90\u4e0e\u5b89\u5168\u4efb\u52a1\uff0c\u5e76\u5173\u6ce8CIA\u4e09\u8981\u7d20\uff0c\u4ee5\u6539\u5584\u5b89\u5168\u503a\u52a1\u7ba1\u7406\u3002"}}
