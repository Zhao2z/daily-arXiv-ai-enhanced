{"id": "2507.08943", "categories": ["cs.SE", "D.2.7"], "pdf": "https://arxiv.org/pdf/2507.08943", "abs": "https://arxiv.org/abs/2507.08943", "authors": ["Pedro Lopes", "Paola Accioly", "Paulo Borba", "Vitor Menezes"], "title": "Choosing the Right Git Workflow: A Comparative Analysis of Trunk-based vs. Branch-based Approaches", "comment": "11 pages with 3 figures", "summary": "Git has become one of the most widely used version control systems today.\nAmong its distinguishing features, its ability to easily and quickly create\nbranches stands out, allowing teams to customize their workflows. In this\ncontext, various formats of collaborative development workflows using Git have\nemerged and gained popularity among software engineers. We can categorize such\nworkflows into two main types: branch-based workflows and trunk-based\nworkflows. Branch-based workflows typically define a set of remote branches\nwith well-defined objectives, such as feature branches, a branch for feature\nintegration, and a main branch. The goal is to migrate changes from the most\nisolated branch to the main one shared by all as the code matures. In this\ncategory, GitFlow stands out as the most popular example. In contrast,\ntrunk-based workflows have a single remote branch where developers integrate\ntheir changes directly. In this range of options, choosing a workflow that\nmaximizes team productivity while promoting software quality becomes a\nnon-trivial task. Despite discussions on forums, social networks, and blogs,\nfew scientific articles have explored this topic. In this work, we provide\nevidence on how Brazilian developers work with Git workflows and what factors\nfavor or hinder the use of each model. To this end, we conducted\nsemi-structured interviews and a survey with software developers. Our results\nindicate that trunk-based development favors fast-paced projects with\nexperienced and smaller teams, while branch-based development suits less\nexperienced and larger teams better, despite posing management challenges.", "AI": {"tldr": "\u8bba\u6587\u63a2\u8ba8\u4e86Git\u5de5\u4f5c\u6d41\u7684\u4e24\u79cd\u4e3b\u8981\u7c7b\u578b\uff08\u5206\u652f\u5de5\u4f5c\u6d41\u548c\u4e3b\u5e72\u5de5\u4f5c\u6d41\uff09\uff0c\u5e76\u901a\u8fc7\u8c03\u67e5\u548c\u8bbf\u8c08\u5206\u6790\u4e86\u5df4\u897f\u5f00\u53d1\u8005\u7684\u4f7f\u7528\u60c5\u51b5\u53ca\u5176\u5f71\u54cd\u56e0\u7d20\u3002", "motivation": "\u7814\u7a76\u52a8\u673a\u5728\u4e8eGit\u5de5\u4f5c\u6d41\u7684\u9009\u62e9\u5bf9\u56e2\u961f\u751f\u4ea7\u529b\u548c\u8f6f\u4ef6\u8d28\u91cf\u7684\u5f71\u54cd\uff0c\u4f46\u7f3a\u4e4f\u79d1\u5b66\u6587\u732e\u652f\u6301\u3002", "method": "\u91c7\u7528\u534a\u7ed3\u6784\u5316\u8bbf\u8c08\u548c\u95ee\u5377\u8c03\u67e5\u7684\u65b9\u6cd5\uff0c\u6536\u96c6\u5df4\u897f\u5f00\u53d1\u8005\u7684\u5b9e\u9645\u4f7f\u7528\u6570\u636e\u3002", "result": "\u7ed3\u679c\u663e\u793a\uff0c\u4e3b\u5e72\u5de5\u4f5c\u6d41\u9002\u5408\u7ecf\u9a8c\u4e30\u5bcc\u7684\u5c0f\u56e2\u961f\u548c\u5feb\u8282\u594f\u9879\u76ee\uff0c\u800c\u5206\u652f\u5de5\u4f5c\u6d41\u66f4\u9002\u5408\u7ecf\u9a8c\u4e0d\u8db3\u7684\u5927\u56e2\u961f\uff0c\u5c3d\u7ba1\u7ba1\u7406\u96be\u5ea6\u8f83\u5927\u3002", "conclusion": "\u7ed3\u8bba\u6307\u51fa\uff0c\u9009\u62e9\u5de5\u4f5c\u6d41\u5e94\u6839\u636e\u56e2\u961f\u7279\u70b9\u548c\u9879\u76ee\u9700\u6c42\uff0c\u4ee5\u4f18\u5316\u751f\u4ea7\u529b\u548c\u8d28\u91cf\u3002"}}
{"id": "2507.08992", "categories": ["cs.SE", "cs.CL", "cs.PL"], "pdf": "https://arxiv.org/pdf/2507.08992", "abs": "https://arxiv.org/abs/2507.08992", "authors": ["Abdelhalim Dahou", "Ansgar Scherp", "Sebastian Kurten", "Brigitte Mathiak", "Madhu Chauhan"], "title": "Semantic Source Code Segmentation using Small and Large Language Models", "comment": "18 pages, 4 figures", "summary": "Source code segmentation, dividing code into functionally coherent segments,\nis crucial for knowledge retrieval and maintenance in software development.\nWhile enabling efficient navigation and comprehension of large codebases,\nmanual and syntactic analysis approaches have become impractical as\nrepositories grow, especially for low-resource languages like R and their\nresearch domains (e.g., social sciences, psychology).This paper introduces an\nautomated, domain-specific approach for research R code segmentation using\nLarge and Small Language Models (LLMs/SLMs). It presents two novel approaches\nand a human-annotated dataset, StatCodeSeg. We explore two distinct approaches:\nline-by-line analysis with context and range-based segment determination. We\nexperiment with LLMs and fine-tuned SLMs. To support the generalizability of\nour approaches, we also include experiments on Python code from the computer\nscience domain.Our results show that context-based line-by-line analysis is\nsuperior over range-based segmentation.Using smaller language models like\nCodeBERT and an encoder-only version of CodeT5+ are better than their LLM\ncounterparts. Most notably, these two best-performing models did not see R code\nduring pre-training versus the LLMs but were only fine-tuned on 4,130 lines of\nmanually annotated code.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u81ea\u52a8\u5316\u3001\u9886\u57df\u7279\u5b9a\u7684R\u4ee3\u7801\u5206\u5272\u65b9\u6cd5\uff0c\u4f7f\u7528\u5927\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u548c\u5c0f\u8bed\u8a00\u6a21\u578b\uff08SLMs\uff09\uff0c\u5e76\u6bd4\u8f83\u4e86\u4e24\u79cd\u65b9\u6cd5\u7684\u6548\u679c\u3002", "motivation": "\u968f\u7740\u4ee3\u7801\u5e93\u7684\u589e\u957f\uff0c\u624b\u52a8\u548c\u57fa\u4e8e\u8bed\u6cd5\u5206\u6790\u7684\u4ee3\u7801\u5206\u5272\u65b9\u6cd5\u53d8\u5f97\u4e0d\u5207\u5b9e\u9645\uff0c\u5c24\u5176\u662f\u5bf9\u4e8eR\u7b49\u4f4e\u8d44\u6e90\u8bed\u8a00\u53ca\u5176\u7814\u7a76\u9886\u57df\u3002", "method": "\u63d0\u51fa\u4e86\u4e24\u79cd\u65b0\u9896\u7684\u65b9\u6cd5\uff1a\u57fa\u4e8e\u4e0a\u4e0b\u6587\u7684\u884c\u5206\u6790\u548c\u57fa\u4e8e\u8303\u56f4\u7684\u6bb5\u786e\u5b9a\uff0c\u5e76\u5b9e\u9a8c\u4e86LLMs\u548c\u5fae\u8c03\u7684SLMs\u3002", "result": "\u57fa\u4e8e\u4e0a\u4e0b\u6587\u7684\u884c\u5206\u6790\u4f18\u4e8e\u57fa\u4e8e\u8303\u56f4\u7684\u5206\u5272\uff0c\u4e14CodeBERT\u548cCodeT5+\u7b49\u5c0f\u6a21\u578b\u8868\u73b0\u4f18\u4e8eLLMs\u3002", "conclusion": "\u5c0f\u6a21\u578b\u5728\u672a\u9884\u8bad\u7ec3R\u4ee3\u7801\u7684\u60c5\u51b5\u4e0b\uff0c\u4ec5\u901a\u8fc7\u5fae\u8c03\u5c11\u91cf\u6807\u6ce8\u6570\u636e\u5373\u53ef\u53d6\u5f97\u4f18\u5f02\u8868\u73b0\u3002"}}
{"id": "2507.09023", "categories": ["cs.SE", "cs.AI", "cs.MA"], "pdf": "https://arxiv.org/pdf/2507.09023", "abs": "https://arxiv.org/abs/2507.09023", "authors": ["Yao Fehlis", "Charles Crain", "Aidan Jensen", "Michael Watson", "James Juhasz", "Paul Mandel", "Betty Liu", "Shawn Mahon", "Daren Wilson", "Nick Lynch-Jonely", "Ben Leedom", "David Fuller"], "title": "Accelerating Drug Discovery Through Agentic AI: A Multi-Agent Approach to Laboratory Automation in the DMTA Cycle", "comment": null, "summary": "The pharmaceutical industry faces unprecedented challenges in drug discovery,\nwith traditional approaches struggling to meet modern therapeutic development\ndemands. This paper introduces a novel AI framework, Tippy, that transforms\nlaboratory automation through specialized AI agents operating within the\nDesign-Make-Test-Analyze (DMTA) cycle. Our multi-agent system employs five\nspecialized agents - Supervisor, Molecule, Lab, Analysis, and Report, with\nSafety Guardrail oversight - each designed to excel in specific phases of the\ndrug discovery pipeline. Tippy represents the first production-ready\nimplementation of specialized AI agents for automating the DMTA cycle,\nproviding a concrete example of how AI can transform laboratory workflows. By\nleveraging autonomous AI agents that reason, plan, and collaborate, we\ndemonstrate how Tippy accelerates DMTA cycles while maintaining scientific\nrigor essential for pharmaceutical research. The system shows significant\nimprovements in workflow efficiency, decision-making speed, and\ncross-disciplinary coordination, offering a new paradigm for AI-assisted drug\ndiscovery.", "AI": {"tldr": "\u672c\u6587\u4ecb\u7ecd\u4e86\u4e00\u79cd\u540d\u4e3aTippy\u7684\u65b0\u578bAI\u6846\u67b6\uff0c\u901a\u8fc7\u4e13\u95e8\u8bbe\u8ba1\u7684AI\u4ee3\u7406\u81ea\u52a8\u5316\u836f\u7269\u53d1\u73b0\u4e2d\u7684DMTA\u5faa\u73af\uff0c\u663e\u8457\u63d0\u5347\u4e86\u6548\u7387\u548c\u51b3\u7b56\u901f\u5ea6\u3002", "motivation": "\u4f20\u7edf\u836f\u7269\u53d1\u73b0\u65b9\u6cd5\u96be\u4ee5\u6ee1\u8db3\u73b0\u4ee3\u6cbb\u7597\u5f00\u53d1\u9700\u6c42\uff0c\u9700\u8981\u66f4\u9ad8\u6548\u7684\u81ea\u52a8\u5316\u89e3\u51b3\u65b9\u6848\u3002", "method": "Tippy\u91c7\u7528\u591a\u4ee3\u7406\u7cfb\u7edf\uff0c\u5305\u62ec\u4e94\u4e2a\u4e13\u95e8\u4ee3\u7406\uff08Supervisor\u3001Molecule\u3001Lab\u3001Analysis\u3001Report\uff09\u548cSafety Guardrail\u76d1\u7763\uff0c\u8986\u76d6DMTA\u5faa\u73af\u7684\u5404\u4e2a\u9636\u6bb5\u3002", "result": "Tippy\u663e\u8457\u63d0\u5347\u4e86\u5de5\u4f5c\u6d41\u6548\u7387\u3001\u51b3\u7b56\u901f\u5ea6\u548c\u8de8\u5b66\u79d1\u534f\u4f5c\uff0c\u4e3aAI\u8f85\u52a9\u836f\u7269\u53d1\u73b0\u63d0\u4f9b\u4e86\u65b0\u8303\u5f0f\u3002", "conclusion": "Tippy\u662f\u9996\u4e2a\u751f\u4ea7\u5c31\u7eea\u7684AI\u4ee3\u7406\u7cfb\u7edf\uff0c\u5c55\u793a\u4e86AI\u5982\u4f55\u901a\u8fc7\u81ea\u4e3b\u4ee3\u7406\u6539\u53d8\u5b9e\u9a8c\u5ba4\u5de5\u4f5c\u6d41\u7a0b\u3002"}}
{"id": "2507.09039", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.09039", "abs": "https://arxiv.org/abs/2507.09039", "authors": ["Aakash Sorathiya", "Gouri Ginde"], "title": "Towards Extracting Software Requirements from App Reviews using Seq2seq Framework", "comment": null, "summary": "Mobile app reviews are a large-scale data source for software improvements. A\nkey task in this context is effectively extracting requirements from app\nreviews to analyze the users' needs and support the software's evolution.\nRecent studies show that existing methods fail at this task since app reviews\nusually contain informal language, grammatical and spelling errors, and a large\namount of irrelevant information that might not have direct practical value for\ndevelopers. To address this, we propose a novel reformulation of requirements\nextraction as a Named Entity Recognition (NER) task based on the\nsequence-to-sequence (Seq2seq) generation approach. With this aim, we propose a\nSeq2seq framework, incorporating a BiLSTM encoder and an LSTM decoder, enhanced\nwith a self-attention mechanism, GloVe embeddings, and a CRF model. We\nevaluated our framework on two datasets: a manually annotated set of 1,000\nreviews (Dataset 1) and a crowdsourced set of 23,816 reviews (Dataset 2). The\nquantitative evaluation of our framework showed that it outperformed existing\nstate-of-the-art methods with an F1 score of 0.96 on Dataset 2, and achieved\ncomparable performance on Dataset 1 with an F1 score of 0.47.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u5e8f\u5217\u5230\u5e8f\u5217\uff08Seq2seq\uff09\u751f\u6210\u65b9\u6cd5\u7684\u547d\u540d\u5b9e\u4f53\u8bc6\u522b\uff08NER\uff09\u4efb\u52a1\uff0c\u7528\u4e8e\u4ece\u79fb\u52a8\u5e94\u7528\u8bc4\u8bba\u4e2d\u63d0\u53d6\u9700\u6c42\uff0c\u89e3\u51b3\u4e86\u73b0\u6709\u65b9\u6cd5\u56e0\u8bc4\u8bba\u8bed\u8a00\u4e0d\u89c4\u8303\u3001\u4fe1\u606f\u65e0\u5173\u7b49\u95ee\u9898\u3002", "motivation": "\u79fb\u52a8\u5e94\u7528\u8bc4\u8bba\u662f\u8f6f\u4ef6\u6539\u8fdb\u7684\u91cd\u8981\u6570\u636e\u6e90\uff0c\u4f46\u73b0\u6709\u65b9\u6cd5\u56e0\u8bc4\u8bba\u7684\u8bed\u6cd5\u9519\u8bef\u3001\u62fc\u5199\u9519\u8bef\u548c\u65e0\u5173\u4fe1\u606f\u800c\u6548\u679c\u4e0d\u4f73\u3002", "method": "\u63d0\u51fa\u4e86\u4e00\u79cd\u7ed3\u5408BiLSTM\u7f16\u7801\u5668\u3001LSTM\u89e3\u7801\u5668\u3001\u81ea\u6ce8\u610f\u529b\u673a\u5236\u3001GloVe\u5d4c\u5165\u548cCRF\u6a21\u578b\u7684Seq2seq\u6846\u67b6\u3002", "result": "\u5728\u4e24\u4e2a\u6570\u636e\u96c6\u4e0a\u8bc4\u4f30\uff0cF1\u5206\u6570\u5206\u522b\u4e3a0.96\uff08\u6570\u636e\u96c62\uff09\u548c0.47\uff08\u6570\u636e\u96c61\uff09\uff0c\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\u3002", "conclusion": "\u8be5\u65b9\u6cd5\u80fd\u6709\u6548\u4ece\u975e\u6b63\u5f0f\u8bc4\u8bba\u4e2d\u63d0\u53d6\u9700\u6c42\uff0c\u652f\u6301\u8f6f\u4ef6\u6f14\u5316\u3002"}}
{"id": "2507.09049", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.09049", "abs": "https://arxiv.org/abs/2507.09049", "authors": ["Aakash Sorathiya", "Gouri Ginde"], "title": "CMER: A Context-Aware Approach for Mining Ethical Concern-related App Reviews", "comment": null, "summary": "With the increasing proliferation of mobile applications in our daily lives,\nthe concerns surrounding ethics have surged significantly. Users communicate\ntheir feedback in app reviews, frequently emphasizing ethical concerns, such as\nprivacy and security. Incorporating these reviews has proved to be useful for\nmany areas of software engineering (e.g., requirement engineering, testing,\netc.). However, app reviews related to ethical concerns generally use\ndomain-specific language and are typically overshadowed by more generic\ncategories of user feedback, such as app reliability and usability. Thus,\nmaking automated extraction a challenging and time-consuming effort.\n  This study proposes CMER (A \\underline{C}ontext-Aware Approach for\n\\underline{M}ining \\underline{E}thical Concern-related App\n\\underline{R}eviews), a novel approach that combines Natural Language Inference\n(NLI) and a decoder-only (LLaMA-like) Large Language Model (LLM) to extract\nethical concern-related app reviews at scale. In CMER, NLI provides\ndomain-specific context awareness by using domain-specific hypotheses, and the\nLlama-like LLM eliminates the need for labeled data in the classification task.\nWe evaluated the validity of CMER by mining privacy and security-related\nreviews (PSRs) from the dataset of more than 382K app reviews of mobile\ninvestment apps. First, we evaluated four NLI models and compared the results\nof domain-specific hypotheses with generic hypotheses. Next, we evaluated three\nLLMs for the classification task. Finally, we combined the best NLI and LLM\nmodels (CMER) and extracted 2,178 additional PSRs overlooked by the previous\nstudy using a keyword-based approach, thus demonstrating the effectiveness of\nCMER. These reviews can be further refined into actionable requirement\nartifacts.", "AI": {"tldr": "CMER\u662f\u4e00\u79cd\u7ed3\u5408\u81ea\u7136\u8bed\u8a00\u63a8\u7406\uff08NLI\uff09\u548c\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u7684\u65b0\u65b9\u6cd5\uff0c\u7528\u4e8e\u4ece\u5e94\u7528\u8bc4\u8bba\u4e2d\u63d0\u53d6\u4f26\u7406\u5173\u6ce8\u5185\u5bb9\uff0c\u5982\u9690\u79c1\u548c\u5b89\u5168\u95ee\u9898\u3002", "motivation": "\u79fb\u52a8\u5e94\u7528\u4e2d\u4f26\u7406\u95ee\u9898\u65e5\u76ca\u7a81\u51fa\uff0c\u4f46\u76f8\u5173\u8bc4\u8bba\u56e0\u9886\u57df\u7279\u5b9a\u8bed\u8a00\u548c\u901a\u7528\u53cd\u9988\u7684\u63a9\u76d6\u800c\u96be\u4ee5\u81ea\u52a8\u5316\u63d0\u53d6\u3002", "method": "CMER\u7ed3\u5408NLI\uff08\u63d0\u4f9b\u9886\u57df\u7279\u5b9a\u4e0a\u4e0b\u6587\uff09\u548cLLM\uff08\u65e0\u9700\u6807\u6ce8\u6570\u636e\uff09\uff0c\u4ece382K\u6761\u6295\u8d44\u5e94\u7528\u8bc4\u8bba\u4e2d\u63d0\u53d6\u9690\u79c1\u548c\u5b89\u5168\u76f8\u5173\u8bc4\u8bba\u3002", "result": "CMER\u63d0\u53d6\u4e862178\u6761\u4e4b\u524d\u57fa\u4e8e\u5173\u952e\u8bcd\u65b9\u6cd5\u9057\u6f0f\u7684\u9690\u79c1\u548c\u5b89\u5168\u76f8\u5173\u8bc4\u8bba\uff0c\u9a8c\u8bc1\u4e86\u5176\u6709\u6548\u6027\u3002", "conclusion": "CMER\u80fd\u6709\u6548\u63d0\u53d6\u4f26\u7406\u5173\u6ce8\u76f8\u5173\u8bc4\u8bba\uff0c\u4e3a\u9700\u6c42\u5de5\u7a0b\u63d0\u4f9b\u53ef\u64cd\u4f5c\u7684\u53c2\u8003\u3002"}}
{"id": "2507.09051", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.09051", "abs": "https://arxiv.org/abs/2507.09051", "authors": ["Aakash Sorathiya", "Gouri Ginde"], "title": "SAGE: A Context-Aware Approach for Mining Privacy Requirements Relevant Reviews from Mental Health Apps", "comment": null, "summary": "Mental health (MH) apps often require sensitive user data to customize\nservices for mental wellness needs. However, such data collection practices in\nsome MH apps raise significant privacy concerns for users. These concerns are\noften mentioned in app reviews, but other feedback categories, such as\nreliability and usability, tend to take precedence. This poses a significant\nchallenge in automatically identifying privacy requirements-relevant reviews\n(privacy reviews) that can be utilized to extract privacy requirements and\naddress users' privacy concerns. Thus, this study introduces SAGE, a\ncontext-aware approach to automatically mining privacy reviews from MH apps\nusing Natural Language Inference (NLI) with MH domain-specific privacy\nhypotheses (provides domain-specific context awareness) and a GPT model\n(eliminates the need for fine-tuning). The quantitative evaluation of SAGE on a\ndataset of 204K app reviews achieved an F1 score of 0.85 without any\nfine-tuning, outperforming the fine-tuned baseline classifiers BERT and T5.\nFurthermore, SAGE extracted 748 privacy reviews previously overlooked by\nkeyword-based methods, demonstrating its effectiveness through qualitative\nevaluation. These reviews can later be refined into actionable privacy\nrequirement artifacts.", "AI": {"tldr": "SAGE\u662f\u4e00\u79cd\u57fa\u4e8e\u81ea\u7136\u8bed\u8a00\u63a8\u7406\uff08NLI\uff09\u548cGPT\u6a21\u578b\u7684\u4e0a\u4e0b\u6587\u611f\u77e5\u65b9\u6cd5\uff0c\u7528\u4e8e\u81ea\u52a8\u6316\u6398\u5fc3\u7406\u5065\u5eb7\u5e94\u7528\u4e2d\u7684\u9690\u79c1\u76f8\u5173\u8bc4\u8bba\uff0c\u65e0\u9700\u5fae\u8c03\u5373\u53ef\u8fbe\u5230\u9ad8\u51c6\u786e\u7387\u3002", "motivation": "\u5fc3\u7406\u5065\u5eb7\u5e94\u7528\u7684\u6570\u636e\u6536\u96c6\u5f15\u53d1\u9690\u79c1\u62c5\u5fe7\uff0c\u4f46\u9690\u79c1\u8bc4\u8bba\u5e38\u88ab\u5176\u4ed6\u53cd\u9988\u7c7b\u522b\u63a9\u76d6\uff0c\u96be\u4ee5\u81ea\u52a8\u8bc6\u522b\u3002", "method": "\u7ed3\u5408NLI\u548cGPT\u6a21\u578b\uff0c\u5229\u7528\u9886\u57df\u7279\u5b9a\u7684\u9690\u79c1\u5047\u8bbe\uff0c\u81ea\u52a8\u6316\u6398\u9690\u79c1\u8bc4\u8bba\u3002", "result": "SAGE\u5728204K\u6761\u8bc4\u8bba\u4e2dF1\u5f97\u5206\u4e3a0.85\uff0c\u4f18\u4e8e\u5fae\u8c03\u7684BERT\u548cT5\u6a21\u578b\uff0c\u5e76\u53d1\u73b0748\u6761\u88ab\u5ffd\u7565\u7684\u9690\u79c1\u8bc4\u8bba\u3002", "conclusion": "SAGE\u80fd\u6709\u6548\u8bc6\u522b\u9690\u79c1\u8bc4\u8bba\uff0c\u4e3a\u9690\u79c1\u9700\u6c42\u63d0\u53d6\u63d0\u4f9b\u652f\u6301\u3002"}}
{"id": "2507.09063", "categories": ["cs.SE", "cs.AI", "cs.LG"], "pdf": "https://arxiv.org/pdf/2507.09063", "abs": "https://arxiv.org/abs/2507.09063", "authors": ["Avi Arora", "Jinu Jang", "Roshanak Zilouchian Moghaddam"], "title": "SetupBench: Assessing Software Engineering Agents' Ability to Bootstrap Development Environments", "comment": null, "summary": "Modern Large Language Model (LLM) agents promise end to end assistance with\nreal-world software tasks, yet existing benchmarks evaluate LLM agents almost\nexclusively in pre-baked environments where every dependency is pre-installed.\nTo fill this gap, we introduce SetupBench, a 93 instance benchmark that\nisolates the environment-bootstrap skill: starting from a bare Linux sandbox,\nan agent must install packages, resolve dependency conflicts, initialize\ndatabases, and configure background services. Our tasks span seven language\necosystems, five database engines, and multi-service orchestration scenarios,\neach accompanies by a natural language problem statement and a deterministic\nsuccess command. Through evaluation of OpenHands, a state-of-the-art coding\nagent, we find low success rates across task categories, with particular\nchallenges in repository setup (38.9-57.4%) and local database configuration\n(20.0-53.3%). Our analysis reveals systematic failure modes including\nincomplete development tooling installation, hallucinated task constraints, and\nnon-persistent environment modifications that break agent-human collaboration\nworkflows. We identify substantial inefficiencies in agent exploration\nstrategies, with 38-89% of actions being unnecessary compared to optimal human\nbehavior. These findings highlight gaps in current agents' practical\nenvironment-bootstrap capabilities. By targeting this critical yet\nunder-evaluated capability, SetupBench provides a rigorous yard-stick for the\nnext generation of software developer agents aiming to solve end to end\nreal-wold tasks.", "AI": {"tldr": "SetupBench\u662f\u4e00\u4e2a\u65b0\u7684\u57fa\u51c6\u6d4b\u8bd5\uff0c\u7528\u4e8e\u8bc4\u4f30LLM\u4ee3\u7406\u5728\u88f8Linux\u73af\u5883\u4e2d\u5b8c\u6210\u8f6f\u4ef6\u4efb\u52a1\u7684\u80fd\u529b\uff0c\u53d1\u73b0\u73b0\u6709\u4ee3\u7406\u5728\u73af\u5883\u5f15\u5bfc\u65b9\u9762\u5b58\u5728\u663e\u8457\u4e0d\u8db3\u3002", "motivation": "\u73b0\u6709\u57fa\u51c6\u6d4b\u8bd5\u4e3b\u8981\u5728\u9884\u914d\u7f6e\u73af\u5883\u4e2d\u8bc4\u4f30LLM\u4ee3\u7406\uff0c\u65e0\u6cd5\u53cd\u6620\u771f\u5b9e\u4e16\u754c\u4efb\u52a1\u7684\u590d\u6742\u6027\uff0c\u56e0\u6b64\u9700\u8981\u4e00\u79cd\u65b0\u7684\u6d4b\u8bd5\u65b9\u6cd5\u3002", "method": "\u5f15\u5165SetupBench\uff0c\u5305\u542b93\u4e2a\u4efb\u52a1\uff0c\u6db5\u76d6\u591a\u79cd\u8bed\u8a00\u751f\u6001\u7cfb\u7edf\u3001\u6570\u636e\u5e93\u5f15\u64ce\u548c\u591a\u670d\u52a1\u7f16\u6392\u573a\u666f\uff0c\u901a\u8fc7\u81ea\u7136\u8bed\u8a00\u95ee\u9898\u63cf\u8ff0\u548c\u786e\u5b9a\u6027\u6210\u529f\u547d\u4ee4\u8fdb\u884c\u8bc4\u4f30\u3002", "result": "\u8bc4\u4f30\u663e\u793a\uff0c\u73b0\u6709\u4ee3\u7406\u5728\u73af\u5883\u5f15\u5bfc\u4efb\u52a1\u4e2d\u6210\u529f\u7387\u4f4e\uff0c\u7279\u522b\u662f\u5728\u4ed3\u5e93\u8bbe\u7f6e\u548c\u672c\u5730\u6570\u636e\u5e93\u914d\u7f6e\u65b9\u9762\uff0c\u4e14\u5b58\u5728\u7cfb\u7edf\u6027\u5931\u8d25\u6a21\u5f0f\u548c\u4f4e\u6548\u884c\u4e3a\u3002", "conclusion": "SetupBench\u586b\u8865\u4e86\u73b0\u6709\u8bc4\u4f30\u7a7a\u767d\uff0c\u4e3a\u4e0b\u4e00\u4ee3\u8f6f\u4ef6\u5f00\u53d1\u8005\u4ee3\u7406\u63d0\u4f9b\u4e86\u4e25\u683c\u7684\u6d4b\u8bd5\u6807\u51c6\u3002"}}
{"id": "2507.09108", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.09108", "abs": "https://arxiv.org/abs/2507.09108", "authors": ["Aaditya Bhatia", "Gustavo A. Oliva", "Gopi Krishnan Rajbahadur", "Haoxiang Zhang", "Yihao Chen", "Zhilong Chen", "Arthur Leung", "Dayi Lin", "Boyuan Chen", "Ahmed E. Hassan"], "title": "SPICE: An Automated SWE-Bench Labeling Pipeline for Issue Clarity, Test Coverage, and Effort Estimation", "comment": null, "summary": "High-quality labeled datasets are crucial for training and evaluating\nfoundation models in software engineering, but creating them is often\nprohibitively expensive and labor-intensive. We introduce SPICE, a scalable,\nautomated pipeline for labeling SWE-bench-style datasets with annotations for\nissue clarity, test coverage, and effort estimation. SPICE combines\ncontext-aware code navigation, rationale-driven prompting, and multi-pass\nconsensus to produce labels that closely approximate expert annotations.\nSPICE's design was informed by our own experience and frustration in labeling\nmore than 800 instances from SWE-Gym. SPICE achieves strong agreement with\nhuman-labeled SWE-bench Verified data while reducing the cost of labeling 1,000\ninstances from around $100,000 (manual annotation) to just $5.10. These results\ndemonstrate SPICE's potential to enable cost-effective, large-scale dataset\ncreation for SE-focused FMs. To support the community, we release both SPICE\ntool and SPICE Bench, a new dataset of 6,802 SPICE-labeled instances curated\nfrom 291 open-source projects in SWE-Gym (over 13x larger than SWE-bench\nVerified).", "AI": {"tldr": "SPICE\u662f\u4e00\u4e2a\u81ea\u52a8\u5316\u6807\u6ce8\u5de5\u5177\uff0c\u7528\u4e8e\u751f\u6210\u9ad8\u8d28\u91cf\u7684\u8f6f\u4ef6\u5de5\u7a0b\u6570\u636e\u96c6\uff0c\u663e\u8457\u964d\u4f4e\u6807\u6ce8\u6210\u672c\u3002", "motivation": "\u9ad8\u8d28\u91cf\u6807\u6ce8\u6570\u636e\u96c6\u5bf9\u8bad\u7ec3\u548c\u8bc4\u4f30\u57fa\u7840\u6a21\u578b\u81f3\u5173\u91cd\u8981\uff0c\u4f46\u624b\u52a8\u6807\u6ce8\u6210\u672c\u9ad8\u6602\u4e14\u8017\u65f6\u3002", "method": "SPICE\u7ed3\u5408\u4e0a\u4e0b\u6587\u611f\u77e5\u4ee3\u7801\u5bfc\u822a\u3001\u57fa\u4e8e\u7406\u7531\u7684\u63d0\u793a\u548c\u591a\u8f6e\u5171\u8bc6\uff0c\u751f\u6210\u63a5\u8fd1\u4e13\u5bb6\u6807\u6ce8\u7684\u6807\u7b7e\u3002", "result": "SPICE\u57281000\u4e2a\u5b9e\u4f8b\u4e0a\u7684\u6807\u6ce8\u6210\u672c\u4ece10\u4e07\u7f8e\u5143\u964d\u81f35.10\u7f8e\u5143\uff0c\u5e76\u4e0e\u4eba\u5de5\u6807\u6ce8\u6570\u636e\u9ad8\u5ea6\u4e00\u81f4\u3002", "conclusion": "SPICE\u80fd\u591f\u4f4e\u6210\u672c\u3001\u5927\u89c4\u6a21\u5730\u521b\u5efa\u8f6f\u4ef6\u5de5\u7a0b\u6570\u636e\u96c6\uff0c\u5e76\u53d1\u5e03\u4e86\u5de5\u5177\u548c\u65b0\u6570\u636e\u96c6SPICE Bench\u3002"}}
{"id": "2507.09135", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.09135", "abs": "https://arxiv.org/abs/2507.09135", "authors": ["Yalong Du", "Chaozheng Wang", "Huaijin Wang"], "title": "Position Paper: Programming Language Techniques for Bridging LLM Code Generation Semantic Gaps", "comment": null, "summary": "Large Language Models have demonstrated remarkable capabilities in automated\ncode generation, yet their statistical nature and black-box characteristics\ncreate significant semantic gaps manifested through syntax errors, semantic\nhallucinations, and reliability concerns. This position paper argues that\nprincipled integration of Programming Language (PL) techniques is essential for\nbridging these gaps. Through structured program representations, formal\ncorrectness guarantees, and robust verification mechanisms, PL techniques can\nelevate LLM-generated code from statistical pattern matching to truly reliable\nand trustworthy levels. This integration is crucial for developing systems that\ngenerate code that is not only functionally correct but also interpretable,\nverifiable, and ultimately trustworthy.", "AI": {"tldr": "\u8bba\u6587\u4e3b\u5f20\u901a\u8fc7\u7f16\u7a0b\u8bed\u8a00\uff08PL\uff09\u6280\u672f\u5f25\u8865\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u5728\u4ee3\u7801\u751f\u6210\u4e2d\u7684\u8bed\u4e49\u7f3a\u9677\uff0c\u63d0\u5347\u4ee3\u7801\u7684\u53ef\u9760\u6027\u548c\u53ef\u4fe1\u4efb\u6027\u3002", "motivation": "LLM\u5728\u4ee3\u7801\u751f\u6210\u4e2d\u5b58\u5728\u8bed\u6cd5\u9519\u8bef\u3001\u8bed\u4e49\u5e7b\u89c9\u548c\u53ef\u9760\u6027\u95ee\u9898\uff0c\u9700\u8981PL\u6280\u672f\u5f25\u8865\u8fd9\u4e9b\u7f3a\u9677\u3002", "method": "\u63d0\u51fa\u901a\u8fc7\u7ed3\u6784\u5316\u7a0b\u5e8f\u8868\u793a\u3001\u5f62\u5f0f\u5316\u6b63\u786e\u6027\u4fdd\u8bc1\u548c\u9c81\u68d2\u9a8c\u8bc1\u673a\u5236\uff0c\u5c06PL\u6280\u672f\u4e0eLLM\u7ed3\u5408\u3002", "result": "PL\u6280\u672f\u53ef\u5c06LLM\u751f\u6210\u7684\u4ee3\u7801\u4ece\u7edf\u8ba1\u6a21\u5f0f\u5339\u914d\u63d0\u5347\u5230\u53ef\u9760\u3001\u53ef\u4fe1\u4efb\u7684\u6c34\u5e73\u3002", "conclusion": "PL\u4e0eLLM\u7684\u6574\u5408\u5bf9\u751f\u6210\u529f\u80fd\u6b63\u786e\u3001\u53ef\u89e3\u91ca\u3001\u53ef\u9a8c\u8bc1\u4e14\u53ef\u4fe1\u7684\u4ee3\u7801\u81f3\u5173\u91cd\u8981\u3002"}}
{"id": "2507.09186", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.09186", "abs": "https://arxiv.org/abs/2507.09186", "authors": ["Minhaj Uddin Ahmad", "Akid Abrar", "Sagar Dasgupta", "Mizanur Rahman"], "title": "OpenCAMS: An Open-Source Connected and Automated Mobility Co-Simulation Platform for Advanced Transportation Research", "comment": null, "summary": "We introduce OpenCAMS (Open-Source Connected and Automated Mobility\nCo-Simulation Platform), an open-source, synchronized, and extensible\nco-simulation framework that tightly couples three best-in-class simulation\ntools: (i) SUMO, (ii) CARLA, and (iii) OMNeT++. OpenCAMS is designed to support\nadvanced research in transportation safety, mobility, and cybersecurity by\ncombining the strengths of each simulation domain. Specifically, SUMO provides\nlarge-scale, microscopic traffic modeling; CARLA offers high-fidelity 3D\nperception, vehicle dynamics, and control simulation; and OMNeT++ enables\nmodular, event-driven network communication, such as cellular\nvehicle-to-everything (C-V2X). OpenCAMS employs a time-synchronized,\nbidirectional coupling architecture that ensures coherent simulation\nprogression across traffic, perception, and communication domains while\npreserving modularity and reproducibility. For example, CARLA can simulate and\nrender a subset of vehicles that require detailed sensor emulation and control\nlogic; SUMO orchestrates network-wide traffic flow, vehicle routing, and\ntraffic signal management; and OMNeT++ dynamically maps communication nodes to\nboth mobile entities (e.g., vehicles) and static entities (e.g., roadside\nunits) to enable C-V2X communication. While these three simulators form the\nfoundational core of OpenCAMS, the platform is designed to be expandable and\nfuture-proof, allowing additional simulators to be integrated on top of this\ncore without requiring fundamental changes to the system architecture. The\nOpenCAMS platform is fully open-source and publicly available through its\nGitHub repository https://github.com/minhaj6/carla-sumo-omnetpp-cosim,\nproviding the research community with an accessible, flexible, and\ncollaborative environment for advancing next-generation intelligent\ntransportation systems.", "AI": {"tldr": "OpenCAMS\u662f\u4e00\u4e2a\u5f00\u6e90\u3001\u540c\u6b65\u4e14\u53ef\u6269\u5c55\u7684\u534f\u540c\u4eff\u771f\u5e73\u53f0\uff0c\u6574\u5408\u4e86SUMO\u3001CARLA\u548cOMNeT++\u4e09\u5927\u4eff\u771f\u5de5\u5177\uff0c\u7528\u4e8e\u4ea4\u901a\u3001\u611f\u77e5\u548c\u901a\u4fe1\u9886\u57df\u7684\u7814\u7a76\u3002", "motivation": "\u652f\u6301\u4ea4\u901a\u5b89\u5168\u6027\u3001\u79fb\u52a8\u6027\u548c\u7f51\u7edc\u5b89\u5168\u7684\u9ad8\u7ea7\u7814\u7a76\uff0c\u901a\u8fc7\u7ed3\u5408\u4e0d\u540c\u4eff\u771f\u5de5\u5177\u7684\u4f18\u52bf\uff0c\u63d0\u4f9b\u66f4\u5168\u9762\u7684\u89e3\u51b3\u65b9\u6848\u3002", "method": "\u91c7\u7528\u65f6\u95f4\u540c\u6b65\u7684\u53cc\u5411\u8026\u5408\u67b6\u6784\uff0c\u786e\u4fdd\u4ea4\u901a\u3001\u611f\u77e5\u548c\u901a\u4fe1\u9886\u57df\u7684\u4eff\u771f\u4e00\u81f4\u6027\uff0c\u540c\u65f6\u4fdd\u6301\u6a21\u5757\u5316\u548c\u53ef\u6269\u5c55\u6027\u3002", "result": "OpenCAMS\u5e73\u53f0\u5f00\u6e90\u53ef\u7528\uff0c\u4e3a\u7814\u7a76\u793e\u533a\u63d0\u4f9b\u4e86\u7075\u6d3b\u3001\u534f\u4f5c\u7684\u73af\u5883\uff0c\u652f\u6301\u4e0b\u4e00\u4ee3\u667a\u80fd\u4ea4\u901a\u7cfb\u7edf\u7684\u53d1\u5c55\u3002", "conclusion": "OpenCAMS\u901a\u8fc7\u6574\u5408\u4e09\u5927\u4eff\u771f\u5de5\u5177\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u5f3a\u5927\u4e14\u53ef\u6269\u5c55\u7684\u7814\u7a76\u5e73\u53f0\uff0c\u63a8\u52a8\u4e86\u667a\u80fd\u4ea4\u901a\u7cfb\u7edf\u7684\u521b\u65b0\u3002"}}
{"id": "2507.09199", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.09199", "abs": "https://arxiv.org/abs/2507.09199", "authors": ["Huihui Huang", "Ratnadira Widyasari", "Ting Zhang", "Ivana Clairine Irsan", "Jieke Shi", "Han Wei Ang", "Frank Liauw", "Eng Lieh Ouh", "Lwin Khin Shar", "Hong Jin Kang", "David Lo"], "title": "Back to the Basics: Rethinking Issue-Commit Linking with LLM-Assisted Retrieval", "comment": null, "summary": "Issue-commit linking, which connects issues with commits that fix them, is\ncrucial for software maintenance. Existing approaches have shown promise in\nautomatically recovering these links. Evaluations of these techniques assess\ntheir ability to identify genuine links from plausible but false links.\nHowever, these evaluations overlook the fact that, in reality, when a\nrepository has more commits, the presence of more plausible yet unrelated\ncommits may interfere with the tool in differentiating the correct fix commits.\nTo address this, we propose the Realistic Distribution Setting (RDS) and use it\nto construct a more realistic evaluation dataset that includes 20 open-source\nprojects. By evaluating tools on this dataset, we observe that the performance\nof the state-of-the-art deep learning-based approach drops by more than half,\nwhile the traditional Information Retrieval method, VSM, outperforms it.\n  Inspired by these observations, we propose EasyLink, which utilizes a vector\ndatabase as a modern Information Retrieval technique. To address the\nlong-standing problem of the semantic gap between issues and commits, EasyLink\nleverages a large language model to rerank the commits retrieved from the\ndatabase. Under our evaluation, EasyLink achieves an average Precision@1 of\n75.91%, improving over the state-of-the-art by over four times. Additionally,\nthis paper provides practical guidelines for advancing research in issue-commit\nlink recovery.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u66f4\u73b0\u5b9e\u7684\u8bc4\u4f30\u8bbe\u7f6e\uff08RDS\uff09\u6765\u6d4b\u8bd5\u95ee\u9898-\u63d0\u4ea4\u94fe\u63a5\u5de5\u5177\u7684\u6027\u80fd\uff0c\u53d1\u73b0\u73b0\u6709\u65b9\u6cd5\u5728\u771f\u5b9e\u573a\u666f\u4e2d\u8868\u73b0\u4e0b\u964d\u3002\u57fa\u4e8e\u6b64\uff0c\u4f5c\u8005\u63d0\u51fa\u4e86EasyLink\uff0c\u7ed3\u5408\u5411\u91cf\u6570\u636e\u5e93\u548c\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff0c\u663e\u8457\u63d0\u5347\u4e86\u6027\u80fd\u3002", "motivation": "\u73b0\u6709\u95ee\u9898-\u63d0\u4ea4\u94fe\u63a5\u5de5\u5177\u7684\u8bc4\u4f30\u5ffd\u7565\u4e86\u771f\u5b9e\u573a\u666f\u4e2d\u5927\u91cf\u65e0\u5173\u63d0\u4ea4\u7684\u5e72\u6270\uff0c\u5bfc\u81f4\u6027\u80fd\u88ab\u9ad8\u4f30\u3002", "method": "\u63d0\u51faRealistic Distribution Setting\uff08RDS\uff09\u6784\u5efa\u66f4\u771f\u5b9e\u7684\u8bc4\u4f30\u6570\u636e\u96c6\uff0c\u5e76\u5f00\u53d1EasyLink\uff0c\u7ed3\u5408\u5411\u91cf\u6570\u636e\u5e93\u548c\u5927\u578b\u8bed\u8a00\u6a21\u578b\u8fdb\u884c\u91cd\u65b0\u6392\u5e8f\u3002", "result": "\u5728RDS\u4e0b\uff0c\u73b0\u6709\u6df1\u5ea6\u5b66\u4e60\u65b9\u6cd5\u7684\u6027\u80fd\u4e0b\u964d\u8d85\u8fc7\u4e00\u534a\uff0c\u800cEasyLink\u7684Precision@1\u8fbe\u523075.91%\uff0c\u6bd4\u73b0\u6709\u6700\u4f18\u65b9\u6cd5\u63d0\u5347\u56db\u500d\u3002", "conclusion": "\u8bba\u6587\u5f3a\u8c03\u4e86\u771f\u5b9e\u8bc4\u4f30\u7684\u91cd\u8981\u6027\uff0c\u5e76\u63d0\u51fa\u4e86\u6027\u80fd\u663e\u8457\u63d0\u5347\u7684EasyLink\u65b9\u6cd5\uff0c\u4e3a\u95ee\u9898-\u63d0\u4ea4\u94fe\u63a5\u7814\u7a76\u63d0\u4f9b\u4e86\u5b9e\u7528\u6307\u5bfc\u3002"}}
{"id": "2507.09220", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.09220", "abs": "https://arxiv.org/abs/2507.09220", "authors": ["Syed Tauhid Ullah Shah", "Mohammad Hussein", "Ann Barcomb", "Mohammad Moshirpour"], "title": "Explainability as a Compliance Requirement: What Regulated Industries Need from AI Tools for Design Artifact Generation", "comment": null, "summary": "Artificial Intelligence (AI) tools for automating design artifact generation\nare increasingly used in Requirements Engineering (RE) to transform textual\nrequirements into structured diagrams and models. While these AI tools,\nparticularly those based on Natural Language Processing (NLP), promise to\nimprove efficiency, their adoption remains limited in regulated industries\nwhere transparency and traceability are essential. In this paper, we\ninvestigate the explainability gap in AI-driven design artifact generation\nthrough semi-structured interviews with ten practitioners from safety-critical\nindustries. We examine how current AI-based tools are integrated into workflows\nand the challenges arising from their lack of explainability. We also explore\nmitigation strategies, their impact on project outcomes, and features needed to\nimprove usability. Our findings reveal that non-explainable AI outputs\nnecessitate extensive manual validation, reduce stakeholder trust, struggle to\nhandle domain-specific terminology, disrupt team collaboration, and introduce\nregulatory compliance risks, often negating the anticipated efficiency\nbenefits. To address these issues, we identify key improvements, including\nsource tracing, providing clear justifications for tool-generated decisions,\nsupporting domain-specific adaptation, and enabling compliance validation. This\nstudy outlines a practical roadmap for improving the transparency, reliability,\nand applicability of AI tools in requirements engineering workflows,\nparticularly in regulated and safety-critical environments where explainability\nis crucial for adoption and certification.", "AI": {"tldr": "\u8bba\u6587\u63a2\u8ba8\u4e86AI\u5de5\u5177\u5728\u9700\u6c42\u5de5\u7a0b\u4e2d\u751f\u6210\u8bbe\u8ba1\u5de5\u4ef6\u65f6\u7684\u53ef\u89e3\u91ca\u6027\u5dee\u8ddd\uff0c\u901a\u8fc7\u8bbf\u8c08\u63ed\u793a\u4e86\u975e\u89e3\u91ca\u6027AI\u8f93\u51fa\u5e26\u6765\u7684\u95ee\u9898\uff0c\u5e76\u63d0\u51fa\u4e86\u6539\u8fdb\u65b9\u5411\u3002", "motivation": "\u7814\u7a76AI\u5de5\u5177\u5728\u9700\u6c42\u5de5\u7a0b\u4e2d\u7684\u5e94\u7528\uff0c\u7279\u522b\u662f\u5728\u53d7\u76d1\u7ba1\u884c\u4e1a\u4e2d\uff0c\u900f\u660e\u5ea6\u548c\u53ef\u8ffd\u6eaf\u6027\u81f3\u5173\u91cd\u8981\uff0c\u4f46\u73b0\u6709\u5de5\u5177\u7f3a\u4e4f\u53ef\u89e3\u91ca\u6027\u3002", "method": "\u901a\u8fc7\u534a\u7ed3\u6784\u5316\u8bbf\u8c08\uff0c\u8c03\u67e5\u4e86\u5341\u4f4d\u6765\u81ea\u5b89\u5168\u5173\u952e\u884c\u4e1a\u7684\u4ece\u4e1a\u8005\uff0c\u63a2\u8ba8AI\u5de5\u5177\u7684\u96c6\u6210\u3001\u6311\u6218\u53ca\u7f13\u89e3\u7b56\u7565\u3002", "result": "\u53d1\u73b0\u975e\u89e3\u91ca\u6027AI\u8f93\u51fa\u5bfc\u81f4\u624b\u52a8\u9a8c\u8bc1\u589e\u52a0\u3001\u4fe1\u4efb\u964d\u4f4e\u3001\u9886\u57df\u672f\u8bed\u5904\u7406\u56f0\u96be\u3001\u56e2\u961f\u534f\u4f5c\u53d7\u963b\u548c\u5408\u89c4\u98ce\u9669\u3002", "conclusion": "\u63d0\u51fa\u4e86\u6539\u8fdb\u65b9\u5411\uff0c\u5982\u6e90\u8ffd\u8e2a\u3001\u51b3\u7b56\u89e3\u91ca\u3001\u9886\u57df\u9002\u5e94\u548c\u5408\u89c4\u9a8c\u8bc1\uff0c\u4ee5\u63d0\u9ad8AI\u5de5\u5177\u7684\u900f\u660e\u5ea6\u548c\u53ef\u9760\u6027\u3002"}}
{"id": "2507.09315", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.09315", "abs": "https://arxiv.org/abs/2507.09315", "authors": ["Yongqian Sun", "Weihua Kuang", "Chao Shen", "Xidao Wen", "Tinghua Zheng", "Heng Liu", "Shenglin Zhang", "Bo Wu", "Dan Pei"], "title": "Enhancing Interpretability in Software Change Management with Chain-of-Thought Reasoning", "comment": "22 pages, 19 figures", "summary": "In modern online services, frequent software changes introduce significant\nrisks. To tackle this challenge, we propose SCELM (Software Change Evaluation\nand Lifecycle Management), an end-to-end automated framework for software\nchange management. SCELM aims to manage software changes efficiently and\nprecisely, significantly reducing service failures and economic losses.", "AI": {"tldr": "SCELM\u662f\u4e00\u4e2a\u7aef\u5230\u7aef\u7684\u81ea\u52a8\u5316\u6846\u67b6\uff0c\u7528\u4e8e\u9ad8\u6548\u7ba1\u7406\u8f6f\u4ef6\u53d8\u66f4\uff0c\u51cf\u5c11\u670d\u52a1\u6545\u969c\u548c\u7ecf\u6d4e\u635f\u5931\u3002", "motivation": "\u73b0\u4ee3\u5728\u7ebf\u670d\u52a1\u4e2d\u9891\u7e41\u7684\u8f6f\u4ef6\u53d8\u66f4\u5e26\u6765\u91cd\u5927\u98ce\u9669\uff0c\u9700\u8981\u4e00\u79cd\u9ad8\u6548\u7684\u89e3\u51b3\u65b9\u6848\u3002", "method": "\u63d0\u51faSCELM\u6846\u67b6\uff0c\u5b9e\u73b0\u8f6f\u4ef6\u53d8\u66f4\u7684\u81ea\u52a8\u5316\u8bc4\u4f30\u548c\u751f\u547d\u5468\u671f\u7ba1\u7406\u3002", "result": "SCELM\u663e\u8457\u51cf\u5c11\u4e86\u670d\u52a1\u6545\u969c\u548c\u7ecf\u6d4e\u635f\u5931\u3002", "conclusion": "SCELM\u4e3a\u8f6f\u4ef6\u53d8\u66f4\u7ba1\u7406\u63d0\u4f9b\u4e86\u4e00\u79cd\u9ad8\u6548\u4e14\u7cbe\u786e\u7684\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2507.09414", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.09414", "abs": "https://arxiv.org/abs/2507.09414", "authors": ["Khizra Sohail", "Atif Aftab Ahmed Jilani", "Nigar Azhar Butt"], "title": "Enhancing NeuroEvolution-Based Game Testing: A Branch Coverage Approach for Scratch Programs", "comment": null, "summary": "Automated test generation for game-like programs presents unique challenges\ndue to their non-deterministic behavior and complex control structures. The\nNEATEST framework has been used for automated testing in Scratch games,\nemploying neuroevolution-based test generation optimized for statement\ncoverage. However, statement coverage alone is often insufficient for fault\ndetection, as it does not guarantee execution of all logical branches. This\npaper introduces a branch coverage-based fitness function to enhance test\neffectiveness in automated game testing. We extend NEATEST by integrating a\nbranch fitness function that prioritizes control-dependent branches, guiding\nthe neuroevolution process to maximize branch exploration. To evaluate the\neffectiveness of this approach, empirical experiments were conducted on 25\nScratch games, comparing Neatest with Statement Coverage (NSC) against Neatest\nwith Branch Coverage (NBC). A mutation analysis was also performed to assess\nthe fault detection capabilities of both techniques. The results demonstrate\nthat NBC achieves higher branch coverage than NSC in 13 out of 25 games,\nparticularly in programs with complex conditional structures. Moreover, NBC\nachieves a lower false positive rate in mutation testing, making it a more\nreliable approach for identifying faulty behavior in game programs. These\nfindings confirm that branch coverage-based test generation improves test\ncoverage and fault detection in Scratch programs.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8e\u5206\u652f\u8986\u76d6\u7684\u9002\u5e94\u5ea6\u51fd\u6570\uff0c\u7528\u4e8e\u6539\u8fdb\u6e38\u620f\u81ea\u52a8\u5316\u6d4b\u8bd5\u4e2d\u7684\u6d4b\u8bd5\u6548\u679c\uff0c\u5e76\u901a\u8fc7\u5b9e\u9a8c\u9a8c\u8bc1\u5176\u4f18\u4e8e\u4f20\u7edf\u7684\u8bed\u53e5\u8986\u76d6\u65b9\u6cd5\u3002", "motivation": "\u6e38\u620f\u7a0b\u5e8f\u7684\u975e\u786e\u5b9a\u6027\u548c\u590d\u6742\u63a7\u5236\u7ed3\u6784\u4f7f\u5f97\u81ea\u52a8\u5316\u6d4b\u8bd5\u751f\u6210\u5177\u6709\u6311\u6218\u6027\uff0c\u800c\u4ec5\u4f9d\u8d56\u8bed\u53e5\u8986\u76d6\u65e0\u6cd5\u4fdd\u8bc1\u6240\u6709\u903b\u8f91\u5206\u652f\u7684\u6267\u884c\uff0c\u56e0\u6b64\u9700\u8981\u66f4\u6709\u6548\u7684\u6d4b\u8bd5\u65b9\u6cd5\u3002", "method": "\u6269\u5c55\u4e86NEATEST\u6846\u67b6\uff0c\u5f15\u5165\u5206\u652f\u8986\u76d6\u9002\u5e94\u5ea6\u51fd\u6570\uff0c\u4f18\u5148\u5904\u7406\u63a7\u5236\u4f9d\u8d56\u5206\u652f\uff0c\u4ee5\u6700\u5927\u5316\u5206\u652f\u63a2\u7d22\u3002\u5b9e\u9a8c\u6bd4\u8f83\u4e86\u57fa\u4e8e\u8bed\u53e5\u8986\u76d6\u548c\u5206\u652f\u8986\u76d6\u7684\u4e24\u79cd\u65b9\u6cd5\u3002", "result": "\u572825\u4e2aScratch\u6e38\u620f\u4e2d\uff0c\u57fa\u4e8e\u5206\u652f\u8986\u76d6\u7684\u65b9\u6cd5\u572813\u4e2a\u6e38\u620f\u4e2d\u8868\u73b0\u66f4\u597d\uff0c\u5c24\u5176\u5728\u590d\u6742\u6761\u4ef6\u7ed3\u6784\u7684\u7a0b\u5e8f\u4e2d\uff0c\u4e14\u5177\u6709\u66f4\u4f4e\u7684\u8bef\u62a5\u7387\u3002", "conclusion": "\u5206\u652f\u8986\u76d6\u7684\u6d4b\u8bd5\u751f\u6210\u65b9\u6cd5\u80fd\u663e\u8457\u63d0\u9ad8\u6d4b\u8bd5\u8986\u76d6\u7387\u548c\u6545\u969c\u68c0\u6d4b\u80fd\u529b\uff0c\u9002\u7528\u4e8e\u6e38\u620f\u7a0b\u5e8f\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u3002"}}
{"id": "2507.09481", "categories": ["cs.SE", "cs.AI", "cs.CL"], "pdf": "https://arxiv.org/pdf/2507.09481", "abs": "https://arxiv.org/abs/2507.09481", "authors": ["Yuheng Huang", "Da Song", "Zhenlan Ji", "Shuai Wang", "Lei Ma"], "title": "Evaluating LLMs on Sequential API Call Through Automated Test Generation", "comment": null, "summary": "By integrating tools from external APIs, Large Language Models (LLMs) have\nexpanded their promising capabilities in a diverse spectrum of complex\nreal-world tasks. However, testing, evaluation, and analysis of LLM tool use\nremain in their early stages. Most existing benchmarks rely on manually\ncollected test cases, many of which cannot be automatically checked for\nsemantic correctness and instead depend on static methods such as string\nmatching. Additionally, these benchmarks often overlook the complex\ninteractions that occur between sequential API calls, which are common in\nreal-world applications. To fill the gap, in this paper, we introduce StateGen,\nan automated framework designed to generate diverse coding tasks involving\nsequential API interactions. StateGen combines state-machine-based API\nconstraint solving and validation, energy-based sampling, and control-flow\ninjection to generate executable programs. These programs are then translated\ninto human-like natural language task descriptions through a collaboration of\ntwo LLM agents. Utilizing StateGen, we construct StateEval, a benchmark\nencompassing 120 verified test cases spanning across three representative\nscenarios: Session Service, Tensor Operation, and ElevenLabs MCP. Experimental\nresults confirm that StateGen can effectively generate challenging and\nrealistic API-oriented tasks, highlighting areas for improvement in current\nLLMs incorporating APIs.", "AI": {"tldr": "StateGen\u662f\u4e00\u4e2a\u81ea\u52a8\u5316\u6846\u67b6\uff0c\u7528\u4e8e\u751f\u6210\u6d89\u53ca\u987a\u5e8fAPI\u4ea4\u4e92\u7684\u591a\u6837\u5316\u7f16\u7801\u4efb\u52a1\uff0c\u586b\u8865\u4e86\u73b0\u6709\u57fa\u51c6\u6d4b\u8bd5\u7684\u4e0d\u8db3\u3002", "motivation": "\u73b0\u6709\u57fa\u51c6\u6d4b\u8bd5\u4f9d\u8d56\u624b\u52a8\u6536\u96c6\u7684\u6d4b\u8bd5\u7528\u4f8b\uff0c\u65e0\u6cd5\u81ea\u52a8\u68c0\u67e5\u8bed\u4e49\u6b63\u786e\u6027\uff0c\u4e14\u5ffd\u7565\u4e86\u987a\u5e8fAPI\u8c03\u7528\u7684\u590d\u6742\u4ea4\u4e92\u3002", "method": "StateGen\u7ed3\u5408\u72b6\u6001\u673a\u7ea6\u675f\u6c42\u89e3\u3001\u80fd\u91cf\u91c7\u6837\u548c\u63a7\u5236\u6d41\u6ce8\u5165\u751f\u6210\u53ef\u6267\u884c\u7a0b\u5e8f\uff0c\u5e76\u901a\u8fc7\u4e24\u4e2aLLM\u4ee3\u7406\u5c06\u5176\u8f6c\u5316\u4e3a\u81ea\u7136\u8bed\u8a00\u4efb\u52a1\u63cf\u8ff0\u3002", "result": "\u6784\u5efa\u4e86StateEval\u57fa\u51c6\uff0c\u5305\u542b120\u4e2a\u5df2\u9a8c\u8bc1\u6d4b\u8bd5\u7528\u4f8b\uff0c\u8986\u76d6\u4e09\u4e2a\u4ee3\u8868\u6027\u573a\u666f\uff0c\u5b9e\u9a8c\u8bc1\u660eStateGen\u80fd\u6709\u6548\u751f\u6210\u5177\u6709\u6311\u6218\u6027\u7684API\u4efb\u52a1\u3002", "conclusion": "StateGen\u4e3aLLM\u5de5\u5177\u4f7f\u7528\u7684\u6d4b\u8bd5\u548c\u8bc4\u4f30\u63d0\u4f9b\u4e86\u65b0\u65b9\u6cd5\uff0c\u63ed\u793a\u4e86\u5f53\u524dLLM\u5728API\u96c6\u6210\u4e2d\u7684\u6539\u8fdb\u7a7a\u95f4\u3002"}}
{"id": "2507.09490", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.09490", "abs": "https://arxiv.org/abs/2507.09490", "authors": ["Yan Zhao", "Chiwei Tang"], "title": "Towards LLM-Based Automatic Playtest", "comment": null, "summary": "Playtesting is the process in which people play a video game for testing. It\nis critical for the quality assurance of gaming software. Manual playtesting is\ntime-consuming and expensive. However, automating this process is challenging,\nas playtesting typically requires domain knowledge and problem-solving skills\nthat most conventional testing tools lack. Recent advancements in artificial\nintelligence (AI) have opened up new possibilities for applying Large Language\nModels (LLMs) to playtesting. However, significant challenges remain: current\nLLMs cannot visually perceive game environments, and most existing research\nfocuses on text-based games or games with robust APIs. Many non-text games lack\nAPIs to provide textual descriptions of game states, making it almost\nimpossible to naively apply LLMs for playtesting. This paper introduces Lap,\nour novel approach to LLM-based Automatic Playtesting, which uses ChatGPT to\ntest match-3 games, a category of games where players match three or more\nidentical tiles in a row or column to earn points. Lap encompasses three key\nphases: processing of game environments, prompting-based action generation, and\naction execution. Given a match-3 game, Lap takes a snapshot of the game board\nand converts it to a numeric matrix. It then prompts the ChatGPT-O1-mini API to\nsuggest moves based on that matrix and tentatively applies the suggested moves\nto earn points and trigger changes in the game board. It repeats the\nabove-mentioned three steps iteratively until timeout. For evaluation, we\nconducted a case study using Lap on an open-source match-3 game, CasseBonbons,\nand empirically compared it with three existing tools. Our results are\npromising: Lap outperformed existing tools by achieving higher code coverage\nand triggering more program crashes. This research sheds light on the future of\nautomatic testing and LLM applications.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u57fa\u4e8eLLM\u7684\u81ea\u52a8\u5316\u6e38\u620f\u6d4b\u8bd5\u65b9\u6cd5Lap\uff0c\u5229\u7528ChatGPT\u6d4b\u8bd5\u4e09\u6d88\u6e38\u620f\uff0c\u901a\u8fc7\u73af\u5883\u5904\u7406\u3001\u52a8\u4f5c\u751f\u6210\u548c\u6267\u884c\u4e09\u9636\u6bb5\u5b9e\u73b0\uff0c\u5e76\u5728\u5b9e\u9a8c\u4e2d\u8868\u73b0\u4f18\u4e8e\u73b0\u6709\u5de5\u5177\u3002", "motivation": "\u624b\u52a8\u6e38\u620f\u6d4b\u8bd5\u8017\u65f6\u4e14\u6602\u8d35\uff0c\u800c\u4f20\u7edf\u81ea\u52a8\u5316\u5de5\u5177\u7f3a\u4e4f\u9886\u57df\u77e5\u8bc6\u548c\u95ee\u9898\u89e3\u51b3\u80fd\u529b\u3002AI\u7684\u8fdb\u6b65\u4e3aLLM\u5e94\u7528\u4e8e\u6e38\u620f\u6d4b\u8bd5\u63d0\u4f9b\u4e86\u53ef\u80fd\uff0c\u4f46\u73b0\u6709LLM\u65e0\u6cd5\u89c6\u89c9\u611f\u77e5\u6e38\u620f\u73af\u5883\uff0c\u4e14\u591a\u6570\u7814\u7a76\u5c40\u9650\u4e8e\u6587\u672c\u6e38\u620f\u6216\u5177\u5907API\u7684\u6e38\u620f\u3002", "method": "Lap\u65b9\u6cd5\u5305\u62ec\u6e38\u620f\u73af\u5883\u5904\u7406\u3001\u57fa\u4e8e\u63d0\u793a\u7684\u52a8\u4f5c\u751f\u6210\u548c\u52a8\u4f5c\u6267\u884c\u4e09\u9636\u6bb5\uff0c\u901a\u8fc7\u5c06\u6e38\u620f\u677f\u8f6c\u6362\u4e3a\u6570\u503c\u77e9\u9635\uff0c\u5229\u7528ChatGPT\u751f\u6210\u52a8\u4f5c\u5efa\u8bae\u5e76\u6267\u884c\uff0c\u8fed\u4ee3\u76f4\u5230\u8d85\u65f6\u3002", "result": "\u5728\u5f00\u6e90\u4e09\u6d88\u6e38\u620fCasseBonbons\u4e0a\u7684\u5b9e\u9a8c\u8868\u660e\uff0cLap\u5728\u4ee3\u7801\u8986\u76d6\u7387\u548c\u89e6\u53d1\u7a0b\u5e8f\u5d29\u6e83\u65b9\u9762\u4f18\u4e8e\u73b0\u6709\u5de5\u5177\u3002", "conclusion": "Lap\u5c55\u793a\u4e86LLM\u5728\u81ea\u52a8\u5316\u6d4b\u8bd5\u4e2d\u7684\u6f5c\u529b\uff0c\u4e3a\u672a\u6765\u81ea\u52a8\u6d4b\u8bd5\u548cLLM\u5e94\u7528\u63d0\u4f9b\u4e86\u65b0\u601d\u8def\u3002"}}
{"id": "2507.09529", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.09529", "abs": "https://arxiv.org/abs/2507.09529", "authors": ["Yunqian Wang", "Xiaohong Li", "Yao Zhang", "Yuekang Li", "Zhiping Zhou", "Ruitao Feng"], "title": "It Only Gets Worse: Revisiting DL-Based Vulnerability Detectors from a Practical Perspective", "comment": null, "summary": "With the growing threat of software vulnerabilities, deep learning (DL)-based\ndetectors have gained popularity for vulnerability detection. However, doubts\nremain regarding their consistency within declared CWE ranges, real-world\neffectiveness, and applicability across scenarios. These issues may lead to\nunreliable detection, high false positives/negatives, and poor adaptability to\nemerging vulnerabilities. A comprehensive analysis is needed to uncover\ncritical factors affecting detection and guide improvements in model design and\ndeployment. In this paper, we present VulTegra, a novel evaluation framework\nthat conducts a multidimensional comparison of scratch-trained and\npre-trained-based DL models for vulnerability detection. VulTegra reveals that\nstate-of-the-art (SOTA) detectors still suffer from low consistency, limited\nreal-world capabilities, and scalability challenges. Contrary to common belief,\npre-trained models are not consistently better than scratch-trained models but\nexhibit distinct strengths in specific contexts.Importantly, our study exposes\nthe limitations of relying solely on CWE-based classification and identifies\nkey factors that significantly affect model performance. Experimental results\nshow that adjusting just one such factor consistently improves recall across\nall seven evaluated detectors, with six also achieving better F1 scores. Our\nfindings provide deeper insights into model behavior and emphasize the need to\nconsider both vulnerability types and inherent code features for effective\ndetection.", "AI": {"tldr": "VulTegra\u6846\u67b6\u5bf9\u57fa\u4e8e\u6df1\u5ea6\u5b66\u4e60\u7684\u6f0f\u6d1e\u68c0\u6d4b\u5668\u8fdb\u884c\u591a\u7ef4\u8bc4\u4f30\uff0c\u53d1\u73b0\u73b0\u6709\u65b9\u6cd5\u5728\u4e00\u81f4\u6027\u3001\u5b9e\u9645\u80fd\u529b\u548c\u6269\u5c55\u6027\u65b9\u9762\u5b58\u5728\u95ee\u9898\uff0c\u5e76\u63ed\u793a\u4e86\u9884\u8bad\u7ec3\u6a21\u578b\u5e76\u975e\u603b\u662f\u4f18\u4e8e\u4ece\u5934\u8bad\u7ec3\u7684\u6a21\u578b\u3002", "motivation": "\u968f\u7740\u8f6f\u4ef6\u6f0f\u6d1e\u5a01\u80c1\u589e\u52a0\uff0c\u6df1\u5ea6\u5b66\u4e60\u68c0\u6d4b\u5668\u6d41\u884c\uff0c\u4f46\u5176\u5728CWE\u8303\u56f4\u5185\u7684\u4e00\u81f4\u6027\u3001\u5b9e\u9645\u6548\u679c\u548c\u573a\u666f\u9002\u7528\u6027\u5b58\u7591\uff0c\u53ef\u80fd\u5bfc\u81f4\u4e0d\u53ef\u9760\u68c0\u6d4b\u3002", "method": "\u63d0\u51faVulTegra\u6846\u67b6\uff0c\u5bf9\u4ece\u5934\u8bad\u7ec3\u548c\u9884\u8bad\u7ec3\u7684DL\u6a21\u578b\u8fdb\u884c\u591a\u7ef4\u6bd4\u8f83\uff0c\u5206\u6790\u5173\u952e\u56e0\u7d20\u5bf9\u68c0\u6d4b\u6027\u80fd\u7684\u5f71\u54cd\u3002", "result": "\u5b9e\u9a8c\u8868\u660e\uff0c\u8c03\u6574\u5173\u952e\u56e0\u7d20\u53ef\u663e\u8457\u63d0\u5347\u53ec\u56de\u7387\u548cF1\u5206\u6570\uff0c\u9884\u8bad\u7ec3\u6a21\u578b\u5728\u7279\u5b9a\u573a\u666f\u4e0b\u8868\u73b0\u66f4\u4f18\u3002", "conclusion": "\u7814\u7a76\u5f3a\u8c03\u9700\u7ed3\u5408\u6f0f\u6d1e\u7c7b\u578b\u548c\u4ee3\u7801\u7279\u5f81\u6539\u8fdb\u68c0\u6d4b\u6a21\u578b\u8bbe\u8ba1\uff0c\u5e76\u6307\u51faCWE\u5206\u7c7b\u7684\u5c40\u9650\u6027\u3002"}}
{"id": "2507.09583", "categories": ["cs.SE", "cs.AI", "I.2.7; J.1"], "pdf": "https://arxiv.org/pdf/2507.09583", "abs": "https://arxiv.org/abs/2507.09583", "authors": ["Taniv Ashraf"], "title": "A Serverless Architecture for Real-Time Stock Analysis using Large Language Models: An Iterative Development and Debugging Case Study", "comment": "6 pages. The live application can be viewed at\n  https://codepen.io/tanivashraf/pen/GgpgxBY and the source code is available\n  at https://github.com/TanivAshraf/ai-stock-analyzer", "summary": "The advent of powerful, accessible Large Language Models (LLMs) like Google's\nGemini presents new opportunities for democratizing financial data analysis.\nThis paper documents the design, implementation, and iterative debugging of a\nnovel, serverless system for real-time stock analysis. The system leverages the\nGemini API for qualitative assessment, automates data ingestion and processing\nvia GitHub Actions, and presents the findings through a decoupled, static\nfrontend. We detail the architectural evolution of the system, from initial\nconcepts to a robust, event-driven pipeline, highlighting the practical\nchallenges encountered during deployment. A significant portion of this paper\nis dedicated to a case study on the debugging process, covering common software\nerrors, platform-specific permission issues, and rare, environment-level\nplatform bugs. The final architecture operates at a near-zero cost,\ndemonstrating a viable model for individuals to build sophisticated AI-powered\nfinancial tools. The operational application is publicly accessible, and the\ncomplete source code is available for review. We conclude by discussing the\nrole of LLMs in financial analysis, the importance of robust debugging\nmethodologies, and the emerging paradigm of human-AI collaboration in software\ndevelopment.", "AI": {"tldr": "\u672c\u6587\u4ecb\u7ecd\u4e86\u4e00\u4e2a\u57fa\u4e8eGoogle Gemini API\u7684\u5b9e\u65f6\u80a1\u7968\u5206\u6790\u7cfb\u7edf\uff0c\u901a\u8fc7\u65e0\u670d\u52a1\u5668\u67b6\u6784\u548c\u81ea\u52a8\u5316\u5de5\u5177\u5b9e\u73b0\u4f4e\u6210\u672c\u9ad8\u6548\u8fd0\u884c\u3002", "motivation": "\u5229\u7528\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08\u5982Gemini\uff09\u7684\u6f5c\u529b\uff0c\u4e3a\u4e2a\u4eba\u63d0\u4f9b\u4f4e\u6210\u672c\u3001\u9ad8\u6548\u7684\u91d1\u878d\u6570\u636e\u5206\u6790\u5de5\u5177\u3002", "method": "\u7cfb\u7edf\u7ed3\u5408Gemini API\u8fdb\u884c\u5b9a\u6027\u5206\u6790\uff0c\u901a\u8fc7GitHub Actions\u81ea\u52a8\u5316\u6570\u636e\u5904\u7406\uff0c\u5e76\u4f7f\u7528\u9759\u6001\u524d\u7aef\u5c55\u793a\u7ed3\u679c\u3002", "result": "\u6700\u7ec8\u67b6\u6784\u5b9e\u73b0\u4e86\u8fd1\u4e4e\u96f6\u6210\u672c\u8fd0\u884c\uff0c\u5c55\u793a\u4e86\u4e2a\u4eba\u6784\u5efaAI\u91d1\u878d\u5de5\u5177\u7684\u53ef\u884c\u6027\u3002", "conclusion": "\u8ba8\u8bba\u4e86LLM\u5728\u91d1\u878d\u5206\u6790\u4e2d\u7684\u4f5c\u7528\u3001\u8c03\u8bd5\u65b9\u6cd5\u7684\u91cd\u8981\u6027\uff0c\u4ee5\u53ca\u4eba\u673a\u534f\u4f5c\u5728\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u7684\u65b0\u8303\u5f0f\u3002"}}
{"id": "2507.09594", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.09594", "abs": "https://arxiv.org/abs/2507.09594", "authors": ["Aydin Homay"], "title": "How to Define Design in Industrial Control and Automation Software", "comment": null, "summary": "Design is a fundamental aspect of engineering, enabling the creation of\nproducts, systems, and organizations to meet societal and/or business needs.\nHowever, the absence of a scientific foundation in design often results in\nsubjective decision-making, reducing both efficiency and innovation. This\nchallenge is particularly evident in the software industry and, by extension,\nin the domain of industrial control and automation systems (iCAS).\n  In this study, first we review the existing design definitions within the\nsoftware industry, challenge prevailing misconceptions about design, review\ndesign definition in the field of design theory and address key questions such\nas: When does design begin? How can design be defined scientifically? What\nconstitutes good design? and the difference between design and design language\nby relying on advancements in the field of design theory. We also evaluate the\ndistinction between ad-hoc and systematic design approaches, and present\narguments on how to balance complementary operational concerns while resolving\nconflicting evolutionary concerns.", "AI": {"tldr": "\u8bba\u6587\u63a2\u8ba8\u4e86\u8bbe\u8ba1\u5728\u5de5\u7a0b\u4e2d\u7684\u91cd\u8981\u6027\uff0c\u6307\u51fa\u7f3a\u4e4f\u79d1\u5b66\u57fa\u7840\u4f1a\u5bfc\u81f4\u4e3b\u89c2\u51b3\u7b56\uff0c\u5f71\u54cd\u6548\u7387\u548c\u521b\u65b0\u3002\u7814\u7a76\u901a\u8fc7\u5206\u6790\u8f6f\u4ef6\u884c\u4e1a\u7684\u8bbe\u8ba1\u5b9a\u4e49\uff0c\u6311\u6218\u8bef\u89e3\uff0c\u5e76\u63d0\u51fa\u79d1\u5b66\u5b9a\u4e49\u8bbe\u8ba1\u7684\u65b9\u6cd5\u3002", "motivation": "\u8bbe\u8ba1\u5728\u5de5\u7a0b\u4e2d\u81f3\u5173\u91cd\u8981\uff0c\u4f46\u7f3a\u4e4f\u79d1\u5b66\u57fa\u7840\u5bfc\u81f4\u4e3b\u89c2\u51b3\u7b56\uff0c\u5f71\u54cd\u6548\u7387\u548c\u521b\u65b0\uff0c\u5c24\u5176\u5728\u8f6f\u4ef6\u548c\u5de5\u4e1a\u63a7\u5236\u9886\u57df\u3002", "method": "\u56de\u987e\u8f6f\u4ef6\u884c\u4e1a\u7684\u8bbe\u8ba1\u5b9a\u4e49\uff0c\u6311\u6218\u8bef\u89e3\uff0c\u57fa\u4e8e\u8bbe\u8ba1\u7406\u8bba\u63d0\u51fa\u79d1\u5b66\u5b9a\u4e49\u8bbe\u8ba1\u7684\u65b9\u6cd5\uff0c\u5e76\u533a\u5206\u4e34\u65f6\u548c\u7cfb\u7edf\u8bbe\u8ba1\u65b9\u6cd5\u3002", "result": "\u63d0\u51fa\u4e86\u79d1\u5b66\u5b9a\u4e49\u8bbe\u8ba1\u7684\u65b9\u6cd5\uff0c\u5e76\u63a2\u8ba8\u4e86\u5982\u4f55\u5e73\u8861\u64cd\u4f5c\u548c\u8fdb\u5316\u9700\u6c42\u3002", "conclusion": "\u901a\u8fc7\u79d1\u5b66\u5b9a\u4e49\u8bbe\u8ba1\uff0c\u53ef\u4ee5\u63d0\u9ad8\u8bbe\u8ba1\u6548\u7387\u548c\u521b\u65b0\u6027\uff0c\u5c24\u5176\u5728\u8f6f\u4ef6\u548c\u5de5\u4e1a\u63a7\u5236\u9886\u57df\u3002"}}
{"id": "2507.09596", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.09596", "abs": "https://arxiv.org/abs/2507.09596", "authors": ["Aydin Homay"], "title": "The Mythical Good Software", "comment": null, "summary": "Good software has high cohesion and low coupling is clumsy, obscure, and in\nsome certain cases could be actually a harmful state of being. It is clumsy\nbecause there is no perfect correlation between higher cohesiveness and optimum\ndesign, and it is obscure because it conveys the message that coupling and\ncohesion are two distinct design principles, while there are in principle the\nsame design approaches, and only the time and space differ between them, and it\ncould also be a harmful state of being because we should not always aim for\nhigher cohesiveness without considering its cost.\n  In the course of this study, we aim to elucidate for the readers the meaning\nand underlying philosophy of the aforementioned paragraph.", "AI": {"tldr": "\u8bba\u6587\u63a2\u8ba8\u4e86\u9ad8\u5185\u805a\u4f4e\u8026\u5408\u7684\u5c40\u9650\u6027\uff0c\u6307\u51fa\u5176\u53ef\u80fd\u7b28\u62d9\u3001\u6a21\u7cca\u751a\u81f3\u6709\u5bb3\uff0c\u5e76\u5f3a\u8c03\u8bbe\u8ba1\u65f6\u9700\u6743\u8861\u6210\u672c\u3002", "motivation": "\u6f84\u6e05\u9ad8\u5185\u805a\u4f4e\u8026\u5408\u7684\u8bef\u89e3\uff0c\u63ed\u793a\u5176\u6f5c\u5728\u95ee\u9898\uff0c\u63d0\u9192\u8bbe\u8ba1\u65f6\u9700\u7efc\u5408\u8003\u8651\u3002", "method": "\u901a\u8fc7\u5206\u6790\u548c\u54f2\u5b66\u63a2\u8ba8\uff0c\u89e3\u91ca\u9ad8\u5185\u805a\u4f4e\u8026\u5408\u7684\u5c40\u9650\u6027\u53ca\u5176\u5b9e\u9645\u5f71\u54cd\u3002", "result": "\u6307\u51fa\u9ad8\u5185\u805a\u4f4e\u8026\u5408\u5e76\u975e\u7edd\u5bf9\u7406\u60f3\uff0c\u8bbe\u8ba1\u9700\u6743\u8861\u65f6\u95f4\u548c\u7a7a\u95f4\u6210\u672c\u3002", "conclusion": "\u8bbe\u8ba1\u539f\u5219\u5e94\u7075\u6d3b\u5e94\u7528\uff0c\u907f\u514d\u76f2\u76ee\u8ffd\u6c42\u9ad8\u5185\u805a\u4f4e\u8026\u5408\u800c\u5ffd\u89c6\u5b9e\u9645\u9700\u6c42\u3002"}}
{"id": "2507.09599", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.09599", "abs": "https://arxiv.org/abs/2507.09599", "authors": ["Aydin Homay"], "title": "Complexity and Coupling: A Functional Domain Approach", "comment": null, "summary": "This paper provides a precise and scientific definition of complexity and\ncoupling, grounded in the functional domain, particularly within industrial\ncontrol and automation systems (iCAS). We highlight the widespread ambiguity in\ndefining complexity and coupling, emphasizing that many existing definitions\nrooted in physical attributes lead to confusion and inconsistencies.\nFurthermore, we re-exhibit why coupled design inherently increases complexity\nand how potentially this complexity could be reduced. Drawing on examples from\nvarious disciplines, such as software engineering, industrial automation, and\nmechanical design, we demonstrate that complexity does not necessarily\ncorrelate with system size or the number of components, and coupling, unlike\ncommon belief in software engineering, actually does not occur in the physical\ndomain but in the functional domain. We conclude that effective design\nnecessitates addressing coupling and complexity within the functional domain.", "AI": {"tldr": "\u672c\u6587\u4e3a\u590d\u6742\u6027\u548c\u8026\u5408\u63d0\u4f9b\u4e86\u57fa\u4e8e\u529f\u80fd\u57df\u7684\u7cbe\u786e\u79d1\u5b66\u5b9a\u4e49\uff0c\u5f3a\u8c03\u73b0\u6709\u5b9a\u4e49\u7684\u6a21\u7cca\u6027\uff0c\u5e76\u63a2\u8ba8\u8026\u5408\u8bbe\u8ba1\u5982\u4f55\u589e\u52a0\u590d\u6742\u6027\u53ca\u5176\u53ef\u80fd\u7684\u51cf\u5c11\u65b9\u6cd5\u3002", "motivation": "\u89e3\u51b3\u5de5\u4e1a\u63a7\u5236\u548c\u81ea\u52a8\u5316\u7cfb\u7edf\u4e2d\u590d\u6742\u6027\u548c\u8026\u5408\u5b9a\u4e49\u7684\u6a21\u7cca\u6027\u95ee\u9898\uff0c\u6f84\u6e05\u7269\u7406\u5c5e\u6027\u5b9a\u4e49\u5bfc\u81f4\u7684\u6df7\u6dc6\u3002", "method": "\u901a\u8fc7\u591a\u5b66\u79d1\uff08\u5982\u8f6f\u4ef6\u5de5\u7a0b\u3001\u5de5\u4e1a\u81ea\u52a8\u5316\u3001\u673a\u68b0\u8bbe\u8ba1\uff09\u7684\u6848\u4f8b\u5206\u6790\uff0c\u91cd\u65b0\u5b9a\u4e49\u590d\u6742\u6027\u548c\u8026\u5408\u3002", "result": "\u590d\u6742\u6027\u4e0d\u5fc5\u7136\u4e0e\u7cfb\u7edf\u89c4\u6a21\u6216\u7ec4\u4ef6\u6570\u91cf\u76f8\u5173\uff0c\u8026\u5408\u53d1\u751f\u5728\u529f\u80fd\u57df\u800c\u975e\u7269\u7406\u57df\u3002", "conclusion": "\u6709\u6548\u8bbe\u8ba1\u9700\u5728\u529f\u80fd\u57df\u5185\u89e3\u51b3\u8026\u5408\u548c\u590d\u6742\u6027\u95ee\u9898\u3002"}}
{"id": "2507.09637", "categories": ["cs.SE", "cs.HC", "D.2.0; D.2.3; K.4.3"], "pdf": "https://arxiv.org/pdf/2507.09637", "abs": "https://arxiv.org/abs/2507.09637", "authors": ["Lo Gullstrand Heander", "Emma S\u00f6derberg", "Christofer Rydenf\u00e4lt"], "title": "Code Review as Decision-Making -- Building a Cognitive Model from the Questions Asked During Code Review", "comment": "39 pages, 14 figures Submitted to Empirical Software Engineering,\n  Springer Nature", "summary": "Code review is a well-established and valued practice in the software\nengineering community contributing to both code quality and interpersonal\nbenefits. However, there are challenges in both tools and processes that give\nrise to misalignments and frustrations. Recent research seeks to address this\nby automating code review entirely, but we believe that this risks losing the\nmajority of the interpersonal benefits such as knowledge transfer and shared\nownership.\n  We believe that by better understanding the cognitive processes involved in\ncode review, it would be possible to improve tool support, with out without AI,\nand make code review both more efficient, more enjoyable, while increasing or\nmaintaining all of its benefits. In this paper, we conduct an ethnographic\nthink-aloud study involving 10 participants and 34 code reviews. We build a\ncognitive model of code review bottom up through thematic, statistical,\ntemporal, and sequential analysis of the transcribed material. Through the\ndata, the similarities between the cognitive process in code review and\ndecision-making processes, especially recognition-primed decision-making,\nbecome apparent.\n  The result is the Code Review as Decision-Making (CRDM) model that shows how\nthe developers move through two phases during the code review; first an\norientation phase to establish context and rationale and then an analytical\nphase to understand, assess, and plan the rest of the review. Throughout the\nprocess several decisions must be taken, on writing comments, finding more\ninformation, voting, running the code locally, verifying continuous integration\nresults, etc.\n  Analysis software and process-coded data publicly available at:\nhttps://doi.org/10.5281/zenodo.15758266", "AI": {"tldr": "\u8bba\u6587\u63a2\u8ba8\u4e86\u4ee3\u7801\u5ba1\u67e5\u7684\u8ba4\u77e5\u8fc7\u7a0b\uff0c\u63d0\u51fa\u4e86CRDM\u6a21\u578b\uff0c\u5f3a\u8c03\u4ee3\u7801\u5ba1\u67e5\u5206\u4e3a\u4e24\u4e2a\u9636\u6bb5\uff1a\u5b9a\u4f4d\u9636\u6bb5\u548c\u5206\u6790\u9636\u6bb5\uff0c\u4ee5\u63d0\u5347\u6548\u7387\u548c\u4fdd\u6301\u4eba\u9645\u6548\u76ca\u3002", "motivation": "\u5c3d\u7ba1\u4ee3\u7801\u5ba1\u67e5\u5728\u8f6f\u4ef6\u5de5\u7a0b\u4e2d\u5f88\u91cd\u8981\uff0c\u4f46\u73b0\u6709\u5de5\u5177\u548c\u6d41\u7a0b\u5b58\u5728\u6311\u6218\uff0c\u81ea\u52a8\u5316\u53ef\u80fd\u727a\u7272\u4eba\u9645\u6548\u76ca\u3002\u7814\u7a76\u65e8\u5728\u901a\u8fc7\u7406\u89e3\u8ba4\u77e5\u8fc7\u7a0b\u6539\u8fdb\u5de5\u5177\u652f\u6301\u3002", "method": "\u901a\u8fc7\u6c11\u65cf\u5fd7\u6709\u58f0\u601d\u7ef4\u7814\u7a76\uff0c\u5bf910\u540d\u53c2\u4e0e\u8005\u768434\u6b21\u4ee3\u7801\u5ba1\u67e5\u8fdb\u884c\u4e3b\u9898\u3001\u7edf\u8ba1\u3001\u65f6\u95f4\u548c\u5e8f\u5217\u5206\u6790\uff0c\u6784\u5efa\u8ba4\u77e5\u6a21\u578b\u3002", "result": "\u63d0\u51fa\u4e86CRDM\u6a21\u578b\uff0c\u63ed\u793a\u4ee3\u7801\u5ba1\u67e5\u5206\u4e3a\u5b9a\u4f4d\u9636\u6bb5\u548c\u5206\u6790\u9636\u6bb5\uff0c\u6d89\u53ca\u591a\u9879\u51b3\u7b56\u3002", "conclusion": "CRDM\u6a21\u578b\u6709\u52a9\u4e8e\u6539\u8fdb\u4ee3\u7801\u5ba1\u67e5\u5de5\u5177\u548c\u6d41\u7a0b\uff0c\u540c\u65f6\u4fdd\u6301\u5176\u4eba\u9645\u6548\u76ca\u3002"}}
{"id": "2507.09665", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.09665", "abs": "https://arxiv.org/abs/2507.09665", "authors": ["Saima Afrin", "Bowen Xu", "Antonio Mastropaolo"], "title": "Is Quantization a Deal-breaker? Empirical Insights from Large Code Models", "comment": null, "summary": "The growing scale of large language models (LLMs) not only demands extensive\ncomputational resources but also raises environmental concerns due to their\nincreasing carbon footprint. Model quantization emerges as an effective\napproach that can reduce the resource demands of LLMs by decreasing parameter\nprecision without substantially affecting performance (e.g., 16 bit to 4 bit).\nWhile recent studies have established quantization as a promising approach for\noptimizing large code models (LCMs), a specialized subset of LLMs tailored for\nautomated software engineering, their findings offer only limited insights into\nits practical implications. Specifically, current investigations focus only on\nthe functional correctness of the code generated by quantized models,\nneglecting how quantization impacts critical aspects of code quality such as\nreliability, maintainability, and security. To bridge this gap, our study\ninvestigates the effects of quantization on the qualitative aspects of\nautomatically generated code. We apply Activation-aware Weight Quantization\n(AWQ) to two widely used code models, CodeLlama and DeepSeekCoder, to generate\nJava and Python code. Using state-of-the-art static analysis tools, we evaluate\nsoftware quality metrics and static features including cyclomatic complexity,\ncognitive complexity, and lines of code. Our findings reveal that quantization\nis a robust technique that not only preserves functional correctness, but also\nretains key qualitative code attributes sought after by developers, such as\nmaintainability and structural simplicity.", "AI": {"tldr": "\u8bba\u6587\u7814\u7a76\u4e86\u91cf\u5316\u6280\u672f\u5bf9\u5927\u578b\u4ee3\u7801\u6a21\u578b\u751f\u6210\u4ee3\u7801\u8d28\u91cf\u7684\u5f71\u54cd\uff0c\u53d1\u73b0\u91cf\u5316\u4e0d\u4ec5\u80fd\u4fdd\u6301\u529f\u80fd\u6b63\u786e\u6027\uff0c\u8fd8\u80fd\u4fdd\u7559\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u548c\u7ed3\u6784\u7b80\u6d01\u6027\u3002", "motivation": "\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u7684\u8d44\u6e90\u9700\u6c42\u548c\u78b3\u8db3\u8ff9\u95ee\u9898\u65e5\u76ca\u7a81\u51fa\uff0c\u91cf\u5316\u6280\u672f\u867d\u80fd\u51cf\u5c11\u8d44\u6e90\u9700\u6c42\uff0c\u4f46\u73b0\u6709\u7814\u7a76\u4ec5\u5173\u6ce8\u529f\u80fd\u6b63\u786e\u6027\uff0c\u5ffd\u7565\u4e86\u4ee3\u7801\u8d28\u91cf\u7684\u5176\u4ed6\u5173\u952e\u65b9\u9762\u3002", "method": "\u91c7\u7528\u6fc0\u6d3b\u611f\u77e5\u6743\u91cd\u91cf\u5316\uff08AWQ\uff09\u6280\u672f\u5bf9CodeLlama\u548cDeepSeekCoder\u6a21\u578b\u8fdb\u884c\u91cf\u5316\uff0c\u751f\u6210Java\u548cPython\u4ee3\u7801\uff0c\u5e76\u4f7f\u7528\u9759\u6001\u5206\u6790\u5de5\u5177\u8bc4\u4f30\u4ee3\u7801\u8d28\u91cf\u6307\u6807\u3002", "result": "\u91cf\u5316\u6280\u672f\u4e0d\u4ec5\u4fdd\u6301\u4e86\u529f\u80fd\u6b63\u786e\u6027\uff0c\u8fd8\u4fdd\u7559\u4e86\u4ee3\u7801\u7684\u53ef\u7ef4\u62a4\u6027\u548c\u7ed3\u6784\u7b80\u6d01\u6027\u7b49\u5173\u952e\u8d28\u91cf\u5c5e\u6027\u3002", "conclusion": "\u91cf\u5316\u662f\u4e00\u79cd\u7a33\u5065\u7684\u6280\u672f\uff0c\u9002\u7528\u4e8e\u4f18\u5316\u5927\u578b\u4ee3\u7801\u6a21\u578b\uff0c\u540c\u65f6\u4fdd\u6301\u4ee3\u7801\u8d28\u91cf\u3002"}}
{"id": "2507.09682", "categories": ["cs.SE", "cs.AI", "cs.ET"], "pdf": "https://arxiv.org/pdf/2507.09682", "abs": "https://arxiv.org/abs/2507.09682", "authors": ["Laura Baird", "Armin Moin"], "title": "OrQstrator: An AI-Powered Framework for Advanced Quantum Circuit Optimization", "comment": "IEEE International Conference on Quantum Computing and Engineering\n  (QCE) 2025 - Extended Abstract", "summary": "We propose a novel approach, OrQstrator, which is a modular framework for\nconducting quantum circuit optimization in the Noisy Intermediate-Scale Quantum\n(NISQ) era. Our framework is powered by Deep Reinforcement Learning (DRL). Our\norchestration engine intelligently selects among three complementary circuit\noptimizers: A DRL-based circuit rewriter trained to reduce depth and gate count\nvia learned rewrite sequences; a domain-specific optimizer that performs\nefficient local gate resynthesis and numeric optimization; a parameterized\ncircuit instantiator that improves compilation by optimizing template circuits\nduring gate set translation. These modules are coordinated by a central\norchestration engine that learns coordination policies based on circuit\nstructure, hardware constraints, and backend-aware performance features such as\ngate count, depth, and expected fidelity. The system outputs an optimized\ncircuit for hardware-aware transpilation and execution, leveraging techniques\nfrom an existing state-of-the-art approach, called the NISQ Analyzer, to adapt\nto backend constraints.", "AI": {"tldr": "OrQstrator\u662f\u4e00\u4e2a\u57fa\u4e8e\u6df1\u5ea6\u5f3a\u5316\u5b66\u4e60\u7684\u6a21\u5757\u5316\u6846\u67b6\uff0c\u7528\u4e8e\u5728NISQ\u65f6\u4ee3\u4f18\u5316\u91cf\u5b50\u7535\u8def\u3002\u5b83\u901a\u8fc7\u667a\u80fd\u9009\u62e9\u4e09\u79cd\u4e92\u8865\u7684\u4f18\u5316\u5668\uff0c\u8f93\u51fa\u9002\u5e94\u786c\u4ef6\u7ea6\u675f\u7684\u4f18\u5316\u7535\u8def\u3002", "motivation": "\u5728NISQ\u65f6\u4ee3\uff0c\u91cf\u5b50\u7535\u8def\u7684\u4f18\u5316\u9762\u4e34\u566a\u58f0\u548c\u89c4\u6a21\u9650\u5236\u7684\u6311\u6218\uff0c\u9700\u8981\u4e00\u79cd\u667a\u80fd\u3001\u9ad8\u6548\u7684\u4f18\u5316\u65b9\u6cd5\u3002", "method": "\u6846\u67b6\u5305\u542b\u4e09\u4e2a\u4f18\u5316\u6a21\u5757\uff1a\u57fa\u4e8eDRL\u7684\u7535\u8def\u91cd\u5199\u5668\u3001\u9886\u57df\u7279\u5b9a\u4f18\u5316\u5668\u548c\u53c2\u6570\u5316\u7535\u8def\u5b9e\u4f8b\u5316\u5668\uff0c\u901a\u8fc7\u4e2d\u592e\u534f\u8c03\u5f15\u64ce\u6839\u636e\u7535\u8def\u7ed3\u6784\u548c\u786c\u4ef6\u7ea6\u675f\u9009\u62e9\u4f18\u5316\u7b56\u7565\u3002", "result": "\u7cfb\u7edf\u8f93\u51fa\u4f18\u5316\u7684\u91cf\u5b50\u7535\u8def\uff0c\u9002\u5e94\u786c\u4ef6\u7ea6\u675f\uff0c\u63d0\u5347\u95e8\u6570\u91cf\u3001\u6df1\u5ea6\u548c\u4fdd\u771f\u5ea6\u7b49\u6027\u80fd\u6307\u6807\u3002", "conclusion": "OrQstrator\u901a\u8fc7\u6a21\u5757\u5316\u548c\u667a\u80fd\u534f\u8c03\uff0c\u4e3aNISQ\u65f6\u4ee3\u7684\u91cf\u5b50\u7535\u8def\u4f18\u5316\u63d0\u4f9b\u4e86\u9ad8\u6548\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2507.09790", "categories": ["cs.SE", "cs.AI", "cs.PF"], "pdf": "https://arxiv.org/pdf/2507.09790", "abs": "https://arxiv.org/abs/2507.09790", "authors": ["Helge Spieker", "Th\u00e9o Matricon", "Nassim Belmecheri", "J\u00f8rn Eirik Betten", "Gauthier Le Bartz Lyan", "Heraldo Borges", "Quentin Mazouni", "Dennis Gross", "Arnaud Gotlieb", "Mathieu Acher"], "title": "Prompting for Performance: Exploring LLMs for Configuring Software", "comment": null, "summary": "Software systems usually provide numerous configuration options that can\naffect performance metrics such as execution time, memory usage, binary size,\nor bitrate. On the one hand, making informed decisions is challenging and\nrequires domain expertise in options and their combinations. On the other hand,\nmachine learning techniques can search vast configuration spaces, but with a\nhigh computational cost, since concrete executions of numerous configurations\nare required. In this exploratory study, we investigate whether large language\nmodels (LLMs) can assist in performance-oriented software configuration through\nprompts. We evaluate several LLMs on tasks including identifying relevant\noptions, ranking configurations, and recommending performant configurations\nacross various configurable systems, such as compilers, video encoders, and SAT\nsolvers. Our preliminary results reveal both positive abilities and notable\nlimitations: depending on the task and systems, LLMs can well align with expert\nknowledge, whereas hallucinations or superficial reasoning can emerge in other\ncases. These findings represent a first step toward systematic evaluations and\nthe design of LLM-based solutions to assist with software configuration.", "AI": {"tldr": "\u8bba\u6587\u63a2\u8ba8\u4e86\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u5728\u6027\u80fd\u5bfc\u5411\u7684\u8f6f\u4ef6\u914d\u7f6e\u4e2d\u7684\u6f5c\u529b\uff0c\u521d\u6b65\u7ed3\u679c\u663e\u793a\u5176\u80fd\u529b\u4e0e\u5c40\u9650\u6027\u5e76\u5b58\u3002", "motivation": "\u8f6f\u4ef6\u914d\u7f6e\u9009\u9879\u7e41\u591a\u4e14\u5f71\u54cd\u6027\u80fd\uff0c\u4f20\u7edf\u673a\u5668\u5b66\u4e60\u65b9\u6cd5\u8ba1\u7b97\u6210\u672c\u9ad8\uff0c\u7814\u7a76\u63a2\u7d22LLMs\u662f\u5426\u80fd\u8f85\u52a9\u914d\u7f6e\u51b3\u7b56\u3002", "method": "\u901a\u8fc7\u63d0\u793a\u8bc4\u4f30LLMs\u5728\u8bc6\u522b\u9009\u9879\u3001\u6392\u5e8f\u914d\u7f6e\u548c\u63a8\u8350\u9ad8\u6027\u80fd\u914d\u7f6e\u7b49\u4efb\u52a1\u4e2d\u7684\u8868\u73b0\uff0c\u6db5\u76d6\u7f16\u8bd1\u5668\u3001\u89c6\u9891\u7f16\u7801\u5668\u7b49\u7cfb\u7edf\u3002", "result": "LLMs\u5728\u67d0\u4e9b\u4efb\u52a1\u548c\u7cfb\u7edf\u4e2d\u8868\u73b0\u4e0e\u4e13\u5bb6\u77e5\u8bc6\u4e00\u81f4\uff0c\u4f46\u4e5f\u5b58\u5728\u5e7b\u89c9\u6216\u6d45\u5c42\u63a8\u7406\u7684\u95ee\u9898\u3002", "conclusion": "\u7814\u7a76\u4e3aLLMs\u5728\u8f6f\u4ef6\u914d\u7f6e\u4e2d\u7684\u7cfb\u7edf\u8bc4\u4f30\u548c\u89e3\u51b3\u65b9\u6848\u8bbe\u8ba1\u63d0\u4f9b\u4e86\u521d\u6b65\u63a2\u7d22\u3002"}}
{"id": "2507.09820", "categories": ["cs.SE", "cs.CY"], "pdf": "https://arxiv.org/pdf/2507.09820", "abs": "https://arxiv.org/abs/2507.09820", "authors": ["Jia Yi Goh", "Shaun Khoo", "Nyx Iskandar", "Gabriel Chua", "Leanne Tan", "Jessica Foo"], "title": "Measuring What Matters: A Framework for Evaluating Safety Risks in Real-World LLM Applications", "comment": null, "summary": "Most safety testing efforts for large language models (LLMs) today focus on\nevaluating foundation models. However, there is a growing need to evaluate\nsafety at the application level, as components such as system prompts,\nretrieval pipelines, and guardrails introduce additional factors that\nsignificantly influence the overall safety of LLM applications. In this paper,\nwe introduce a practical framework for evaluating application-level safety in\nLLM systems, validated through real-world deployment across multiple use cases\nwithin our organization. The framework consists of two parts: (1) principles\nfor developing customized safety risk taxonomies, and (2) practices for\nevaluating safety risks in LLM applications. We illustrate how the proposed\nframework was applied in our internal pilot, providing a reference point for\norganizations seeking to scale their safety testing efforts. This work aims to\nbridge the gap between theoretical concepts in AI safety and the operational\nrealities of safeguarding LLM applications in practice, offering actionable\nguidance for safe and scalable deployment.", "AI": {"tldr": "\u63d0\u51fa\u4e00\u4e2a\u8bc4\u4f30LLM\u5e94\u7528\u7ea7\u5b89\u5168\u6027\u7684\u5b9e\u7528\u6846\u67b6\uff0c\u5305\u62ec\u5b9a\u5236\u5b89\u5168\u98ce\u9669\u5206\u7c7b\u539f\u5219\u548c\u8bc4\u4f30\u5b9e\u8df5\uff0c\u5e76\u901a\u8fc7\u5b9e\u9645\u90e8\u7f72\u9a8c\u8bc1\u3002", "motivation": "\u5f53\u524d\u5b89\u5168\u6d4b\u8bd5\u4e3b\u8981\u5173\u6ce8\u57fa\u7840\u6a21\u578b\uff0c\u4f46\u5e94\u7528\u7ea7\u7ec4\u4ef6\uff08\u5982\u7cfb\u7edf\u63d0\u793a\u3001\u68c0\u7d22\u7ba1\u9053\u7b49\uff09\u5bf9\u6574\u4f53\u5b89\u5168\u6027\u5f71\u54cd\u663e\u8457\uff0c\u9700\u9488\u5bf9\u6027\u8bc4\u4f30\u3002", "method": "\u6846\u67b6\u5206\u4e3a\u4e24\u90e8\u5206\uff1a1) \u5b9a\u5236\u5b89\u5168\u98ce\u9669\u5206\u7c7b\u539f\u5219\uff1b2) \u8bc4\u4f30LLM\u5e94\u7528\u5b89\u5168\u98ce\u9669\u7684\u5b9e\u8df5\u3002\u901a\u8fc7\u5b9e\u9645\u90e8\u7f72\u9a8c\u8bc1\u3002", "result": "\u6846\u67b6\u5728\u591a\u4e2a\u7528\u4f8b\u4e2d\u9a8c\u8bc1\uff0c\u4e3a\u7ec4\u7ec7\u6269\u5c55\u5b89\u5168\u6d4b\u8bd5\u63d0\u4f9b\u53c2\u8003\u3002", "conclusion": "\u8be5\u6846\u67b6\u586b\u8865\u4e86AI\u5b89\u5168\u7406\u8bba\u4e0e\u5b9e\u9645\u90e8\u7f72\u95f4\u7684\u5dee\u8ddd\uff0c\u4e3a\u5b89\u5168\u4e14\u53ef\u6269\u5c55\u7684LLM\u5e94\u7528\u63d0\u4f9b\u5b9e\u7528\u6307\u5bfc\u3002"}}
{"id": "2507.09866", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.09866", "abs": "https://arxiv.org/abs/2507.09866", "authors": ["Wei Zhang", "Jian Yang", "Jiaxi Yang", "Ya Wang", "Zhoujun Li", "Zeyu Cui", "Binyuan Hui", "Junyang Lin"], "title": "Turning the Tide: Repository-based Code Reflection", "comment": null, "summary": "Code large language models (LLMs) enhance programming by understanding and\ngenerating code across languages, offering intelligent feedback, bug detection,\nand code updates through reflection, improving development efficiency and\naccessibility. While benchmarks (e.g. HumanEval/LiveCodeBench) evaluate code\ngeneration and real-world relevance, previous works ignore the scenario of\nmodifying code in repositories. Considering challenges remaining in improving\nreflection capabilities and avoiding data contamination in dynamic benchmarks,\nwe introduce LiveRepoReflection, a challenging benchmark for evaluating code\nunderstanding and generation in multi-file repository contexts, featuring 1,888\nrigorously filtered test cases across $6$ programming languages to ensure\ndiversity, correctness, and high difficulty. Further, we create\nRepoReflection-Instruct, a large-scale, quality-filtered instruction-tuning\ndataset derived from diverse sources, used to train RepoReflectionCoder through\na two-turn dialogue process involving code generation and error-driven repair.\nThe leaderboard evaluates over 40 LLMs to reflect the model performance of\nrepository-based code reflection.", "AI": {"tldr": "\u8bba\u6587\u4ecb\u7ecd\u4e86LiveRepoReflection\uff0c\u4e00\u4e2a\u7528\u4e8e\u8bc4\u4f30\u591a\u6587\u4ef6\u4ed3\u5e93\u73af\u5883\u4e2d\u4ee3\u7801\u7406\u89e3\u548c\u751f\u6210\u7684\u57fa\u51c6\u6d4b\u8bd5\uff0c\u5e76\u63d0\u51fa\u4e86RepoReflection-Instruct\u6570\u636e\u96c6\u548cRepoReflectionCoder\u6a21\u578b\u3002", "motivation": "\u73b0\u6709\u57fa\u51c6\u6d4b\u8bd5\u5ffd\u7565\u4e86\u4ee3\u7801\u4ed3\u5e93\u4fee\u6539\u573a\u666f\uff0c\u4e14\u52a8\u6001\u57fa\u51c6\u6d4b\u8bd5\u4e2d\u5b58\u5728\u6570\u636e\u6c61\u67d3\u548c\u53cd\u601d\u80fd\u529b\u63d0\u5347\u7684\u6311\u6218\u3002", "method": "\u521b\u5efa\u4e86\u5305\u542b1,888\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u7684LiveRepoReflection\u57fa\u51c6\u6d4b\u8bd5\uff0c\u5e76\u57fa\u4e8e\u591a\u6e90\u6570\u636e\u6784\u5efa\u4e86RepoReflection-Instruct\u6570\u636e\u96c6\uff0c\u901a\u8fc7\u4e24\u8f6e\u5bf9\u8bdd\u8bad\u7ec3RepoReflectionCoder\u6a21\u578b\u3002", "result": "\u8bc4\u4f30\u4e8640\u591a\u4e2aLLM\uff0c\u5c55\u793a\u4e86\u6a21\u578b\u5728\u4ed3\u5e93\u4ee3\u7801\u53cd\u601d\u4efb\u52a1\u4e2d\u7684\u6027\u80fd\u3002", "conclusion": "LiveRepoReflection\u4e3a\u4ee3\u7801\u7406\u89e3\u548c\u751f\u6210\u63d0\u4f9b\u4e86\u66f4\u5177\u6311\u6218\u6027\u7684\u8bc4\u4f30\u573a\u666f\uff0cRepoReflectionCoder\u6a21\u578b\u901a\u8fc7\u6307\u4ee4\u8c03\u4f18\u63d0\u5347\u4e86\u6027\u80fd\u3002"}}
{"id": "2507.09892", "categories": ["cs.SE", "D.2.5"], "pdf": "https://arxiv.org/pdf/2507.09892", "abs": "https://arxiv.org/abs/2507.09892", "authors": ["Zimu Chen", "Di Wang"], "title": "PathFuzzing: Worst Case Analysis by Fuzzing Symbolic-Execution Paths", "comment": "10 pages, 1 figure", "summary": "Estimating worst-case resource consumption is a critical task in software\ndevelopment. The worst-case analysis (WCA) problem is an optimization-based\nabstraction of this task. Fuzzing and symbolic execution are widely used\ntechniques for addressing the WCA problem. However, improving code coverage in\nfuzzing or managing path explosion in symbolic execution within the context of\nWCA poses significant challenges. In this paper, we propose PathFuzzing, aiming\nto combine the strengths of both techniques to design a WCA method. The key\nidea is to transform a program into a symbolic one that takes an execution path\n(encoded as a binary string) and interprets the bits as branch decisions.\nPathFuzzing then applies evolutionary fuzzing techniques to the transformed\nprogram to search for binary strings that represent satisfiable path conditions\nand lead to high resource consumption. We evaluate the performance of\nPathFuzzing experimentally on a benchmark suite that consists of prior work's\nbenchmarks and some added by us. Results show that PathFuzzing generally\noutperforms a fuzzing and a symbolic-execution baseline.", "AI": {"tldr": "PathFuzzing\u7ed3\u5408\u6a21\u7cca\u6d4b\u8bd5\u548c\u7b26\u53f7\u6267\u884c\u7684\u4f18\u70b9\uff0c\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u7684\u6700\u574f\u60c5\u51b5\u5206\u6790\u65b9\u6cd5\uff0c\u901a\u8fc7\u5c06\u7a0b\u5e8f\u8f6c\u6362\u4e3a\u7b26\u53f7\u7a0b\u5e8f\u5e76\u5e94\u7528\u8fdb\u5316\u6a21\u7cca\u6d4b\u8bd5\u6280\u672f\uff0c\u663e\u8457\u63d0\u9ad8\u4e86\u6027\u80fd\u3002", "motivation": "\u89e3\u51b3\u6a21\u7cca\u6d4b\u8bd5\u4e2d\u4ee3\u7801\u8986\u76d6\u7387\u4f4e\u548c\u7b26\u53f7\u6267\u884c\u4e2d\u8def\u5f84\u7206\u70b8\u7684\u95ee\u9898\uff0c\u4ee5\u66f4\u6709\u6548\u5730\u8fdb\u884c\u6700\u574f\u60c5\u51b5\u5206\u6790\u3002", "method": "\u5c06\u7a0b\u5e8f\u8f6c\u6362\u4e3a\u7b26\u53f7\u7a0b\u5e8f\uff0c\u5229\u7528\u4e8c\u8fdb\u5236\u5b57\u7b26\u4e32\u7f16\u7801\u6267\u884c\u8def\u5f84\uff0c\u5e76\u901a\u8fc7\u8fdb\u5316\u6a21\u7cca\u6d4b\u8bd5\u6280\u672f\u641c\u7d22\u9ad8\u8d44\u6e90\u6d88\u8017\u7684\u8def\u5f84\u3002", "result": "\u5b9e\u9a8c\u7ed3\u679c\u8868\u660e\uff0cPathFuzzing\u5728\u6027\u80fd\u4e0a\u4f18\u4e8e\u4f20\u7edf\u7684\u6a21\u7cca\u6d4b\u8bd5\u548c\u7b26\u53f7\u6267\u884c\u57fa\u7ebf\u65b9\u6cd5\u3002", "conclusion": "PathFuzzing\u662f\u4e00\u79cd\u6709\u6548\u7684WCA\u65b9\u6cd5\uff0c\u7ed3\u5408\u4e86\u4e24\u79cd\u6280\u672f\u7684\u4f18\u52bf\uff0c\u663e\u8457\u63d0\u5347\u4e86\u5206\u6790\u6548\u679c\u3002"}}
{"id": "2507.09907", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.09907", "abs": "https://arxiv.org/abs/2507.09907", "authors": ["Thomas Hansper", "Kevin Phong Pham", "Michael Neumann"], "title": "Modelling Interrelations Between Agile Practices: The Agile Map", "comment": null, "summary": "Agile methods are defined through guidelines comprising various practices\nintended to enable agile ways of working. These guidelines further comprise a\nspecific set of agile practices aiming to enable teams for an agile way of\nworking. However, due to its wide-spread use in practice we know that agile\npractices are adopted and tailored intensively, which lead to a high variety of\nagile practices in terms of their level of detail. Problem: A high variety of\nagile practices can be challenging as we do not know how different agile\npractices are interrelated with each other. To be more precise, tailoring and\nadopting agile practices may lead to the challenge, that the combinatorial use\nof several agile practices can only be successful to a limited extent, as\npractices support or even require each other for a effective use in practice.\nObjective: Our study aims to provide an enabler for this problem. We want to\nidentify interrelations between agile practices and describe them in a\nsystematic manner. Contribution: The core contribution of this paper is the\nAgile Map, a theoretical model describing relations between agile practices\nfollowing a systematic approach aiming to provide an overview of coherences\nbetween agile practices. The model aims to support practitioners in selecting\nand combining agile practices in a meaningful way.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u4e86Agile Map\u6a21\u578b\uff0c\u7528\u4e8e\u7cfb\u7edf\u63cf\u8ff0\u654f\u6377\u5b9e\u8df5\u95f4\u7684\u76f8\u4e92\u5173\u7cfb\uff0c\u5e2e\u52a9\u4ece\u4e1a\u8005\u5408\u7406\u9009\u62e9\u548c\u7ec4\u5408\u654f\u6377\u5b9e\u8df5\u3002", "motivation": "\u654f\u6377\u5b9e\u8df5\u5728\u5e94\u7528\u4e2d\u5b58\u5728\u9ad8\u5ea6\u591a\u6837\u6027\uff0c\u4f46\u5176\u76f8\u4e92\u5173\u7cfb\u4e0d\u660e\u786e\uff0c\u5bfc\u81f4\u7ec4\u5408\u4f7f\u7528\u65f6\u6548\u679c\u53d7\u9650\u3002", "method": "\u7814\u7a76\u901a\u8fc7\u7cfb\u7edf\u65b9\u6cd5\u8bc6\u522b\u654f\u6377\u5b9e\u8df5\u95f4\u7684\u76f8\u4e92\u5173\u7cfb\uff0c\u5e76\u6784\u5efaAgile Map\u7406\u8bba\u6a21\u578b\u3002", "result": "Agile Map\u6a21\u578b\u4e3a\u4ece\u4e1a\u8005\u63d0\u4f9b\u4e86\u654f\u6377\u5b9e\u8df5\u95f4\u5173\u7cfb\u7684\u7cfb\u7edf\u6982\u8ff0\u3002", "conclusion": "Agile Map\u6a21\u578b\u6709\u52a9\u4e8e\u89e3\u51b3\u654f\u6377\u5b9e\u8df5\u7ec4\u5408\u4f7f\u7528\u7684\u6311\u6218\uff0c\u63d0\u5347\u5b9e\u8df5\u6548\u679c\u3002"}}
{"id": "2507.09911", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.09911", "abs": "https://arxiv.org/abs/2507.09911", "authors": ["Marvin Auf der Landwehr", "Julia Topp", "Michael Neumann"], "title": "When Less is More: A systematic review of four-day workweek conceptualizations and their effects on organizational performance", "comment": null, "summary": "Context: Agile IT organizations, which are characterized by self-organization\nand collaborative social interactions, require motivating, efficient and\nflexible work environments to maximize value creation. Compressed work\nschedules such as the four-day workweek have evolved into multiple facets over\nthe last decades and are associated with various benefits for organizations and\ntheir employees. Objective: Our objective in this study is to deepen our\ncomprehension of the impact of compressed work schedules on the operational\nefficacy of IT enterprises, while concurrently developing a comprehensive\nframework delineating the intricacies of compressed work schedules.Method: We\nconducted a systematic review of available conceptualizations related to\nfour-day workweek schedules and elaborate on their organizational and social\neffects. To cover scientific and practice-oriented literature, our review\ncombined a systematic literature review and a web content analysis. Results:\nBased on the generated insights, we derive a meta-framework that matches\nconceptualizations and effects, finally guiding the adoption of compressed work\nschedules based on individual managerial prerequisites and circumstances.", "AI": {"tldr": "\u7814\u7a76\u63a2\u8ba8\u4e86\u538b\u7f29\u5de5\u4f5c\u5236\uff08\u5982\u56db\u5929\u5de5\u4f5c\u5468\uff09\u5bf9IT\u4f01\u4e1a\u8fd0\u8425\u6548\u7387\u7684\u5f71\u54cd\uff0c\u5e76\u63d0\u51fa\u4e86\u4e00\u4e2a\u7efc\u5408\u6846\u67b6\u3002", "motivation": "\u654f\u6377IT\u7ec4\u7ec7\u9700\u8981\u9ad8\u6548\u7075\u6d3b\u7684\u5de5\u4f5c\u73af\u5883\uff0c\u538b\u7f29\u5de5\u4f5c\u5236\u53ef\u80fd\u5e26\u6765\u591a\u79cd\u76ca\u5904\u3002", "method": "\u901a\u8fc7\u7cfb\u7edf\u6587\u732e\u7efc\u8ff0\u548c\u7f51\u7edc\u5185\u5bb9\u5206\u6790\uff0c\u7814\u7a76\u538b\u7f29\u5de5\u4f5c\u5236\u7684\u6982\u5ff5\u53ca\u5176\u7ec4\u7ec7\u548c\u793e\u4f1a\u5f71\u54cd\u3002", "result": "\u63d0\u51fa\u4e86\u4e00\u4e2a\u5143\u6846\u67b6\uff0c\u6307\u5bfc\u6839\u636e\u7ba1\u7406\u524d\u63d0\u548c\u60c5\u5883\u91c7\u7528\u538b\u7f29\u5de5\u4f5c\u5236\u3002", "conclusion": "\u538b\u7f29\u5de5\u4f5c\u5236\u5bf9IT\u4f01\u4e1a\u8fd0\u8425\u6548\u7387\u6709\u79ef\u6781\u5f71\u54cd\uff0c\u9700\u7ed3\u5408\u5177\u4f53\u60c5\u51b5\u5b9e\u65bd\u3002"}}
{"id": "2507.10054", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.10054", "abs": "https://arxiv.org/abs/2507.10054", "authors": ["Emir Bosnak", "Sahand Moslemi", "Mayasah Lami", "Anil Koyuncu"], "title": "Explicit Vulnerability Generation with LLMs: An Investigation Beyond Adversarial Attacks", "comment": "Accepted to ICSME 2025", "summary": "Large Language Models (LLMs) are increasingly used as code assistants, yet\ntheir behavior when explicitly asked to generate insecure code remains poorly\nunderstood. While prior research has focused on unintended vulnerabilities or\nadversarial prompting techniques, this study examines a more direct threat\nscenario: open-source LLMs generating vulnerable code when prompted either\ndirectly or indirectly. We propose a dual experimental design: (1) Dynamic\nPrompting, which systematically varies vulnerability type, user persona, and\ndirectness across structured templates; and (2) Reverse Prompting, which\nderives prompts from real vulnerable code samples to assess vulnerability\nreproduction accuracy. We evaluate three open-source 7B-parameter models\n(Qwen2, Mistral, and Gemma) using ESBMC static analysis to assess both the\npresence of vulnerabilities and the correctness of the generated vulnerability\ntype. Results show all models frequently produce vulnerable outputs, with Qwen2\nachieving highest correctness rates. User persona significantly affects\nsuccess, where student personas achieved higher vulnerability rates than\nprofessional roles, while direct prompts were marginally more effective.\nVulnerability reproduction followed an inverted-U pattern with cyclomatic\ncomplexity, peaking at moderate ranges. Our findings expose limitations of\nsafety mechanisms in open-source models, particularly for seemingly benign\neducational requests.", "AI": {"tldr": "\u7814\u7a76\u63a2\u8ba8\u5f00\u6e90\u5927\u8bed\u8a00\u6a21\u578b\uff08LLM\uff09\u5728\u76f4\u63a5\u6216\u95f4\u63a5\u63d0\u793a\u4e0b\u751f\u6210\u4e0d\u5b89\u5168\u4ee3\u7801\u7684\u884c\u4e3a\uff0c\u53d1\u73b0\u6a21\u578b\u5e38\u751f\u6210\u6f0f\u6d1e\u4ee3\u7801\uff0c\u7528\u6237\u89d2\u8272\u548c\u63d0\u793a\u65b9\u5f0f\u5f71\u54cd\u7ed3\u679c\u3002", "motivation": "\u7406\u89e3\u5f00\u6e90LLM\u5728\u660e\u786e\u8981\u6c42\u751f\u6210\u4e0d\u5b89\u5168\u4ee3\u7801\u65f6\u7684\u884c\u4e3a\uff0c\u586b\u8865\u73b0\u6709\u7814\u7a76\u5bf9\u76f4\u63a5\u5a01\u80c1\u573a\u666f\u7684\u7a7a\u767d\u3002", "method": "\u91c7\u7528\u52a8\u6001\u63d0\u793a\u548c\u53cd\u5411\u63d0\u793a\u4e24\u79cd\u5b9e\u9a8c\u8bbe\u8ba1\uff0c\u8bc4\u4f30\u4e09\u79cd\u5f00\u6e90\u6a21\u578b\u751f\u6210\u6f0f\u6d1e\u4ee3\u7801\u7684\u80fd\u529b\u3002", "result": "\u6240\u6709\u6a21\u578b\u5e38\u751f\u6210\u6f0f\u6d1e\u4ee3\u7801\uff0cQwen2\u6b63\u786e\u7387\u6700\u9ad8\uff1b\u7528\u6237\u89d2\u8272\uff08\u5b66\u751f\u66f4\u6613\u6210\u529f\uff09\u548c\u63d0\u793a\u65b9\u5f0f\uff08\u76f4\u63a5\u63d0\u793a\u7a0d\u4f18\uff09\u663e\u8457\u5f71\u54cd\u7ed3\u679c\u3002", "conclusion": "\u5f00\u6e90\u6a21\u578b\u7684\u5b89\u5168\u673a\u5236\u5b58\u5728\u5c40\u9650\uff0c\u5c24\u5176\u5728\u770b\u4f3c\u65e0\u5bb3\u7684\u6559\u80b2\u8bf7\u6c42\u4e2d\u3002"}}
{"id": "2507.10062", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.10062", "abs": "https://arxiv.org/abs/2507.10062", "authors": ["Erg\u00fcn Batuhan Kaynak", "Mayasah Lami", "Sahand Moslemi", "Anil Koyuncu"], "title": "LLMShot: Reducing snapshot testing maintenance via LLMs", "comment": "Accepted to ICSME 2025", "summary": "Snapshot testing has emerged as a critical technique for UI validation in\nmodern software development, yet it suffers from substantial maintenance\noverhead due to frequent UI changes causing test failures that require manual\ninspection to distinguish between genuine regressions and intentional design\nchanges. This manual triage process becomes increasingly burdensome as\napplications evolve, creating a need for automated analysis solutions. This\npaper introduces LLMShot, a novel framework that leverages vision-based Large\nLanguage Models to automatically analyze snapshot test failures through\nhierarchical classification of UI changes. To evaluate LLMShot's effectiveness,\nwe developed a comprehensive dataset using a feature-rich iOS application with\nconfigurable feature flags, creating realistic scenarios that produce authentic\nsnapshot differences representative of real development workflows. Our\nevaluation using Gemma3 models demonstrates strong classification performance,\nwith the 12B variant achieving over 84% recall in identifying failure root\ncauses while the 4B model offers practical deployment advantages with\nacceptable performance for continuous integration environments. However, our\nexploration of selective ignore mechanisms revealed significant limitations in\ncurrent prompting-based approaches for controllable visual reasoning. LLMShot\nrepresents the first automated approach to semantic snapshot test analysis,\noffering developers structured insights that can substantially reduce manual\ntriage effort and advance toward more intelligent UI testing paradigms.", "AI": {"tldr": "LLMShot\u5229\u7528\u89c6\u89c9\u5927\u8bed\u8a00\u6a21\u578b\u81ea\u52a8\u5206\u6790\u5feb\u7167\u6d4b\u8bd5\u5931\u8d25\uff0c\u901a\u8fc7\u5206\u5c42\u5206\u7c7bUI\u53d8\u5316\uff0c\u663e\u8457\u51cf\u5c11\u624b\u52a8\u68c0\u67e5\u5de5\u4f5c\u3002", "motivation": "\u5feb\u7167\u6d4b\u8bd5\u5728UI\u9a8c\u8bc1\u4e2d\u81f3\u5173\u91cd\u8981\uff0c\u4f46\u9891\u7e41\u7684UI\u53d8\u66f4\u5bfc\u81f4\u6d4b\u8bd5\u5931\u8d25\u9700\u8981\u624b\u52a8\u533a\u5206\u56de\u5f52\u548c\u8bbe\u8ba1\u53d8\u66f4\uff0c\u7ef4\u62a4\u6210\u672c\u9ad8\u3002", "method": "\u63d0\u51faLLMShot\u6846\u67b6\uff0c\u5229\u7528\u89c6\u89c9\u5927\u8bed\u8a00\u6a21\u578b\u8fdb\u884c\u5206\u5c42\u5206\u7c7b\uff0c\u8bc4\u4f30\u4f7f\u7528Gemma3\u6a21\u578b\u548ciOS\u5e94\u7528\u6570\u636e\u96c6\u3002", "result": "12B\u6a21\u578b\u53ec\u56de\u7387\u8fbe84%\uff0c4B\u6a21\u578b\u9002\u5408\u6301\u7eed\u96c6\u6210\u73af\u5883\uff0c\u4f46\u9009\u62e9\u6027\u5ffd\u7565\u673a\u5236\u4ecd\u6709\u5c40\u9650\u3002", "conclusion": "LLMShot\u662f\u9996\u4e2a\u81ea\u52a8\u5316\u8bed\u4e49\u5feb\u7167\u6d4b\u8bd5\u5206\u6790\u65b9\u6cd5\uff0c\u663e\u8457\u51cf\u5c11\u624b\u52a8\u5de5\u4f5c\u91cf\uff0c\u63a8\u52a8\u667a\u80fdUI\u6d4b\u8bd5\u53d1\u5c55\u3002"}}
{"id": "2507.10103", "categories": ["cs.SE", "cs.CR"], "pdf": "https://arxiv.org/pdf/2507.10103", "abs": "https://arxiv.org/abs/2507.10103", "authors": ["Hanyang Guo", "Xiaoheng Xie", "Hong-Ning Dai", "Peng Di", "Yu Zhang", "Bishenghui Tao", "Zibin Zheng"], "title": "Accelerating Automatic Program Repair with Dual Retrieval-Augmented Fine-Tuning and Patch Generation on Large Language Models", "comment": null, "summary": "Automated Program Repair (APR) is essential for ensuring software reliability\nand quality while enhancing efficiency and reducing developers' workload.\nAlthough rule-based and learning-based APR methods have demonstrated their\neffectiveness, their performance was constrained by the defect type of repair,\nthe quality of training data, and the size of model parameters. Recently, Large\nLanguage Models (LLMs) combined with Retrieval-Augmented-Generation (RAG) have\nbeen increasingly adopted in APR tasks. However, current code LLMs and RAG\ndesigns neither fully address code repair tasks nor consider code-specific\nfeatures. To overcome these limitations, we propose SelRepair, a novel APR\napproach with integration of a fine-tuned LLM with a newly-designed dual RAG\nmodule. This approach uses a bug-fix pair dataset for fine-tuning and\nincorporates semantic and syntactic/structural similarity information through\nan RAG selection gate. This design ensures relevant information is retrieved\nefficiently, thereby reducing token length and inference time. Evaluations on\nJava datasets show SelRepair outperforms other APR methods, achieving 26.29%\nand 17.64% in terms of exact match (EM) on different datasets while reducing\ninference time by at least 6.42% with controlled input lengths.", "AI": {"tldr": "SelRepair\u662f\u4e00\u79cd\u7ed3\u5408\u5fae\u8c03LLM\u548c\u53ccRAG\u6a21\u5757\u7684\u65b0\u578bAPR\u65b9\u6cd5\uff0c\u663e\u8457\u63d0\u5347\u4e86\u7a0b\u5e8f\u4fee\u590d\u6027\u80fd\u5e76\u51cf\u5c11\u4e86\u63a8\u7406\u65f6\u95f4\u3002", "motivation": "\u73b0\u6709APR\u65b9\u6cd5\u53d7\u9650\u4e8e\u7f3a\u9677\u7c7b\u578b\u3001\u8bad\u7ec3\u6570\u636e\u8d28\u91cf\u548c\u6a21\u578b\u53c2\u6570\u89c4\u6a21\uff0c\u4e14\u5f53\u524dLLM\u548cRAG\u8bbe\u8ba1\u672a\u5145\u5206\u8003\u8651\u4ee3\u7801\u4fee\u590d\u4efb\u52a1\u548c\u4ee3\u7801\u7279\u6027\u3002", "method": "\u901a\u8fc7\u5fae\u8c03LLM\u5e76\u7ed3\u5408\u8bed\u4e49\u548c\u8bed\u6cd5/\u7ed3\u6784\u76f8\u4f3c\u6027\u4fe1\u606f\u7684\u53ccRAG\u6a21\u5757\uff0c\u5229\u7528bug-fix\u5bf9\u6570\u636e\u96c6\u8fdb\u884c\u4f18\u5316\u3002", "result": "\u5728Java\u6570\u636e\u96c6\u4e0a\uff0cSelRepair\u7684\u7cbe\u786e\u5339\u914d\u7387\u5206\u522b\u8fbe\u523026.29%\u548c17.64%\uff0c\u63a8\u7406\u65f6\u95f4\u51cf\u5c11\u81f3\u5c116.42%\u3002", "conclusion": "SelRepair\u901a\u8fc7\u521b\u65b0\u7684\u8bbe\u8ba1\u548c\u4f18\u5316\uff0c\u663e\u8457\u63d0\u5347\u4e86APR\u4efb\u52a1\u7684\u6027\u80fd\u548c\u6548\u7387\u3002"}}
{"id": "2507.10182", "categories": ["cs.SE", "cs.AI"], "pdf": "https://arxiv.org/pdf/2507.10182", "abs": "https://arxiv.org/abs/2507.10182", "authors": ["Gehao Zhang", "Zhenting Wang", "Juan Zhai"], "title": "Breaking the Myth: Can Small Models Infer Postconditions Too?", "comment": null, "summary": "Formal specifications are essential for ensuring software correctness, yet\nmanually writing them is tedious and error-prone. Large Language Models (LLMs)\nhave shown promise in generating such specifications from natural language\nintents, but the giant model size and high computational demands raise a\nfundamental question: Do we really need large models for this task? In this\npaper, we show that a small, fine-tuned language model can achieve high-quality\npostcondition generation with much lower computational costs. We construct a\nspecialized dataset of prompts, reasoning logs, and postconditions, then\nsupervise the fine-tuning of a $7$B-parameter code model. Our approach tackles\nreal-world repository dependencies and preserves pre-state information,\nallowing for expressive and accurate specifications. We evaluate the model on a\nbenchmark of real-world Java bugs (Defects4J) and compare against both\nproprietary giants (e.g., GPT-4o) and open-source large models. Empirical\nresults demonstrate that our compact model matches or outperforms significantly\nlarger counterparts in syntax correctness, semantic correctness, and\nbug-distinguishing capability. These findings highlight that targeted\nfine-tuning on a modest dataset can enable small models to achieve results\nformerly seen only in massive, resource-heavy LLMs, offering a practical and\nefficient path for the real-world adoption of automated specification\ngeneration.", "AI": {"tldr": "\u7814\u7a76\u8868\u660e\uff0c\u5c0f\u578b\u3001\u7ecf\u8fc7\u5fae\u8c03\u7684\u8bed\u8a00\u6a21\u578b\u5728\u751f\u6210\u9ad8\u8d28\u91cf\u540e\u7f6e\u6761\u4ef6\u65f6\uff0c\u53ef\u4ee5\u663e\u8457\u964d\u4f4e\u8ba1\u7b97\u6210\u672c\uff0c\u6548\u679c\u5ab2\u7f8e\u6216\u4f18\u4e8e\u5927\u578b\u6a21\u578b\u3002", "motivation": "\u624b\u52a8\u7f16\u5199\u5f62\u5f0f\u5316\u89c4\u8303\u65e2\u7e41\u7410\u53c8\u5bb9\u6613\u51fa\u9519\uff0c\u800c\u5927\u578b\u8bed\u8a00\u6a21\u578b\uff08LLMs\uff09\u867d\u7136\u80fd\u751f\u6210\u89c4\u8303\uff0c\u4f46\u5176\u5e9e\u5927\u7684\u6a21\u578b\u5c3a\u5bf8\u548c\u9ad8\u8ba1\u7b97\u9700\u6c42\u5f15\u53d1\u4e86\u5bf9\u6548\u7387\u7684\u8d28\u7591\u3002", "method": "\u6784\u5efa\u4e86\u4e00\u4e2a\u5305\u542b\u63d0\u793a\u3001\u63a8\u7406\u65e5\u5fd7\u548c\u540e\u7f6e\u6761\u4ef6\u7684\u4e13\u7528\u6570\u636e\u96c6\uff0c\u5e76\u5bf9\u4e00\u4e2a70\u4ebf\u53c2\u6570\u7684\u4ee3\u7801\u6a21\u578b\u8fdb\u884c\u76d1\u7763\u5fae\u8c03\uff0c\u89e3\u51b3\u4e86\u73b0\u5b9e\u4ed3\u5e93\u4f9d\u8d56\u6027\u548c\u9884\u72b6\u6001\u4fe1\u606f\u4fdd\u7559\u95ee\u9898\u3002", "result": "\u5728\u771f\u5b9eJava\u7f3a\u9677\u57fa\u51c6\u6d4b\u8bd5\uff08Defects4J\uff09\u4e2d\uff0c\u8be5\u5c0f\u578b\u6a21\u578b\u5728\u8bed\u6cd5\u6b63\u786e\u6027\u3001\u8bed\u4e49\u6b63\u786e\u6027\u548c\u7f3a\u9677\u533a\u5206\u80fd\u529b\u4e0a\u5ab2\u7f8e\u6216\u4f18\u4e8e\u5927\u578b\u6a21\u578b\u3002", "conclusion": "\u9488\u5bf9\u7279\u5b9a\u4efb\u52a1\u7684\u5fae\u8c03\u53ef\u4ee5\u8ba9\u5c0f\u578b\u6a21\u578b\u8fbe\u5230\u5927\u578b\u6a21\u578b\u7684\u6548\u679c\uff0c\u4e3a\u81ea\u52a8\u5316\u89c4\u8303\u751f\u6210\u63d0\u4f9b\u4e86\u5b9e\u7528\u4e14\u9ad8\u6548\u7684\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2507.10228", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.10228", "abs": "https://arxiv.org/abs/2507.10228", "authors": ["Hugo Villamizar", "Daniel Mendez", "Marcos Kalinowski"], "title": "Towards a Framework for Operationalizing the Specification of Trustworthy AI Requirements", "comment": "This paper has been accepted for presentation at the 2025 IEEE 33rd\n  International Requirements Engineering Conference Workshops (REW-RETRAI 2025)", "summary": "Growing concerns around the trustworthiness of AI-enabled systems highlight\nthe role of requirements engineering (RE) in addressing emergent,\ncontext-dependent properties that are difficult to specify without structured\napproaches. In this short vision paper, we propose the integration of two\ncomplementary approaches: AMDiRE, an artefact-based approach for RE, and\nPerSpecML, a perspective-based method designed to support the elicitation,\nanalysis, and specification of machine learning (ML)-enabled systems. AMDiRE\nprovides a structured, artefact-centric, process-agnostic methodology and\ntemplates that promote consistency and traceability in the results; however, it\nis primarily oriented toward deterministic systems. PerSpecML, in turn,\nintroduces multi-perspective guidance to uncover concerns arising from the\ndata-driven and non-deterministic behavior of ML-enabled systems. We envision a\npathway to operationalize trustworthiness-related requirements, bridging\nstakeholder-driven concerns and structured artefact models. We conclude by\noutlining key research directions and open challenges to be discussed with the\nRE community.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u6574\u5408AMDiRE\u548cPerSpecML\u4e24\u79cd\u65b9\u6cd5\uff0c\u4ee5\u89e3\u51b3AI\u7cfb\u7edf\u53ef\u4fe1\u5ea6\u95ee\u9898\uff0c\u5e76\u63a2\u8ba8\u4e86\u672a\u6765\u7814\u7a76\u65b9\u5411\u3002", "motivation": "AI\u7cfb\u7edf\u7684\u53ef\u4fe1\u5ea6\u95ee\u9898\u65e5\u76ca\u7a81\u51fa\uff0c\u9700\u8981\u7ed3\u6784\u5316\u65b9\u6cd5\u6765\u89e3\u51b3\u4e0a\u4e0b\u6587\u4f9d\u8d56\u7684\u590d\u6742\u9700\u6c42\u3002", "method": "\u7ed3\u5408AMDiRE\uff08\u57fa\u4e8e\u5de5\u4ef6\u7684RE\u65b9\u6cd5\uff09\u548cPerSpecML\uff08\u57fa\u4e8e\u89c6\u89d2\u7684ML\u7cfb\u7edf\u9700\u6c42\u65b9\u6cd5\uff09\uff0c\u4ee5\u652f\u6301\u9700\u6c42\u83b7\u53d6\u548c\u5206\u6790\u3002", "result": "\u63d0\u51fa\u4e86\u4e00\u79cd\u6574\u5408\u65b9\u6cd5\uff0c\u65e8\u5728\u5f25\u5408\u5229\u76ca\u76f8\u5173\u8005\u5173\u6ce8\u70b9\u4e0e\u7ed3\u6784\u5316\u5de5\u4ef6\u6a21\u578b\u4e4b\u95f4\u7684\u5dee\u8ddd\u3002", "conclusion": "\u8bba\u6587\u603b\u7ed3\u4e86\u5173\u952e\u7814\u7a76\u65b9\u5411\u548c\u5f00\u653e\u6311\u6218\uff0c\u547c\u5401RE\u793e\u533a\u8fdb\u4e00\u6b65\u63a2\u8ba8\u3002"}}
{"id": "2507.10235", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.10235", "abs": "https://arxiv.org/abs/2507.10235", "authors": ["Zhixiang Chen", "Zhuangbin Chen", "Xingjie Cai", "Wei Li", "Zibin Zheng"], "title": "An Empirical Study of Interaction Bugs in ROS-based Software", "comment": null, "summary": "Modern robotic systems integrate multiple independent software and hardware\ncomponents, each responsible for distinct functionalities such as perception,\ndecision-making, and execution. These components interact extensively to\naccomplish complex end-to-end tasks. As a result, the overall system\nreliability depends not only on the correctness of individual components, but\nalso on the correctness of their interactions. Failures often manifest at the\nboundaries between components, yet interaction-related reliability issues in\nrobotics--referred to here as interaction bugs (iBugs)--remain underexplored.\n  This work presents an empirical study of iBugs within robotic systems built\nusing the Robot Operating System (ROS), a widely adopted open-source robotics\nframework. A total of 121 iBugs were analyzed across ten actively maintained\nand representative ROS projects. The identified iBugs are categorized into\nthree major types: intra-system iBugs, hardware iBugs, and environmental iBugs,\ncovering a broad range of interaction scenarios in robotics. The analysis\nincludes an examination of root causes, fixing strategies, and the impact of\nthese bugs. Several findingsa are derived that shed light on the nature of\niBugs and suggest directions for improving their prevention and detection.\nThese insights aim to inform the design of more robust and safer robotic\nsystems.", "AI": {"tldr": "\u8bba\u6587\u7814\u7a76\u4e86\u673a\u5668\u4eba\u7cfb\u7edf\u4e2d\u7ec4\u4ef6\u95f4\u4ea4\u4e92\u6545\u969c\uff08iBugs\uff09\uff0c\u5206\u6790\u4e86121\u4e2aROS\u9879\u76ee\u4e2d\u7684iBugs\uff0c\u5e76\u63d0\u51fa\u4e86\u6539\u8fdb\u5efa\u8bae\u3002", "motivation": "\u673a\u5668\u4eba\u7cfb\u7edf\u7684\u53ef\u9760\u6027\u4e0d\u4ec5\u4f9d\u8d56\u5355\u4e2a\u7ec4\u4ef6\u7684\u6b63\u786e\u6027\uff0c\u8fd8\u4f9d\u8d56\u7ec4\u4ef6\u95f4\u4ea4\u4e92\u7684\u6b63\u786e\u6027\uff0c\u4f46\u4ea4\u4e92\u6545\u969c\uff08iBugs\uff09\u7814\u7a76\u4e0d\u8db3\u3002", "method": "\u5bf9\u5341\u4e2aROS\u9879\u76ee\u4e2d\u7684121\u4e2aiBugs\u8fdb\u884c\u5b9e\u8bc1\u7814\u7a76\uff0c\u5206\u7c7b\u4e3a\u4e09\u7c7b\uff08\u7cfb\u7edf\u5185\u3001\u786c\u4ef6\u3001\u73af\u5883\uff09\uff0c\u5206\u6790\u539f\u56e0\u548c\u4fee\u590d\u7b56\u7565\u3002", "result": "\u63ed\u793a\u4e86iBugs\u7684\u6839\u6e90\u548c\u5f71\u54cd\uff0c\u63d0\u51fa\u4e86\u9884\u9632\u548c\u68c0\u6d4b\u7684\u65b9\u5411\u3002", "conclusion": "\u7814\u7a76\u7ed3\u679c\u4e3a\u8bbe\u8ba1\u66f4\u5065\u58ee\u548c\u5b89\u5168\u7684\u673a\u5668\u4eba\u7cfb\u7edf\u63d0\u4f9b\u4e86\u53c2\u8003\u3002"}}
{"id": "2507.10244", "categories": ["cs.SE", "D.2.2; D.2.11"], "pdf": "https://arxiv.org/pdf/2507.10244", "abs": "https://arxiv.org/abs/2507.10244", "authors": ["Adam \u0160t\u011bp\u00e1nek", "David Ku\u0165\u00e1k", "Barbora Kozl\u00edkov\u00e1", "Jan By\u0161ka"], "title": "Helveg: Diagrams for Software Documentation", "comment": "13 pages, 5 figures, accepted by TVCG", "summary": "Software developers often have to gain an understanding of a codebase. Be it\nprogrammers getting onboarded onto a team project or, for example, developers\nstriving to grasp an external open-source library. In either case, they\nfrequently turn to the project's documentation. However, documentation in its\ntraditional textual form is ill-suited for this kind of high-level exploratory\nanalysis, since it is immutable from the readers' perspective and thus forces\nthem to follow a predefined path. We have designed an approach bringing aspects\nof software architecture visualization to API reference documentation. It\nutilizes a highly interactive node-link diagram with expressive node glyphs and\nflexible filtering capabilities, providing a high-level overview of the\ncodebase as well as details on demand. To test our design, we have implemented\na prototype named Helveg, capable of automatically generating diagrams of C\\#\ncodebases. User testing of Helveg confirmed its potential, but it also revealed\nproblems with the readability, intuitiveness, and user experience of our tool.\nTherefore, in this paper, which is an extended version of our VISSOFT paper\nwith DOI 10.1109/VISSOFT64034.2024.00012, we address many of these problems\nthrough major changes to the glyph design, means of interaction, and user\ninterface of the tool. To assess the improvements, this new version of Helveg\nwas evaluated again with the same group of participants as the previous\nversion.", "AI": {"tldr": "\u8bba\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u6539\u8fdb\u7684API\u6587\u6863\u53ef\u89c6\u5316\u5de5\u5177Helveg\uff0c\u901a\u8fc7\u4ea4\u4e92\u5f0f\u56fe\u8868\u5e2e\u52a9\u5f00\u53d1\u8005\u7406\u89e3\u4ee3\u7801\u5e93\uff0c\u89e3\u51b3\u4e86\u4f20\u7edf\u6587\u6863\u7684\u5c40\u9650\u6027\u3002", "motivation": "\u4f20\u7edf\u6587\u672c\u5f62\u5f0f\u7684\u6587\u6863\u4e0d\u9002\u5408\u4ee3\u7801\u5e93\u7684\u9ad8\u5c42\u6b21\u63a2\u7d22\u5206\u6790\uff0c\u56e0\u5176\u56fa\u5b9a\u8def\u5f84\u9650\u5236\u4e86\u7528\u6237\u7075\u6d3b\u6027\u3002", "method": "\u8bbe\u8ba1\u4e86\u4e00\u79cd\u4ea4\u4e92\u5f0f\u8282\u70b9\u94fe\u63a5\u56fe\uff0c\u652f\u6301\u7075\u6d3b\u8fc7\u6ee4\u548c\u7ec6\u8282\u5c55\u793a\uff0c\u5e76\u6539\u8fdb\u4e86\u5de5\u5177\u7684\u53ef\u8bfb\u6027\u548c\u7528\u6237\u4f53\u9a8c\u3002", "result": "\u7528\u6237\u6d4b\u8bd5\u8bc1\u5b9e\u4e86\u5de5\u5177\u6f5c\u529b\uff0c\u4f46\u4e5f\u63ed\u793a\u4e86\u53ef\u8bfb\u6027\u548c\u7528\u6237\u4f53\u9a8c\u95ee\u9898\uff0c\u540e\u7eed\u7248\u672c\u8fdb\u884c\u4e86\u6539\u8fdb\u3002", "conclusion": "\u6539\u8fdb\u540e\u7684Helveg\u5de5\u5177\u901a\u8fc7\u91cd\u65b0\u8bbe\u8ba1\u7528\u6237\u754c\u9762\u548c\u4ea4\u4e92\u65b9\u5f0f\uff0c\u663e\u8457\u63d0\u5347\u4e86\u4ee3\u7801\u5e93\u63a2\u7d22\u7684\u6548\u7387\u548c\u4f53\u9a8c\u3002"}}
{"id": "2507.10305", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.10305", "abs": "https://arxiv.org/abs/2507.10305", "authors": ["Linus Ververs", "Trang Linh Lam", "Janina Berger", "Lutz Prechelt"], "title": "A Grounded Theory on the Teacher and Student Roles in Pair Programming", "comment": null, "summary": "Context: Pair programming is an established (agile) practice and is practiced\nthroughout the industry. Objective: Understand under what circumstances\nknowledge transfer can harm a pair programming session. Method: Grounded Theory\nMethodology based on 17 recorded pair programming sessions with 18 developers\nfrom 5 German software companies accompanied, by 6 interviews with different\ndevelopers from 4 other German companies. Results: We define the student and\nteacher roles to help developers deal with a one-sided knowledge gap. We\ndescribe pitfalls to avoid and develop a grounded theory centered around the\nPower Gap in pair programming. Conclusions: Knowledge transfer can be harmful\nwhen developers don't pay attention to their partners needs and desires. If\ndevelopers don't pay attention to the Power Gap and keep it in check, Defensive\nBehavior may arise that leads to a vicious cycle impacting the knowledge\ntransfer, the Togetherness and the code quality in a negative way.", "AI": {"tldr": "\u7814\u7a76\u63a2\u8ba8\u4e86\u77e5\u8bc6\u8f6c\u79fb\u5728\u7ed3\u5bf9\u7f16\u7a0b\u4e2d\u7684\u8d1f\u9762\u5f71\u54cd\uff0c\u63d0\u51fa\u4e86\u201c\u6743\u529b\u5dee\u8ddd\u201d\u7406\u8bba\uff0c\u5e76\u6307\u51fa\u5ffd\u89c6\u4f19\u4f34\u9700\u6c42\u53ef\u80fd\u5bfc\u81f4\u9632\u5fa1\u884c\u4e3a\u3002", "motivation": "\u7406\u89e3\u77e5\u8bc6\u8f6c\u79fb\u5728\u4f55\u79cd\u60c5\u51b5\u4e0b\u4f1a\u635f\u5bb3\u7ed3\u5bf9\u7f16\u7a0b\u7684\u6548\u679c\u3002", "method": "\u57fa\u4e8e17\u6b21\u7ed3\u5bf9\u7f16\u7a0b\u8bb0\u5f55\u548c6\u6b21\u8bbf\u8c08\uff0c\u91c7\u7528\u624e\u6839\u7406\u8bba\u65b9\u6cd5\u3002", "result": "\u5b9a\u4e49\u4e86\u5b66\u751f\u548c\u6559\u5e08\u89d2\u8272\uff0c\u63d0\u51fa\u4e86\u6743\u529b\u5dee\u8ddd\u7406\u8bba\uff0c\u5e76\u63cf\u8ff0\u4e86\u907f\u514d\u7684\u9677\u9631\u3002", "conclusion": "\u5ffd\u89c6\u6743\u529b\u5dee\u8ddd\u548c\u4f19\u4f34\u9700\u6c42\u53ef\u80fd\u5bfc\u81f4\u9632\u5fa1\u884c\u4e3a\uff0c\u8d1f\u9762\u5f71\u54cd\u77e5\u8bc6\u8f6c\u79fb\u3001\u534f\u4f5c\u548c\u4ee3\u7801\u8d28\u91cf\u3002"}}
{"id": "2507.10321", "categories": ["cs.SE", "cs.SY", "eess.SY"], "pdf": "https://arxiv.org/pdf/2507.10321", "abs": "https://arxiv.org/abs/2507.10321", "authors": ["Viktor Sinitsyn", "Nils Schlautmann", "Florian Schwaiger", "Florian Holzapfel"], "title": "Streamlined Airborne Software Development for Large UAVs: From Unified Data Collection to Automated Code Generation", "comment": null, "summary": "The aerospace industry has experienced significant transformations over the\nlast decade, driven by technological advancements and innovative solutions in\ngoods and personal transportation. This evolution has spurred the emergence of\nnumerous start-ups that now face challenges traditionally encountered by\nestablished aerospace companies. Among these challenges is the efficient\nprocessing of digital intra-device communication interfaces for onboard\nequipment - a critical component for ensuring seamless system integration and\nfunctionality. Addressing this challenge requires solutions that emphasize\nclear and consistent interface descriptions, automation of processes, and\nreduced labor-intensive efforts.\n  This paper presents a novel process and toolchain designed to streamline the\ndevelopment of digital interfaces and onboard software, which our team has\nsuccessfully applied in several completed projects. The proposed approach\nfocuses on automation and flexibility while maintaining compliance with design\nassurance requirements.", "AI": {"tldr": "\u672c\u6587\u63d0\u51fa\u4e86\u4e00\u79cd\u65b0\u9896\u7684\u6d41\u7a0b\u548c\u5de5\u5177\u94fe\uff0c\u65e8\u5728\u4f18\u5316\u6570\u5b57\u63a5\u53e3\u548c\u673a\u8f7d\u8f6f\u4ef6\u7684\u5f00\u53d1\uff0c\u901a\u8fc7\u81ea\u52a8\u5316\u548c\u7075\u6d3b\u6027\u6ee1\u8db3\u8bbe\u8ba1\u4fdd\u8bc1\u8981\u6c42\u3002", "motivation": "\u822a\u7a7a\u822a\u5929\u884c\u4e1a\u7684\u6280\u672f\u8fdb\u6b65\u548c\u521b\u65b0\u89e3\u51b3\u65b9\u6848\u5e26\u6765\u4e86\u65b0\u6311\u6218\uff0c\u5c24\u5176\u662f\u6570\u5b57\u8bbe\u5907\u95f4\u901a\u4fe1\u63a5\u53e3\u7684\u9ad8\u6548\u5904\u7406\u95ee\u9898\u3002", "method": "\u63d0\u51fa\u4e86\u4e00\u79cd\u81ea\u52a8\u5316\u4e14\u7075\u6d3b\u7684\u6d41\u7a0b\u548c\u5de5\u5177\u94fe\uff0c\u7528\u4e8e\u5f00\u53d1\u6570\u5b57\u63a5\u53e3\u548c\u673a\u8f7d\u8f6f\u4ef6\u3002", "result": "\u8be5\u65b9\u6cd5\u5df2\u5728\u591a\u4e2a\u9879\u76ee\u4e2d\u6210\u529f\u5e94\u7528\u3002", "conclusion": "\u8be5\u89e3\u51b3\u65b9\u6848\u901a\u8fc7\u81ea\u52a8\u5316\u548c\u7075\u6d3b\u6027\uff0c\u6709\u6548\u89e3\u51b3\u4e86\u6570\u5b57\u63a5\u53e3\u5f00\u53d1\u7684\u6311\u6218\uff0c\u540c\u65f6\u6ee1\u8db3\u8bbe\u8ba1\u4fdd\u8bc1\u8981\u6c42\u3002"}}
{"id": "2507.10338", "categories": ["cs.SE", "cs.AR", "cs.LO"], "pdf": "https://arxiv.org/pdf/2507.10338", "abs": "https://arxiv.org/abs/2507.10338", "authors": ["Enyuan Tian", "Yiwei Ci", "Qiusong Yang", "Yufeng Li", "Zhichao Lyu"], "title": "AssertCoder: LLM-Based Assertion Generation via Multimodal Specification Extraction", "comment": "7 pages, 3 figures", "summary": "Assertion-Based Verification (ABV) is critical for ensuring functional\ncorrectness in modern hardware systems. However, manually writing high-quality\nSVAs remains labor-intensive and error-prone. To bridge this gap, we propose\nAssertCoder, a novel unified framework that automatically generates\nhigh-quality SVAs directly from multimodal hardware design specifications.\nAssertCoder employs a modality-sensitive preprocessing to parse heterogeneous\nspecification formats (text, tables, diagrams, and formulas), followed by a set\nof dedicated semantic analyzers that extract structured representations aligned\nwith signal-level semantics. These representations are utilized to drive\nassertion synthesis via multi-step chain-of-thought (CoT) prompting. The\nframework incorporates a mutation-based evaluation approach to assess assertion\nquality via model checking and further refine the generated assertions.\nExperimental evaluation across three real-world Register-Transfer Level (RTL)\ndesigns demonstrates AssertCoder's superior performance, achieving an average\nincrease of 8.4% in functional correctness and 5.8% in mutation detection\ncompared to existing state-of-the-art approaches.", "AI": {"tldr": "AssertCoder\u662f\u4e00\u4e2a\u81ea\u52a8\u5316\u751f\u6210\u9ad8\u8d28\u91cfSVAs\u7684\u7edf\u4e00\u6846\u67b6\uff0c\u901a\u8fc7\u591a\u6a21\u6001\u786c\u4ef6\u8bbe\u8ba1\u89c4\u8303\u76f4\u63a5\u751f\u6210\u65ad\u8a00\uff0c\u663e\u8457\u63d0\u5347\u529f\u80fd\u6b63\u786e\u6027\u548c\u7a81\u53d8\u68c0\u6d4b\u80fd\u529b\u3002", "motivation": "\u624b\u52a8\u7f16\u5199\u9ad8\u8d28\u91cfSVAs\u8017\u65f6\u4e14\u6613\u9519\uff0cAssertCoder\u65e8\u5728\u586b\u8865\u8fd9\u4e00\u7a7a\u767d\u3002", "method": "\u91c7\u7528\u6a21\u6001\u654f\u611f\u9884\u5904\u7406\u89e3\u6790\u591a\u6a21\u6001\u89c4\u8303\uff0c\u901a\u8fc7\u8bed\u4e49\u5206\u6790\u5668\u63d0\u53d6\u7ed3\u6784\u5316\u8868\u793a\uff0c\u5229\u7528\u591a\u6b65\u94fe\u5f0f\u601d\u7ef4\u63d0\u793a\u751f\u6210\u65ad\u8a00\uff0c\u5e76\u901a\u8fc7\u57fa\u4e8e\u7a81\u53d8\u7684\u8bc4\u4f30\u4f18\u5316\u65ad\u8a00\u8d28\u91cf\u3002", "result": "\u5728\u4e09\u4e2a\u771f\u5b9eRTL\u8bbe\u8ba1\u4e2d\uff0cAssertCoder\u5e73\u5747\u63d0\u5347\u529f\u80fd\u6b63\u786e\u60278.4%\uff0c\u7a81\u53d8\u68c0\u6d4b\u80fd\u529b5.8%\u3002", "conclusion": "AssertCoder\u663e\u8457\u4f18\u4e8e\u73b0\u6709\u65b9\u6cd5\uff0c\u4e3a\u786c\u4ef6\u8bbe\u8ba1\u9a8c\u8bc1\u63d0\u4f9b\u4e86\u9ad8\u6548\u81ea\u52a8\u5316\u89e3\u51b3\u65b9\u6848\u3002"}}
{"id": "2507.10422", "categories": ["cs.SE"], "pdf": "https://arxiv.org/pdf/2507.10422", "abs": "https://arxiv.org/abs/2507.10422", "authors": ["Tao Xiao", "Youmei Fan", "Fabio Calefato", "Christoph Treude", "Raula Gaikovina Kula", "Hideaki Hata", "Sebastian Baltes"], "title": "Self-Admitted GenAI Usage in Open-Source Software", "comment": "17 pages, 8 tables, 1 figures, currently under review", "summary": "The widespread adoption of generative AI (GenAI) tools such as GitHub Copilot\nand ChatGPT is transforming software development. Since generated source code\nis virtually impossible to distinguish from manually written code, their\nreal-world usage and impact on open-source software development remain poorly\nunderstood. In this paper, we introduce the concept of self-admitted GenAI\nusage, that is, developers explicitly referring to the use of GenAI tools for\ncontent creation in software artifacts. Using this concept as a lens to study\nhow GenAI tools are integrated into open-source software projects, we analyze a\ncurated sample of more than 250,000 GitHub repositories, identifying 1,292 such\nself-admissions across 156 repositories in commit messages, code comments, and\nproject documentation. Using a mixed methods approach, we derive a taxonomy of\n32 tasks, 10 content types, and 11 purposes associated with GenAI usage based\non 284 qualitatively coded mentions. We then analyze 13 documents with policies\nand usage guidelines for GenAI tools and conduct a developer survey to uncover\nthe ethical, legal, and practical concerns behind them. Our findings reveal\nthat developers actively manage how GenAI is used in their projects,\nhighlighting the need for project-level transparency, attribution, and quality\ncontrol practices in the new era of AI-assisted software development. Finally,\nwe examine the longitudinal impact of GenAI adoption on code churn in 151\nrepositories with self-admitted GenAI usage and find no general increase,\ncontradicting popular narratives on the impact of GenAI on software\ndevelopment.", "AI": {"tldr": "\u7814\u7a76\u901a\u8fc7\u5f00\u53d1\u8005\u81ea\u6211\u627f\u8ba4\u4f7f\u7528\u751f\u6210\u5f0fAI\uff08GenAI\uff09\u5de5\u5177\u7684\u884c\u4e3a\uff0c\u5206\u6790\u4e8625\u4e07\u4e2aGitHub\u4ed3\u5e93\uff0c\u63ed\u793a\u4e86GenAI\u5728\u5f00\u6e90\u9879\u76ee\u4e2d\u7684\u4efb\u52a1\u3001\u5185\u5bb9\u548c\u76ee\u7684\u5206\u7c7b\uff0c\u5e76\u63a2\u8ba8\u4e86\u4f26\u7406\u3001\u6cd5\u5f8b\u548c\u5b9e\u8df5\u95ee\u9898\u3002", "motivation": "\u751f\u6210\u5f0fAI\u5de5\u5177\uff08\u5982GitHub Copilot\u548cChatGPT\uff09\u7684\u5e7f\u6cdb\u4f7f\u7528\u6b63\u5728\u6539\u53d8\u8f6f\u4ef6\u5f00\u53d1\uff0c\u4f46\u5176\u5b9e\u9645\u5f71\u54cd\u5c1a\u4e0d\u660e\u786e\u3002", "method": "\u901a\u8fc7\u5206\u679025\u4e07\u4e2aGitHub\u4ed3\u5e93\u4e2d\u76841,292\u4e2a\u81ea\u6211\u627f\u8ba4\u4f7f\u7528GenAI\u7684\u8bb0\u5f55\uff0c\u7ed3\u5408\u5b9a\u6027\u7f16\u7801\u3001\u653f\u7b56\u5206\u6790\u548c\u5f00\u53d1\u8005\u8c03\u67e5\u3002", "result": "\u5f00\u53d1\u8005\u79ef\u6781\u7ba1\u7406GenAI\u7684\u4f7f\u7528\uff0c\u672a\u53d1\u73b0GenAI\u5bfc\u81f4\u4ee3\u7801\u53d8\u66f4\u589e\u52a0\u7684\u666e\u904d\u73b0\u8c61\u3002", "conclusion": "\u7814\u7a76\u5f3a\u8c03\u4e86\u5728AI\u8f85\u52a9\u8f6f\u4ef6\u5f00\u53d1\u4e2d\u9879\u76ee\u7ea7\u900f\u660e\u5ea6\u3001\u5f52\u5c5e\u548c\u8d28\u91cf\u63a7\u5236\u7684\u5fc5\u8981\u6027\u3002"}}
